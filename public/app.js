/*! For license information please see app.js.LICENSE.txt */
(()=>{"use strict";const e="160",t=0,n=1,r=2,s=100,a=101,i=102,o=200,l=201,u=202,c=203,h=204,d=205,p=206,m=207,f=208,g=209,y=210,b=211,x=212,v=213,w=214,S=301,T=302,_=306,I=1e3,C=1001,M=1002,E=1003,N=1004,k=1005,R=1006,L=1007,A=1008,P=1009,D=1012,O=1014,G=1015,z=1016,F=1020,W=1023,V=1026,U=1027,B=33776,X=33777,$=33778,H=33779,Z=36492,K=2300,j=2301,Y=2302,Q=3001,J="",q="srgb",ee="srgb-linear",te="display-p3",ne="display-p3-linear",re="linear",se="srgb",ae="rec709",ie="p3",oe=7680,le=512,ue=513,ce=514,he=515,de=516,pe=517,me=518,fe=519,ge="300 es",ye=1035,be=2e3,xe=2001;class ve{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,r=n.length;t<r;t++)n[t].call(this,e);e.target=null}}}const we=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Se=Math.PI/180,Te=180/Math.PI;function _e(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(we[255&e]+we[e>>8&255]+we[e>>16&255]+we[e>>24&255]+"-"+we[255&t]+we[t>>8&255]+"-"+we[t>>16&15|64]+we[t>>24&255]+"-"+we[63&n|128]+we[n>>8&255]+"-"+we[n>>16&255]+we[n>>24&255]+we[255&r]+we[r>>8&255]+we[r>>16&255]+we[r>>24&255]).toLowerCase()}function Ie(e,t,n){return Math.max(t,Math.min(n,e))}function Ce(e,t,n){return(1-n)*e+n*t}function Me(e){return!(e&e-1)&&0!==e}function Ee(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Ne(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function ke(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(4294967295*e);case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int32Array:return Math.round(2147483647*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}class Re{constructor(e=0,t=0){Re.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ie(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,a=this.y-e.y;return this.x=s*n-a*r+e.x,this.y=s*r+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Le{constructor(e,t,n,r,s,a,i,o,l){Le.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==e&&this.set(e,t,n,r,s,a,i,o,l)}set(e,t,n,r,s,a,i,o,l){const u=this.elements;return u[0]=e,u[1]=r,u[2]=i,u[3]=t,u[4]=s,u[5]=o,u[6]=n,u[7]=a,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,a=n[0],i=n[3],o=n[6],l=n[1],u=n[4],c=n[7],h=n[2],d=n[5],p=n[8],m=r[0],f=r[3],g=r[6],y=r[1],b=r[4],x=r[7],v=r[2],w=r[5],S=r[8];return s[0]=a*m+i*y+o*v,s[3]=a*f+i*b+o*w,s[6]=a*g+i*x+o*S,s[1]=l*m+u*y+c*v,s[4]=l*f+u*b+c*w,s[7]=l*g+u*x+c*S,s[2]=h*m+d*y+p*v,s[5]=h*f+d*b+p*w,s[8]=h*g+d*x+p*S,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],a=e[4],i=e[5],o=e[6],l=e[7],u=e[8];return t*a*u-t*i*l-n*s*u+n*i*o+r*s*l-r*a*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],a=e[4],i=e[5],o=e[6],l=e[7],u=e[8],c=u*a-i*l,h=i*o-u*s,d=l*s-a*o,p=t*c+n*h+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=c*m,e[1]=(r*l-u*n)*m,e[2]=(i*n-r*a)*m,e[3]=h*m,e[4]=(u*t-r*o)*m,e[5]=(r*s-i*t)*m,e[6]=d*m,e[7]=(n*o-l*t)*m,e[8]=(a*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,a,i){const o=Math.cos(s),l=Math.sin(s);return this.set(n*o,n*l,-n*(o*a+l*i)+a+e,-r*l,r*o,-r*(-l*a+o*i)+i+t,0,0,1),this}scale(e,t){return this.premultiply(Ae.makeScale(e,t)),this}rotate(e){return this.premultiply(Ae.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ae.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const Ae=new Le;function Pe(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function De(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Oe(){const e=De("canvas");return e.style.display="block",e}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Ge={};function ze(e){e in Ge||(Ge[e]=!0,console.warn(e))}const Fe=(new Le).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),We=(new Le).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Ve={[ee]:{transfer:re,primaries:ae,toReference:e=>e,fromReference:e=>e},[q]:{transfer:se,primaries:ae,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[ne]:{transfer:re,primaries:ie,toReference:e=>e.applyMatrix3(We),fromReference:e=>e.applyMatrix3(Fe)},[te]:{transfer:se,primaries:ie,toReference:e=>e.convertSRGBToLinear().applyMatrix3(We),fromReference:e=>e.applyMatrix3(Fe).convertLinearToSRGB()}},Ue=new Set([ee,ne]),Be={enabled:!0,_workingColorSpace:ee,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(e){if(!Ue.has(e))throw new Error(`Unsupported working color space, "${e}".`);this._workingColorSpace=e},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;const r=Ve[t].toReference;return(0,Ve[n].fromReference)(r(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return Ve[e].primaries},getTransfer:function(e){return e===J?re:Ve[e].transfer}};function Xe(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function $e(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}let He;class Ze{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===He&&(He=De("canvas")),He.width=e.width,He.height=e.height;const n=He.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=He}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=De("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let e=0;e<s.length;e++)s[e]=255*Xe(s[e]/255);return n.putImageData(r,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Xe(t[e]/255)):t[e]=Xe(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Ke=0;class je{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Ke++}),this.uuid=_e(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(null!==r){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(Ye(r[t].image)):e.push(Ye(r[t]))}else e=Ye(r);n.url=e}return t||(e.images[this.uuid]=n),n}}function Ye(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Ze.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Qe=0;class Je extends ve{constructor(e=Je.DEFAULT_IMAGE,t=Je.DEFAULT_MAPPING,n=1001,r=1001,s=1006,a=1008,i=1023,o=1009,l=Je.DEFAULT_ANISOTROPY,u=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Qe++}),this.uuid=_e(),this.name="",this.source=new je(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=a,this.anisotropy=l,this.format=i,this.internalFormat=null,this.type=o,this.offset=new Re(0,0),this.repeat=new Re(1,1),this.center=new Re(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Le,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof u?this.colorSpace=u:(ze("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===Q?q:J),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case I:e.x=e.x-Math.floor(e.x);break;case C:e.x=e.x<0?0:1;break;case M:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case I:e.y=e.y-Math.floor(e.y);break;case C:e.y=e.y<0?0:1;break;case M:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ze("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===q?Q:3e3}set encoding(e){ze("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Q?q:J}}Je.DEFAULT_IMAGE=null,Je.DEFAULT_MAPPING=300,Je.DEFAULT_ANISOTROPY=1;class qe{constructor(e=0,t=0,n=0,r=1){qe.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*s,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*s,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*s,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const a=.01,i=.1,o=e.elements,l=o[0],u=o[4],c=o[8],h=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(u-h)<a&&Math.abs(c-m)<a&&Math.abs(p-f)<a){if(Math.abs(u+h)<i&&Math.abs(c+m)<i&&Math.abs(p+f)<i&&Math.abs(l+d+g-3)<i)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,o=(d+1)/2,y=(g+1)/2,b=(u+h)/4,x=(c+m)/4,v=(p+f)/4;return e>o&&e>y?e<a?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(e),r=b/n,s=x/n):o>y?o<a?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(o),n=b/r,s=v/r):y<a?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(y),n=x/s,r=v/s),this.set(n,r,s,t),this}let y=Math.sqrt((f-p)*(f-p)+(c-m)*(c-m)+(h-u)*(h-u));return Math.abs(y)<.001&&(y=1),this.x=(f-p)/y,this.y=(c-m)/y,this.z=(h-u)/y,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class et extends ve{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new qe(0,0,e,t),this.scissorTest=!1,this.viewport=new qe(0,0,e,t);const r={width:e,height:t,depth:1};void 0!==n.encoding&&(ze("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Q?q:J),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:R,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Je(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new je(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class tt extends et{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class nt extends Je{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=E,this.minFilter=E,this.wrapR=C,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class rt extends Je{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=E,this.minFilter=E,this.wrapR=C,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class st{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,a,i){let o=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3];const h=s[a+0],d=s[a+1],p=s[a+2],m=s[a+3];if(0===i)return e[t+0]=o,e[t+1]=l,e[t+2]=u,void(e[t+3]=c);if(1===i)return e[t+0]=h,e[t+1]=d,e[t+2]=p,void(e[t+3]=m);if(c!==m||o!==h||l!==d||u!==p){let e=1-i;const t=o*h+l*d+u*p+c*m,n=t>=0?1:-1,r=1-t*t;if(r>Number.EPSILON){const s=Math.sqrt(r),a=Math.atan2(s,t*n);e=Math.sin(e*a)/s,i=Math.sin(i*a)/s}const s=i*n;if(o=o*e+h*s,l=l*e+d*s,u=u*e+p*s,c=c*e+m*s,e===1-i){const e=1/Math.sqrt(o*o+l*l+u*u+c*c);o*=e,l*=e,u*=e,c*=e}}e[t]=o,e[t+1]=l,e[t+2]=u,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,r,s,a){const i=n[r],o=n[r+1],l=n[r+2],u=n[r+3],c=s[a],h=s[a+1],d=s[a+2],p=s[a+3];return e[t]=i*p+u*c+o*d-l*h,e[t+1]=o*p+u*h+l*c-i*d,e[t+2]=l*p+u*d+i*h-o*c,e[t+3]=u*p-i*c-o*h-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,a=e._order,i=Math.cos,o=Math.sin,l=i(n/2),u=i(r/2),c=i(s/2),h=o(n/2),d=o(r/2),p=o(s/2);switch(a){case"XYZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"YXZ":this._x=h*u*c+l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"ZXY":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c-h*d*p;break;case"ZYX":this._x=h*u*c-l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c+h*d*p;break;case"YZX":this._x=h*u*c+l*d*p,this._y=l*d*c+h*u*p,this._z=l*u*p-h*d*c,this._w=l*u*c-h*d*p;break;case"XZY":this._x=h*u*c-l*d*p,this._y=l*d*c-h*u*p,this._z=l*u*p+h*d*c,this._w=l*u*c+h*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!0===t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],a=t[1],i=t[5],o=t[9],l=t[2],u=t[6],c=t[10],h=n+i+c;if(h>0){const e=.5/Math.sqrt(h+1);this._w=.25/e,this._x=(u-o)*e,this._y=(s-l)*e,this._z=(a-r)*e}else if(n>i&&n>c){const e=2*Math.sqrt(1+n-i-c);this._w=(u-o)/e,this._x=.25*e,this._y=(r+a)/e,this._z=(s+l)/e}else if(i>c){const e=2*Math.sqrt(1+i-n-c);this._w=(s-l)/e,this._x=(r+a)/e,this._y=.25*e,this._z=(o+u)/e}else{const e=2*Math.sqrt(1+c-n-i);this._w=(a-r)/e,this._x=(s+l)/e,this._y=(o+u)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ie(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,a=e._w,i=t._x,o=t._y,l=t._z,u=t._w;return this._x=n*u+a*i+r*l-s*o,this._y=r*u+a*o+s*i-n*l,this._z=s*u+a*l+n*o-r*i,this._w=a*u-n*i-r*o-s*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,r=this._y,s=this._z,a=this._w;let i=a*e._w+n*e._x+r*e._y+s*e._z;if(i<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,i=-i):this.copy(e),i>=1)return this._w=a,this._x=n,this._y=r,this._z=s,this;const o=1-i*i;if(o<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*r+t*this._y,this._z=e*s+t*this._z,this.normalize(),this}const l=Math.sqrt(o),u=Math.atan2(l,i),c=Math.sin((1-t)*u)/l,h=Math.sin(t*u)/l;return this._w=a*c+this._w*h,this._x=n*c+this._x*h,this._y=r*c+this._y*h,this._z=s*c+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(s),n*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class at{constructor(e=0,t=0,n=0){at.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ot.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ot.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,a=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*a,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*a,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,a=e.y,i=e.z,o=e.w,l=2*(a*r-i*n),u=2*(i*t-s*r),c=2*(s*n-a*t);return this.x=t+o*l+a*c-i*u,this.y=n+o*u+i*l-s*c,this.z=r+o*c+s*u-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,a=t.x,i=t.y,o=t.z;return this.x=r*o-s*i,this.y=s*a-n*o,this.z=n*i-r*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return it.copy(this).projectOnVector(e),this.sub(it)}reflect(e){return this.sub(it.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ie(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const it=new at,ot=new st;class lt{constructor(e=new at(1/0,1/0,1/0),t=new at(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ct.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ct.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ct.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(void 0!==n){const r=n.getAttribute("position");if(!0===t&&void 0!==r&&!0!==e.isInstancedMesh)for(let t=0,n=r.count;t<n;t++)!0===e.isMesh?e.getVertexPosition(t,ct):ct.fromBufferAttribute(r,t),ct.applyMatrix4(e.matrixWorld),this.expandByPoint(ct);else void 0!==e.boundingBox?(null===e.boundingBox&&e.computeBoundingBox(),ht.copy(e.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),ht.copy(n.boundingBox)),ht.applyMatrix4(e.matrixWorld),this.union(ht)}const r=e.children;for(let e=0,n=r.length;e<n;e++)this.expandByObject(r[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ct),ct.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(bt),xt.subVectors(this.max,bt),dt.subVectors(e.a,bt),pt.subVectors(e.b,bt),mt.subVectors(e.c,bt),ft.subVectors(pt,dt),gt.subVectors(mt,pt),yt.subVectors(dt,mt);let t=[0,-ft.z,ft.y,0,-gt.z,gt.y,0,-yt.z,yt.y,ft.z,0,-ft.x,gt.z,0,-gt.x,yt.z,0,-yt.x,-ft.y,ft.x,0,-gt.y,gt.x,0,-yt.y,yt.x,0];return!!St(t,dt,pt,mt,xt)&&(t=[1,0,0,0,1,0,0,0,1],!!St(t,dt,pt,mt,xt)&&(vt.crossVectors(ft,gt),t=[vt.x,vt.y,vt.z],St(t,dt,pt,mt,xt)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ct).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(ct).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(ut[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ut[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ut[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ut[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ut[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ut[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ut[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ut[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ut)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ut=[new at,new at,new at,new at,new at,new at,new at,new at],ct=new at,ht=new lt,dt=new at,pt=new at,mt=new at,ft=new at,gt=new at,yt=new at,bt=new at,xt=new at,vt=new at,wt=new at;function St(e,t,n,r,s){for(let a=0,i=e.length-3;a<=i;a+=3){wt.fromArray(e,a);const i=s.x*Math.abs(wt.x)+s.y*Math.abs(wt.y)+s.z*Math.abs(wt.z),o=t.dot(wt),l=n.dot(wt),u=r.dot(wt);if(Math.max(-Math.max(o,l,u),Math.min(o,l,u))>i)return!1}return!0}const Tt=new lt,_t=new at,It=new at;class Ct{constructor(e=new at,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):Tt.setFromPoints(e).getCenter(n);let r=0;for(let t=0,s=e.length;t<s;t++)r=Math.max(r,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_t.subVectors(e,this.center);const t=_t.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(_t,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(It.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_t.copy(e.center).add(It)),this.expandByPoint(_t.copy(e.center).sub(It))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Mt=new at,Et=new at,Nt=new at,kt=new at,Rt=new at,Lt=new at,At=new at;class Pt{constructor(e=new at,t=new at(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Mt)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Mt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Mt.copy(this.origin).addScaledVector(this.direction,t),Mt.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Et.copy(e).add(t).multiplyScalar(.5),Nt.copy(t).sub(e).normalize(),kt.copy(this.origin).sub(Et);const s=.5*e.distanceTo(t),a=-this.direction.dot(Nt),i=kt.dot(this.direction),o=-kt.dot(Nt),l=kt.lengthSq(),u=Math.abs(1-a*a);let c,h,d,p;if(u>0)if(c=a*o-i,h=a*i-o,p=s*u,c>=0)if(h>=-p)if(h<=p){const e=1/u;c*=e,h*=e,d=c*(c+a*h+2*i)+h*(a*c+h+2*o)+l}else h=s,c=Math.max(0,-(a*h+i)),d=-c*c+h*(h+2*o)+l;else h=-s,c=Math.max(0,-(a*h+i)),d=-c*c+h*(h+2*o)+l;else h<=-p?(c=Math.max(0,-(-a*s+i)),h=c>0?-s:Math.min(Math.max(-s,-o),s),d=-c*c+h*(h+2*o)+l):h<=p?(c=0,h=Math.min(Math.max(-s,-o),s),d=h*(h+2*o)+l):(c=Math.max(0,-(a*s+i)),h=c>0?s:Math.min(Math.max(-s,-o),s),d=-c*c+h*(h+2*o)+l);else h=a>0?-s:s,c=Math.max(0,-(a*h+i)),d=-c*c+h*(h+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,c),r&&r.copy(Et).addScaledVector(Nt,h),d}intersectSphere(e,t){Mt.subVectors(e.center,this.origin);const n=Mt.dot(this.direction),r=Mt.dot(Mt)-n*n,s=e.radius*e.radius;if(r>s)return null;const a=Math.sqrt(s-r),i=n-a,o=n+a;return o<0?null:i<0?this.at(o,t):this.at(i,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,a,i,o;const l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,h=this.origin;return l>=0?(n=(e.min.x-h.x)*l,r=(e.max.x-h.x)*l):(n=(e.max.x-h.x)*l,r=(e.min.x-h.x)*l),u>=0?(s=(e.min.y-h.y)*u,a=(e.max.y-h.y)*u):(s=(e.max.y-h.y)*u,a=(e.min.y-h.y)*u),n>a||s>r?null:((s>n||isNaN(n))&&(n=s),(a<r||isNaN(r))&&(r=a),c>=0?(i=(e.min.z-h.z)*c,o=(e.max.z-h.z)*c):(i=(e.max.z-h.z)*c,o=(e.min.z-h.z)*c),n>o||i>r?null:((i>n||n!=n)&&(n=i),(o<r||r!=r)&&(r=o),r<0?null:this.at(n>=0?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,Mt)}intersectTriangle(e,t,n,r,s){Rt.subVectors(t,e),Lt.subVectors(n,e),At.crossVectors(Rt,Lt);let a,i=this.direction.dot(At);if(i>0){if(r)return null;a=1}else{if(!(i<0))return null;a=-1,i=-i}kt.subVectors(this.origin,e);const o=a*this.direction.dot(Lt.crossVectors(kt,Lt));if(o<0)return null;const l=a*this.direction.dot(Rt.cross(kt));if(l<0)return null;if(o+l>i)return null;const u=-a*kt.dot(At);return u<0?null:this.at(u/i,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Dt{constructor(e,t,n,r,s,a,i,o,l,u,c,h,d,p,m,f){Dt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==e&&this.set(e,t,n,r,s,a,i,o,l,u,c,h,d,p,m,f)}set(e,t,n,r,s,a,i,o,l,u,c,h,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=a,g[9]=i,g[13]=o,g[2]=l,g[6]=u,g[10]=c,g[14]=h,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Dt).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Ot.setFromMatrixColumn(e,0).length(),s=1/Ot.setFromMatrixColumn(e,1).length(),a=1/Ot.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,a=Math.cos(n),i=Math.sin(n),o=Math.cos(r),l=Math.sin(r),u=Math.cos(s),c=Math.sin(s);if("XYZ"===e.order){const e=a*u,n=a*c,r=i*u,s=i*c;t[0]=o*u,t[4]=-o*c,t[8]=l,t[1]=n+r*l,t[5]=e-s*l,t[9]=-i*o,t[2]=s-e*l,t[6]=r+n*l,t[10]=a*o}else if("YXZ"===e.order){const e=o*u,n=o*c,r=l*u,s=l*c;t[0]=e+s*i,t[4]=r*i-n,t[8]=a*l,t[1]=a*c,t[5]=a*u,t[9]=-i,t[2]=n*i-r,t[6]=s+e*i,t[10]=a*o}else if("ZXY"===e.order){const e=o*u,n=o*c,r=l*u,s=l*c;t[0]=e-s*i,t[4]=-a*c,t[8]=r+n*i,t[1]=n+r*i,t[5]=a*u,t[9]=s-e*i,t[2]=-a*l,t[6]=i,t[10]=a*o}else if("ZYX"===e.order){const e=a*u,n=a*c,r=i*u,s=i*c;t[0]=o*u,t[4]=r*l-n,t[8]=e*l+s,t[1]=o*c,t[5]=s*l+e,t[9]=n*l-r,t[2]=-l,t[6]=i*o,t[10]=a*o}else if("YZX"===e.order){const e=a*o,n=a*l,r=i*o,s=i*l;t[0]=o*u,t[4]=s-e*c,t[8]=r*c+n,t[1]=c,t[5]=a*u,t[9]=-i*u,t[2]=-l*u,t[6]=n*c+r,t[10]=e-s*c}else if("XZY"===e.order){const e=a*o,n=a*l,r=i*o,s=i*l;t[0]=o*u,t[4]=-c,t[8]=l*u,t[1]=e*c+s,t[5]=a*u,t[9]=n*c-r,t[2]=r*c-n,t[6]=i*u,t[10]=s*c+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(zt,e,Ft)}lookAt(e,t,n){const r=this.elements;return Ut.subVectors(e,t),0===Ut.lengthSq()&&(Ut.z=1),Ut.normalize(),Wt.crossVectors(n,Ut),0===Wt.lengthSq()&&(1===Math.abs(n.z)?Ut.x+=1e-4:Ut.z+=1e-4,Ut.normalize(),Wt.crossVectors(n,Ut)),Wt.normalize(),Vt.crossVectors(Ut,Wt),r[0]=Wt.x,r[4]=Vt.x,r[8]=Ut.x,r[1]=Wt.y,r[5]=Vt.y,r[9]=Ut.y,r[2]=Wt.z,r[6]=Vt.z,r[10]=Ut.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,a=n[0],i=n[4],o=n[8],l=n[12],u=n[1],c=n[5],h=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],y=n[3],b=n[7],x=n[11],v=n[15],w=r[0],S=r[4],T=r[8],_=r[12],I=r[1],C=r[5],M=r[9],E=r[13],N=r[2],k=r[6],R=r[10],L=r[14],A=r[3],P=r[7],D=r[11],O=r[15];return s[0]=a*w+i*I+o*N+l*A,s[4]=a*S+i*C+o*k+l*P,s[8]=a*T+i*M+o*R+l*D,s[12]=a*_+i*E+o*L+l*O,s[1]=u*w+c*I+h*N+d*A,s[5]=u*S+c*C+h*k+d*P,s[9]=u*T+c*M+h*R+d*D,s[13]=u*_+c*E+h*L+d*O,s[2]=p*w+m*I+f*N+g*A,s[6]=p*S+m*C+f*k+g*P,s[10]=p*T+m*M+f*R+g*D,s[14]=p*_+m*E+f*L+g*O,s[3]=y*w+b*I+x*N+v*A,s[7]=y*S+b*C+x*k+v*P,s[11]=y*T+b*M+x*R+v*D,s[15]=y*_+b*E+x*L+v*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],a=e[1],i=e[5],o=e[9],l=e[13],u=e[2],c=e[6],h=e[10],d=e[14];return e[3]*(+s*o*c-r*l*c-s*i*h+n*l*h+r*i*d-n*o*d)+e[7]*(+t*o*d-t*l*h+s*a*h-r*a*d+r*l*u-s*o*u)+e[11]*(+t*l*c-t*i*d-s*a*c+n*a*d+s*i*u-n*l*u)+e[15]*(-r*i*u-t*o*c+t*i*h+r*a*c-n*a*h+n*o*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],a=e[4],i=e[5],o=e[6],l=e[7],u=e[8],c=e[9],h=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],y=c*f*l-m*h*l+m*o*d-i*f*d-c*o*g+i*h*g,b=p*h*l-u*f*l-p*o*d+a*f*d+u*o*g-a*h*g,x=u*m*l-p*c*l+p*i*d-a*m*d-u*i*g+a*c*g,v=p*c*o-u*m*o-p*i*h+a*m*h+u*i*f-a*c*f,w=t*y+n*b+r*x+s*v;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const S=1/w;return e[0]=y*S,e[1]=(m*h*s-c*f*s-m*r*d+n*f*d+c*r*g-n*h*g)*S,e[2]=(i*f*s-m*o*s+m*r*l-n*f*l-i*r*g+n*o*g)*S,e[3]=(c*o*s-i*h*s-c*r*l+n*h*l+i*r*d-n*o*d)*S,e[4]=b*S,e[5]=(u*f*s-p*h*s+p*r*d-t*f*d-u*r*g+t*h*g)*S,e[6]=(p*o*s-a*f*s-p*r*l+t*f*l+a*r*g-t*o*g)*S,e[7]=(a*h*s-u*o*s+u*r*l-t*h*l-a*r*d+t*o*d)*S,e[8]=x*S,e[9]=(p*c*s-u*m*s-p*n*d+t*m*d+u*n*g-t*c*g)*S,e[10]=(a*m*s-p*i*s+p*n*l-t*m*l-a*n*g+t*i*g)*S,e[11]=(u*i*s-a*c*s-u*n*l+t*c*l+a*n*d-t*i*d)*S,e[12]=v*S,e[13]=(u*m*r-p*c*r+p*n*h-t*m*h-u*n*f+t*c*f)*S,e[14]=(p*i*r-a*m*r-p*n*o+t*m*o+a*n*f-t*i*f)*S,e[15]=(a*c*r-u*i*r+u*n*o-t*c*o-a*n*h+t*i*h)*S,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,a=e.x,i=e.y,o=e.z,l=s*a,u=s*i;return this.set(l*a+n,l*i-r*o,l*o+r*i,0,l*i+r*o,u*i+n,u*o-r*a,0,l*o-r*i,u*o+r*a,s*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,a){return this.set(1,n,s,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,a=t._y,i=t._z,o=t._w,l=s+s,u=a+a,c=i+i,h=s*l,d=s*u,p=s*c,m=a*u,f=a*c,g=i*c,y=o*l,b=o*u,x=o*c,v=n.x,w=n.y,S=n.z;return r[0]=(1-(m+g))*v,r[1]=(d+x)*v,r[2]=(p-b)*v,r[3]=0,r[4]=(d-x)*w,r[5]=(1-(h+g))*w,r[6]=(f+y)*w,r[7]=0,r[8]=(p+b)*S,r[9]=(f-y)*S,r[10]=(1-(h+m))*S,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=Ot.set(r[0],r[1],r[2]).length();const a=Ot.set(r[4],r[5],r[6]).length(),i=Ot.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Gt.copy(this);const o=1/s,l=1/a,u=1/i;return Gt.elements[0]*=o,Gt.elements[1]*=o,Gt.elements[2]*=o,Gt.elements[4]*=l,Gt.elements[5]*=l,Gt.elements[6]*=l,Gt.elements[8]*=u,Gt.elements[9]*=u,Gt.elements[10]*=u,t.setFromRotationMatrix(Gt),n.x=s,n.y=a,n.z=i,this}makePerspective(e,t,n,r,s,a,i=2e3){const o=this.elements,l=2*s/(t-e),u=2*s/(n-r),c=(t+e)/(t-e),h=(n+r)/(n-r);let d,p;if(i===be)d=-(a+s)/(a-s),p=-2*a*s/(a-s);else{if(i!==xe)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+i);d=-a/(a-s),p=-a*s/(a-s)}return o[0]=l,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=u,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,r,s,a,i=2e3){const o=this.elements,l=1/(t-e),u=1/(n-r),c=1/(a-s),h=(t+e)*l,d=(n+r)*u;let p,m;if(i===be)p=(a+s)*c,m=-2*c;else{if(i!==xe)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+i);p=s*c,m=-1*c}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*u,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=m,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Ot=new at,Gt=new Dt,zt=new at(0,0,0),Ft=new at(1,1,1),Wt=new at,Vt=new at,Ut=new at,Bt=new Dt,Xt=new st;class $t{constructor(e=0,t=0,n=0,r=$t.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],a=r[4],i=r[8],o=r[1],l=r[5],u=r[9],c=r[2],h=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(Ie(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-a,s)):(this._x=Math.atan2(h,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ie(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(i,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ie(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,s));break;case"ZYX":this._y=Math.asin(-Ie(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(h,d),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Ie(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,s)):(this._x=0,this._y=Math.atan2(i,d));break;case"XZY":this._z=Math.asin(-Ie(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,l),this._y=Math.atan2(i,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Bt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Bt,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Xt.setFromEuler(this),this.setFromQuaternion(Xt,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}$t.DEFAULT_ORDER="XYZ";class Ht{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return!!(this.mask&e.mask)}isEnabled(e){return!!(this.mask&1<<e)}}let Zt=0;const Kt=new at,jt=new st,Yt=new Dt,Qt=new at,Jt=new at,qt=new at,en=new st,tn=new at(1,0,0),nn=new at(0,1,0),rn=new at(0,0,1),sn={type:"added"},an={type:"removed"};class on extends ve{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Zt++}),this.uuid=_e(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=on.DEFAULT_UP.clone();const e=new at,t=new $t,n=new st,r=new at(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Dt},normalMatrix:{value:new Le}}),this.matrix=new Dt,this.matrixWorld=new Dt,this.matrixAutoUpdate=on.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=on.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ht,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return jt.setFromAxisAngle(e,t),this.quaternion.multiply(jt),this}rotateOnWorldAxis(e,t){return jt.setFromAxisAngle(e,t),this.quaternion.premultiply(jt),this}rotateX(e){return this.rotateOnAxis(tn,e)}rotateY(e){return this.rotateOnAxis(nn,e)}rotateZ(e){return this.rotateOnAxis(rn,e)}translateOnAxis(e,t){return Kt.copy(e).applyQuaternion(this.quaternion),this.position.add(Kt.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(tn,e)}translateY(e){return this.translateOnAxis(nn,e)}translateZ(e){return this.translateOnAxis(rn,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Yt.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Qt.copy(e):Qt.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Jt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yt.lookAt(Jt,Qt,this.up):Yt.lookAt(Qt,Jt,this.up),this.quaternion.setFromRotationMatrix(Yt),r&&(Yt.extractRotation(r.matrixWorld),jt.setFromRotationMatrix(Yt),this.quaternion.premultiply(jt.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(sn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(an)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Yt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Yt.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yt),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,a=r.length;s<a;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jt,e,qt),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Jt,en,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const r=t[n];!0!==r.matrixWorldAutoUpdate&&!0!==e||r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};function s(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map((e=>({boxInitialized:e.boxInitialized,boxMin:e.box.min.toArray(),boxMax:e.box.max.toArray(),sphereInitialized:e.sphereInitialized,sphereRadius:e.sphere.radius,sphereCenter:e.sphere.center.toArray()}))),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),null!==this.boundingSphere&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),null!==this.boundingBox&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];s(e.shapes,r)}else s(e.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,r=this.material.length;n<r;n++)t.push(s(e.materials,this.material[n]));r.material=t}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let t=0;t<this.children.length;t++)r.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];r.animations.push(s(e.animations,n))}}if(t){const t=a(e.geometries),r=a(e.materials),s=a(e.textures),i=a(e.images),o=a(e.shapes),l=a(e.skeletons),u=a(e.animations),c=a(e.nodes);t.length>0&&(n.geometries=t),r.length>0&&(n.materials=r),s.length>0&&(n.textures=s),i.length>0&&(n.images=i),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),u.length>0&&(n.animations=u),c.length>0&&(n.nodes=c)}return n.object=r,n;function a(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}on.DEFAULT_UP=new at(0,1,0),on.DEFAULT_MATRIX_AUTO_UPDATE=!0,on.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ln=new at,un=new at,cn=new at,hn=new at,dn=new at,pn=new at,mn=new at,fn=new at,gn=new at,yn=new at;let bn=!1;class xn{constructor(e=new at,t=new at,n=new at){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),ln.subVectors(e,t),r.cross(ln);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){ln.subVectors(r,t),un.subVectors(n,t),cn.subVectors(e,t);const a=ln.dot(ln),i=ln.dot(un),o=ln.dot(cn),l=un.dot(un),u=un.dot(cn),c=a*l-i*i;if(0===c)return s.set(0,0,0),null;const h=1/c,d=(l*o-i*u)*h,p=(a*u-i*o)*h;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return null!==this.getBarycoord(e,t,n,r,hn)&&hn.x>=0&&hn.y>=0&&hn.x+hn.y<=1}static getUV(e,t,n,r,s,a,i,o){return!1===bn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),bn=!0),this.getInterpolation(e,t,n,r,s,a,i,o)}static getInterpolation(e,t,n,r,s,a,i,o){return null===this.getBarycoord(e,t,n,r,hn)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(s,hn.x),o.addScaledVector(a,hn.y),o.addScaledVector(i,hn.z),o)}static isFrontFacing(e,t,n,r){return ln.subVectors(n,t),un.subVectors(e,t),ln.cross(un).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ln.subVectors(this.c,this.b),un.subVectors(this.a,this.b),.5*ln.cross(un).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return xn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return xn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,s){return!1===bn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),bn=!0),xn.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}getInterpolation(e,t,n,r,s){return xn.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return xn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return xn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let a,i;dn.subVectors(r,n),pn.subVectors(s,n),fn.subVectors(e,n);const o=dn.dot(fn),l=pn.dot(fn);if(o<=0&&l<=0)return t.copy(n);gn.subVectors(e,r);const u=dn.dot(gn),c=pn.dot(gn);if(u>=0&&c<=u)return t.copy(r);const h=o*c-u*l;if(h<=0&&o>=0&&u<=0)return a=o/(o-u),t.copy(n).addScaledVector(dn,a);yn.subVectors(e,s);const d=dn.dot(yn),p=pn.dot(yn);if(p>=0&&d<=p)return t.copy(s);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return i=l/(l-p),t.copy(n).addScaledVector(pn,i);const f=u*p-d*c;if(f<=0&&c-u>=0&&d-p>=0)return mn.subVectors(s,r),i=(c-u)/(c-u+(d-p)),t.copy(r).addScaledVector(mn,i);const g=1/(f+m+h);return a=m*g,i=h*g,t.copy(n).addScaledVector(dn,a).addScaledVector(pn,i)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const vn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},wn={h:0,s:0,l:0},Sn={h:0,s:0,l:0};function Tn(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class _n{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(void 0===t&&void 0===n){const t=e;t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=q){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Be.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=Be.workingColorSpace){return this.r=e,this.g=t,this.b=n,Be.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=Be.workingColorSpace){if(e=function(e,t){return(e%t+t)%t}(e,1),t=Ie(t,0,1),n=Ie(n,0,1),0===t)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,s=2*n-r;this.r=Tn(s,r,e+1/3),this.g=Tn(s,r,e),this.b=Tn(s,r,e-1/3)}return Be.toWorkingColorSpace(this,r),this}setStyle(e,t=q){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const a=r[1],i=r[2];switch(a){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=r[1],s=n.length;if(3===s)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===s)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=q){const n=vn[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Xe(e.r),this.g=Xe(e.g),this.b=Xe(e.b),this}copyLinearToSRGB(e){return this.r=$e(e.r),this.g=$e(e.g),this.b=$e(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=q){return Be.fromWorkingColorSpace(In.copy(this),e),65536*Math.round(Ie(255*In.r,0,255))+256*Math.round(Ie(255*In.g,0,255))+Math.round(Ie(255*In.b,0,255))}getHexString(e=q){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Be.workingColorSpace){Be.fromWorkingColorSpace(In.copy(this),t);const n=In.r,r=In.g,s=In.b,a=Math.max(n,r,s),i=Math.min(n,r,s);let o,l;const u=(i+a)/2;if(i===a)o=0,l=0;else{const e=a-i;switch(l=u<=.5?e/(a+i):e/(2-a-i),a){case n:o=(r-s)/e+(r<s?6:0);break;case r:o=(s-n)/e+2;break;case s:o=(n-r)/e+4}o/=6}return e.h=o,e.s=l,e.l=u,e}getRGB(e,t=Be.workingColorSpace){return Be.fromWorkingColorSpace(In.copy(this),t),e.r=In.r,e.g=In.g,e.b=In.b,e}getStyle(e=q){Be.fromWorkingColorSpace(In.copy(this),e);const t=In.r,n=In.g,r=In.b;return e!==q?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*r)})`}offsetHSL(e,t,n){return this.getHSL(wn),this.setHSL(wn.h+e,wn.s+t,wn.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(wn),e.getHSL(Sn);const n=Ce(wn.h,Sn.h,t),r=Ce(wn.s,Sn.s,t),s=Ce(wn.l,Sn.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const In=new _n;_n.NAMES=vn;let Cn=0;class Mn extends ve{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Cn++}),this.uuid=_e(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=s,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new _n(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=oe,this.stencilZFail=oe,this.stencilZPass=oe,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),this.blendEquation!==s&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==oe&&(n.stencilFail=this.stencilFail),this.stencilZFail!==oe&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==oe&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=r(e.textures),s=r(e.images);t.length>0&&(n.textures=t),s.length>0&&(n.images=s)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let r=0;r!==e;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}class En extends Mn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new _n(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Nn=new at,kn=new Re;class Rn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=G,this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}get updateRange(){return console.warn("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)kn.fromBufferAttribute(this,t),kn.applyMatrix3(e),this.setXY(t,kn.x,kn.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyMatrix3(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyMatrix4(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyNormalMatrix(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.transformDirection(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Ne(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ke(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ne(t,this.array)),t}setX(e,t){return this.normalized&&(t=ke(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ne(t,this.array)),t}setY(e,t){return this.normalized&&(t=ke(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ne(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ke(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ne(t,this.array)),t}setW(e,t){return this.normalized&&(t=ke(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ke(t,this.array),n=ke(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=ke(t,this.array),n=ke(n,this.array),r=ke(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=ke(t,this.array),n=ke(n,this.array),r=ke(r,this.array),s=ke(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),e}}class Ln extends Rn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class An extends Rn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Pn extends Rn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Dn=0;const On=new Dt,Gn=new on,zn=new at,Fn=new lt,Wn=new lt,Vn=new at;class Un extends ve{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Dn++}),this.uuid=_e(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Pe(e)?An:Ln)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new Le).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return On.makeRotationFromQuaternion(e),this.applyMatrix4(On),this}rotateX(e){return On.makeRotationX(e),this.applyMatrix4(On),this}rotateY(e){return On.makeRotationY(e),this.applyMatrix4(On),this}rotateZ(e){return On.makeRotationZ(e),this.applyMatrix4(On),this}translate(e,t,n){return On.makeTranslation(e,t,n),this.applyMatrix4(On),this}scale(e,t,n){return On.makeScale(e,t,n),this.applyMatrix4(On),this}lookAt(e){return Gn.lookAt(e),Gn.updateMatrix(),this.applyMatrix4(Gn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(zn).negate(),this.translate(zn.x,zn.y,zn.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Pn(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new lt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new at(-1/0,-1/0,-1/0),new at(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Fn.setFromBufferAttribute(n),this.morphTargetsRelative?(Vn.addVectors(this.boundingBox.min,Fn.min),this.boundingBox.expandByPoint(Vn),Vn.addVectors(this.boundingBox.max,Fn.max),this.boundingBox.expandByPoint(Vn)):(this.boundingBox.expandByPoint(Fn.min),this.boundingBox.expandByPoint(Fn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Ct);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new at,1/0);if(e){const n=this.boundingSphere.center;if(Fn.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Wn.setFromBufferAttribute(n),this.morphTargetsRelative?(Vn.addVectors(Fn.min,Wn.min),Fn.expandByPoint(Vn),Vn.addVectors(Fn.max,Wn.max),Fn.expandByPoint(Vn)):(Fn.expandByPoint(Wn.min),Fn.expandByPoint(Wn.max))}Fn.getCenter(n);let r=0;for(let t=0,s=e.count;t<s;t++)Vn.fromBufferAttribute(e,t),r=Math.max(r,n.distanceToSquared(Vn));if(t)for(let s=0,a=t.length;s<a;s++){const a=t[s],i=this.morphTargetsRelative;for(let t=0,s=a.count;t<s;t++)Vn.fromBufferAttribute(a,t),i&&(zn.fromBufferAttribute(e,t),Vn.add(zn)),r=Math.max(r,n.distanceToSquared(Vn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,r=t.position.array,s=t.normal.array,a=t.uv.array,i=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Rn(new Float32Array(4*i),4));const o=this.getAttribute("tangent").array,l=[],u=[];for(let e=0;e<i;e++)l[e]=new at,u[e]=new at;const c=new at,h=new at,d=new at,p=new Re,m=new Re,f=new Re,g=new at,y=new at;function b(e,t,n){c.fromArray(r,3*e),h.fromArray(r,3*t),d.fromArray(r,3*n),p.fromArray(a,2*e),m.fromArray(a,2*t),f.fromArray(a,2*n),h.sub(c),d.sub(c),m.sub(p),f.sub(p);const s=1/(m.x*f.y-f.x*m.y);isFinite(s)&&(g.copy(h).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(s),y.copy(d).multiplyScalar(m.x).addScaledVector(h,-f.x).multiplyScalar(s),l[e].add(g),l[t].add(g),l[n].add(g),u[e].add(y),u[t].add(y),u[n].add(y))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let e=0,t=x.length;e<t;++e){const t=x[e],r=t.start;for(let e=r,s=r+t.count;e<s;e+=3)b(n[e+0],n[e+1],n[e+2])}const v=new at,w=new at,S=new at,T=new at;function _(e){S.fromArray(s,3*e),T.copy(S);const t=l[e];v.copy(t),v.sub(S.multiplyScalar(S.dot(t))).normalize(),w.crossVectors(T,t);const n=w.dot(u[e])<0?-1:1;o[4*e]=v.x,o[4*e+1]=v.y,o[4*e+2]=v.z,o[4*e+3]=n}for(let e=0,t=x.length;e<t;++e){const t=x[e],r=t.start;for(let e=r,s=r+t.count;e<s;e+=3)_(n[e+0]),_(n[e+1]),_(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Rn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const r=new at,s=new at,a=new at,i=new at,o=new at,l=new at,u=new at,c=new at;if(e)for(let h=0,d=e.count;h<d;h+=3){const d=e.getX(h+0),p=e.getX(h+1),m=e.getX(h+2);r.fromBufferAttribute(t,d),s.fromBufferAttribute(t,p),a.fromBufferAttribute(t,m),u.subVectors(a,s),c.subVectors(r,s),u.cross(c),i.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,m),i.add(u),o.add(u),l.add(u),n.setXYZ(d,i.x,i.y,i.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,i=t.count;e<i;e+=3)r.fromBufferAttribute(t,e+0),s.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),u.subVectors(a,s),c.subVectors(r,s),u.cross(c),n.setXYZ(e+0,u.x,u.y,u.z),n.setXYZ(e+1,u.x,u.y,u.z),n.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Vn.fromBufferAttribute(e,t),Vn.normalize(),e.setXYZ(t,Vn.x,Vn.y,Vn.z)}toNonIndexed(){function e(e,t){const n=e.array,r=e.itemSize,s=e.normalized,a=new n.constructor(t.length*r);let i=0,o=0;for(let s=0,l=t.length;s<l;s++){i=e.isInterleavedBufferAttribute?t[s]*e.data.stride+e.offset:t[s]*r;for(let e=0;e<r;e++)a[o++]=n[i++]}return new Rn(a,r,s)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Un,n=this.index.array,r=this.attributes;for(const s in r){const a=e(r[s],n);t.setAttribute(s,a)}const s=this.morphAttributes;for(const r in s){const a=[],i=s[r];for(let t=0,r=i.length;t<r;t++){const r=e(i[t],n);a.push(r)}t.morphAttributes[r]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const r=n[t];e.data.attributes[t]=r.toJSON(e.data)}const r={};let s=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,r=n.length;t<r;t++){const r=n[t];a.push(r.toJSON(e.data))}a.length>0&&(r[t]=a,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const i=this.boundingSphere;return null!==i&&(e.data.boundingSphere={center:i.center.toArray(),radius:i.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const r=e.attributes;for(const e in r){const n=r[e];this.setAttribute(e,n.clone(t))}const s=e.morphAttributes;for(const e in s){const n=[],r=s[e];for(let e=0,s=r.length;e<s;e++)n.push(r[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const i=e.boundingBox;null!==i&&(this.boundingBox=i.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Bn=new Dt,Xn=new Pt,$n=new Ct,Hn=new at,Zn=new at,Kn=new at,jn=new at,Yn=new at,Qn=new at,Jn=new Re,qn=new Re,er=new Re,tr=new at,nr=new at,rr=new at,sr=new at,ar=new at;class ir extends on{constructor(e=new Un,t=new En){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const i=this.morphTargetInfluences;if(s&&i){Qn.set(0,0,0);for(let n=0,r=s.length;n<r;n++){const r=i[n],o=s[n];0!==r&&(Yn.fromBufferAttribute(o,e),a?Qn.addScaledVector(Yn,r):Qn.addScaledVector(Yn.sub(t),r))}t.add(Qn)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;if(void 0!==r){if(null===n.boundingSphere&&n.computeBoundingSphere(),$n.copy(n.boundingSphere),$n.applyMatrix4(s),Xn.copy(e.ray).recast(e.near),!1===$n.containsPoint(Xn.origin)){if(null===Xn.intersectSphere($n,Hn))return;if(Xn.origin.distanceToSquared(Hn)>(e.far-e.near)**2)return}Bn.copy(s).invert(),Xn.copy(e.ray).applyMatrix4(Bn),null!==n.boundingBox&&!1===Xn.intersectsBox(n.boundingBox)||this._computeIntersections(e,t,Xn)}}_computeIntersections(e,t,n){let r;const s=this.geometry,a=this.material,i=s.index,o=s.attributes.position,l=s.attributes.uv,u=s.attributes.uv1,c=s.attributes.normal,h=s.groups,d=s.drawRange;if(null!==i)if(Array.isArray(a))for(let s=0,o=h.length;s<o;s++){const o=h[s],p=a[o.materialIndex];for(let s=Math.max(o.start,d.start),a=Math.min(i.count,Math.min(o.start+o.count,d.start+d.count));s<a;s+=3)r=or(this,p,e,n,l,u,c,i.getX(s),i.getX(s+1),i.getX(s+2)),r&&(r.faceIndex=Math.floor(s/3),r.face.materialIndex=o.materialIndex,t.push(r))}else for(let s=Math.max(0,d.start),o=Math.min(i.count,d.start+d.count);s<o;s+=3)r=or(this,a,e,n,l,u,c,i.getX(s),i.getX(s+1),i.getX(s+2)),r&&(r.faceIndex=Math.floor(s/3),t.push(r));else if(void 0!==o)if(Array.isArray(a))for(let s=0,i=h.length;s<i;s++){const i=h[s],p=a[i.materialIndex];for(let s=Math.max(i.start,d.start),a=Math.min(o.count,Math.min(i.start+i.count,d.start+d.count));s<a;s+=3)r=or(this,p,e,n,l,u,c,s,s+1,s+2),r&&(r.faceIndex=Math.floor(s/3),r.face.materialIndex=i.materialIndex,t.push(r))}else for(let s=Math.max(0,d.start),i=Math.min(o.count,d.start+d.count);s<i;s+=3)r=or(this,a,e,n,l,u,c,s,s+1,s+2),r&&(r.faceIndex=Math.floor(s/3),t.push(r))}}function or(e,t,n,r,s,a,i,o,l,u){e.getVertexPosition(o,Zn),e.getVertexPosition(l,Kn),e.getVertexPosition(u,jn);const c=function(e,t,n,r,s,a,i,o){let l;if(l=1===t.side?r.intersectTriangle(i,a,s,!0,o):r.intersectTriangle(s,a,i,0===t.side,o),null===l)return null;ar.copy(o),ar.applyMatrix4(e.matrixWorld);const u=n.ray.origin.distanceTo(ar);return u<n.near||u>n.far?null:{distance:u,point:ar.clone(),object:e}}(e,t,n,r,Zn,Kn,jn,sr);if(c){s&&(Jn.fromBufferAttribute(s,o),qn.fromBufferAttribute(s,l),er.fromBufferAttribute(s,u),c.uv=xn.getInterpolation(sr,Zn,Kn,jn,Jn,qn,er,new Re)),a&&(Jn.fromBufferAttribute(a,o),qn.fromBufferAttribute(a,l),er.fromBufferAttribute(a,u),c.uv1=xn.getInterpolation(sr,Zn,Kn,jn,Jn,qn,er,new Re),c.uv2=c.uv1),i&&(tr.fromBufferAttribute(i,o),nr.fromBufferAttribute(i,l),rr.fromBufferAttribute(i,u),c.normal=xn.getInterpolation(sr,Zn,Kn,jn,tr,nr,rr,new at),c.normal.dot(r.direction)>0&&c.normal.multiplyScalar(-1));const e={a:o,b:l,c:u,normal:new at,materialIndex:0};xn.getNormal(Zn,Kn,jn,e.normal),c.face=e}return c}class lr extends Un{constructor(e=1,t=1,n=1,r=1,s=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:a};const i=this;r=Math.floor(r),s=Math.floor(s),a=Math.floor(a);const o=[],l=[],u=[],c=[];let h=0,d=0;function p(e,t,n,r,s,a,p,m,f,g,y){const b=a/f,x=p/g,v=a/2,w=p/2,S=m/2,T=f+1,_=g+1;let I=0,C=0;const M=new at;for(let a=0;a<_;a++){const i=a*x-w;for(let o=0;o<T;o++){const h=o*b-v;M[e]=h*r,M[t]=i*s,M[n]=S,l.push(M.x,M.y,M.z),M[e]=0,M[t]=0,M[n]=m>0?1:-1,u.push(M.x,M.y,M.z),c.push(o/f),c.push(1-a/g),I+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=h+t+T*e,r=h+t+T*(e+1),s=h+(t+1)+T*(e+1),a=h+(t+1)+T*e;o.push(n,r,a),o.push(r,s,a),C+=6}i.addGroup(d,C,y),d+=C,h+=I}p("z","y","x",-1,-1,n,t,e,a,s,0),p("z","y","x",1,-1,n,t,-e,a,s,1),p("x","z","y",1,1,e,n,t,r,a,2),p("x","z","y",1,-1,e,n,-t,r,a,3),p("x","y","z",1,-1,e,t,n,r,s,4),p("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(o),this.setAttribute("position",new Pn(l,3)),this.setAttribute("normal",new Pn(u,3)),this.setAttribute("uv",new Pn(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new lr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ur(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const s=e[n][r];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][r]=null):t[n][r]=s.clone():Array.isArray(s)?t[n][r]=s.slice():t[n][r]=s}}return t}function cr(e){const t={};for(let n=0;n<e.length;n++){const r=ur(e[n]);for(const e in r)t[e]=r[e]}return t}function hr(e){return null===e.getRenderTarget()?e.outputColorSpace:Be.workingColorSpace}const dr={clone:ur,merge:cr};class pr extends Mn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ur(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?t.uniforms[n]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[n]={type:"m4",value:r.toArray()}:t.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class mr extends on{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Dt,this.projectionMatrix=new Dt,this.projectionMatrixInverse=new Dt,this.coordinateSystem=be}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class fr extends mr{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Te*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*Se*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Te*Math.atan(Math.tan(.5*Se*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,s,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*Se*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,i=a.fullHeight;s+=a.offsetX*r/e,t-=a.offsetY*n/i,r*=a.width/e,n*=a.height/i}const i=this.filmOffset;0!==i&&(s+=e*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const gr=-90;class yr extends on{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new fr(gr,1,e,t);r.layers=this.layers,this.add(r);const s=new fr(gr,1,e,t);s.layers=this.layers,this.add(s);const a=new fr(gr,1,e,t);a.layers=this.layers,this.add(a);const i=new fr(gr,1,e,t);i.layers=this.layers,this.add(i);const o=new fr(gr,1,e,t);o.layers=this.layers,this.add(o);const l=new fr(gr,1,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,a,i,o]=t;for(const e of t)this.remove(e);if(e===be)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),i.up.set(0,1,0),i.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(e!==xe)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),i.up.set(0,-1,0),i.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const e of t)this.add(e),e.updateMatrixWorld()}update(e,t){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,a,i,o,l,u]=this.children,c=e.getRenderTarget(),h=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,a),e.setRenderTarget(n,2,r),e.render(t,i),e.setRenderTarget(n,3,r),e.render(t,o),e.setRenderTarget(n,4,r),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5,r),e.render(t,u),e.setRenderTarget(c,h,d),e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class br extends Je{constructor(e,t,n,r,s,a,i,o,l,u){super(e=void 0!==e?e:[],t=void 0!==t?t:S,n,r,s,a,i,o,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class xr extends tt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];void 0!==t.encoding&&(ze("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Q?q:J),this.texture=new br(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:R}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",s="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new lr(5,5,5),i=new pr({name:"CubemapFromEquirect",uniforms:ur(n),vertexShader:r,fragmentShader:s,side:1,blending:0});i.uniforms.tEquirect.value=t;const o=new ir(a,i),l=t.minFilter;return t.minFilter===A&&(t.minFilter=R),new yr(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,r);e.setRenderTarget(s)}}const vr=new at,wr=new at,Sr=new Le;class Tr{constructor(e=new at(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=vr.subVectors(n,t).cross(wr.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(vr),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Sr.getNormalMatrix(e),r=this.coplanarPoint(vr).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const _r=new Ct,Ir=new at;class Cr{constructor(e=new Tr,t=new Tr,n=new Tr,r=new Tr,s=new Tr,a=new Tr){this.planes=[e,t,n,r,s,a]}set(e,t,n,r,s,a){const i=this.planes;return i[0].copy(e),i[1].copy(t),i[2].copy(n),i[3].copy(r),i[4].copy(s),i[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=2e3){const n=this.planes,r=e.elements,s=r[0],a=r[1],i=r[2],o=r[3],l=r[4],u=r[5],c=r[6],h=r[7],d=r[8],p=r[9],m=r[10],f=r[11],g=r[12],y=r[13],b=r[14],x=r[15];if(n[0].setComponents(o-s,h-l,f-d,x-g).normalize(),n[1].setComponents(o+s,h+l,f+d,x+g).normalize(),n[2].setComponents(o+a,h+u,f+p,x+y).normalize(),n[3].setComponents(o-a,h-u,f-p,x-y).normalize(),n[4].setComponents(o-i,h-c,f-m,x-b).normalize(),t===be)n[5].setComponents(o+i,h+c,f+m,x+b).normalize();else{if(t!==xe)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);n[5].setComponents(i,c,m,b).normalize()}return this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),_r.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),_r.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(_r)}intersectsSprite(e){return _r.center.set(0,0,0),_r.radius=.7071067811865476,_r.applyMatrix4(e.matrixWorld),this.intersectsSphere(_r)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Ir.x=r.normal.x>0?e.max.x:e.min.x,Ir.y=r.normal.y>0?e.max.y:e.min.y,Ir.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ir)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Mr(){let e=null,t=!1,n=null,r=null;function s(t,a){n(t,a),r=e.requestAnimationFrame(s)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(s),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Er(e,t){const n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,s){if(t.isGLBufferAttribute){const e=r.get(t);return void((!e||e.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=r.get(t);if(void 0===a)r.set(t,function(t,r){const s=t.array,a=t.usage,i=s.byteLength,o=e.createBuffer();let l;if(e.bindBuffer(r,o),e.bufferData(r,s,a),t.onUploadCallback(),s instanceof Float32Array)l=e.FLOAT;else if(s instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");l=e.HALF_FLOAT}else l=e.UNSIGNED_SHORT;else if(s instanceof Int16Array)l=e.SHORT;else if(s instanceof Uint32Array)l=e.UNSIGNED_INT;else if(s instanceof Int32Array)l=e.INT;else if(s instanceof Int8Array)l=e.BYTE;else if(s instanceof Uint8Array)l=e.UNSIGNED_BYTE;else{if(!(s instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+s);l=e.UNSIGNED_BYTE}return{buffer:o,type:l,bytesPerElement:s.BYTES_PER_ELEMENT,version:t.version,size:i}}(t,s));else if(a.version<t.version){if(a.size!==t.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(t,r,s){const a=r.array,i=r._updateRange,o=r.updateRanges;if(e.bindBuffer(s,t),-1===i.count&&0===o.length&&e.bufferSubData(s,0,a),0!==o.length){for(let t=0,r=o.length;t<r;t++){const r=o[t];n?e.bufferSubData(s,r.start*a.BYTES_PER_ELEMENT,a,r.start,r.count):e.bufferSubData(s,r.start*a.BYTES_PER_ELEMENT,a.subarray(r.start,r.start+r.count))}r.clearUpdateRanges()}-1!==i.count&&(n?e.bufferSubData(s,i.offset*a.BYTES_PER_ELEMENT,a,i.offset,i.count):e.bufferSubData(s,i.offset*a.BYTES_PER_ELEMENT,a.subarray(i.offset,i.offset+i.count)),i.count=-1),r.onUploadCallback()}(a.buffer,t,s),a.version=t.version}}}}class Nr extends Un{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,a=t/2,i=Math.floor(n),o=Math.floor(r),l=i+1,u=o+1,c=e/i,h=t/o,d=[],p=[],m=[],f=[];for(let e=0;e<u;e++){const t=e*h-a;for(let n=0;n<l;n++){const r=n*c-s;p.push(r,-t,0),m.push(0,0,1),f.push(n/i),f.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<i;t++){const n=t+l*e,r=t+l*(e+1),s=t+1+l*(e+1),a=t+1+l*e;d.push(n,r,a),d.push(r,s,a)}this.setIndex(d),this.setAttribute("position",new Pn(p,3)),this.setAttribute("normal",new Pn(m,3)),this.setAttribute("uv",new Pn(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nr(e.width,e.height,e.widthSegments,e.heightSegments)}}const kr={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\tattribute float batchId;\n\tuniform highp sampler2D batchingTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( batchId );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor *= toneMappingExposure;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\treturn color;\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},Rr={common:{diffuse:{value:new _n(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Le},alphaMap:{value:null},alphaMapTransform:{value:new Le},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Le}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Le}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Le}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Le},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Le},normalScale:{value:new Re(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Le},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Le}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Le}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Le}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _n(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _n(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Le},alphaTest:{value:0},uvTransform:{value:new Le}},sprite:{diffuse:{value:new _n(16777215)},opacity:{value:1},center:{value:new Re(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Le},alphaMap:{value:null},alphaMapTransform:{value:new Le},alphaTest:{value:0}}},Lr={basic:{uniforms:cr([Rr.common,Rr.specularmap,Rr.envmap,Rr.aomap,Rr.lightmap,Rr.fog]),vertexShader:kr.meshbasic_vert,fragmentShader:kr.meshbasic_frag},lambert:{uniforms:cr([Rr.common,Rr.specularmap,Rr.envmap,Rr.aomap,Rr.lightmap,Rr.emissivemap,Rr.bumpmap,Rr.normalmap,Rr.displacementmap,Rr.fog,Rr.lights,{emissive:{value:new _n(0)}}]),vertexShader:kr.meshlambert_vert,fragmentShader:kr.meshlambert_frag},phong:{uniforms:cr([Rr.common,Rr.specularmap,Rr.envmap,Rr.aomap,Rr.lightmap,Rr.emissivemap,Rr.bumpmap,Rr.normalmap,Rr.displacementmap,Rr.fog,Rr.lights,{emissive:{value:new _n(0)},specular:{value:new _n(1118481)},shininess:{value:30}}]),vertexShader:kr.meshphong_vert,fragmentShader:kr.meshphong_frag},standard:{uniforms:cr([Rr.common,Rr.envmap,Rr.aomap,Rr.lightmap,Rr.emissivemap,Rr.bumpmap,Rr.normalmap,Rr.displacementmap,Rr.roughnessmap,Rr.metalnessmap,Rr.fog,Rr.lights,{emissive:{value:new _n(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:kr.meshphysical_vert,fragmentShader:kr.meshphysical_frag},toon:{uniforms:cr([Rr.common,Rr.aomap,Rr.lightmap,Rr.emissivemap,Rr.bumpmap,Rr.normalmap,Rr.displacementmap,Rr.gradientmap,Rr.fog,Rr.lights,{emissive:{value:new _n(0)}}]),vertexShader:kr.meshtoon_vert,fragmentShader:kr.meshtoon_frag},matcap:{uniforms:cr([Rr.common,Rr.bumpmap,Rr.normalmap,Rr.displacementmap,Rr.fog,{matcap:{value:null}}]),vertexShader:kr.meshmatcap_vert,fragmentShader:kr.meshmatcap_frag},points:{uniforms:cr([Rr.points,Rr.fog]),vertexShader:kr.points_vert,fragmentShader:kr.points_frag},dashed:{uniforms:cr([Rr.common,Rr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:kr.linedashed_vert,fragmentShader:kr.linedashed_frag},depth:{uniforms:cr([Rr.common,Rr.displacementmap]),vertexShader:kr.depth_vert,fragmentShader:kr.depth_frag},normal:{uniforms:cr([Rr.common,Rr.bumpmap,Rr.normalmap,Rr.displacementmap,{opacity:{value:1}}]),vertexShader:kr.meshnormal_vert,fragmentShader:kr.meshnormal_frag},sprite:{uniforms:cr([Rr.sprite,Rr.fog]),vertexShader:kr.sprite_vert,fragmentShader:kr.sprite_frag},background:{uniforms:{uvTransform:{value:new Le},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:kr.background_vert,fragmentShader:kr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:kr.backgroundCube_vert,fragmentShader:kr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:kr.cube_vert,fragmentShader:kr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:kr.equirect_vert,fragmentShader:kr.equirect_frag},distanceRGBA:{uniforms:cr([Rr.common,Rr.displacementmap,{referencePosition:{value:new at},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:kr.distanceRGBA_vert,fragmentShader:kr.distanceRGBA_frag},shadow:{uniforms:cr([Rr.lights,Rr.fog,{color:{value:new _n(0)},opacity:{value:1}}]),vertexShader:kr.shadow_vert,fragmentShader:kr.shadow_frag}};Lr.physical={uniforms:cr([Lr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Le},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Le},clearcoatNormalScale:{value:new Re(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Le},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Le},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Le},sheen:{value:0},sheenColor:{value:new _n(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Le},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Le},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Le},transmissionSamplerSize:{value:new Re},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Le},attenuationDistance:{value:0},attenuationColor:{value:new _n(0)},specularColor:{value:new _n(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Le},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Le},anisotropyVector:{value:new Re},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Le}}]),vertexShader:kr.meshphysical_vert,fragmentShader:kr.meshphysical_frag};const Ar={r:0,b:0,g:0};function Pr(e,t,n,r,s,a,i){const o=new _n(0);let l,u,c=!0===a?0:1,h=null,d=0,p=null;function m(t,n){t.getRGB(Ar,hr(e)),r.buffers.color.setClear(Ar.r,Ar.g,Ar.b,n,i)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),c=t,m(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,m(o,c)},render:function(a,f){let g=!1,y=!0===f.isScene?f.background:null;y&&y.isTexture&&(y=(f.backgroundBlurriness>0?n:t).get(y)),null===y?m(o,c):y&&y.isColor&&(m(y,1),g=!0);const b=e.xr.getEnvironmentBlendMode();"additive"===b?r.buffers.color.setClear(0,0,0,1,i):"alpha-blend"===b&&r.buffers.color.setClear(0,0,0,0,i),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),y&&(y.isCubeTexture||y.mapping===_)?(void 0===u&&(u=new ir(new lr(1,1,1),new pr({name:"BackgroundCubeMaterial",uniforms:ur(Lr.backgroundCube.uniforms),vertexShader:Lr.backgroundCube.vertexShader,fragmentShader:Lr.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(u)),u.material.uniforms.envMap.value=y,u.material.uniforms.flipEnvMap.value=y.isCubeTexture&&!1===y.isRenderTargetTexture?-1:1,u.material.uniforms.backgroundBlurriness.value=f.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=f.backgroundIntensity,u.material.toneMapped=Be.getTransfer(y.colorSpace)!==se,h===y&&d===y.version&&p===e.toneMapping||(u.material.needsUpdate=!0,h=y,d=y.version,p=e.toneMapping),u.layers.enableAll(),a.unshift(u,u.geometry,u.material,0,0,null)):y&&y.isTexture&&(void 0===l&&(l=new ir(new Nr(2,2),new pr({name:"BackgroundMaterial",uniforms:ur(Lr.background.uniforms),vertexShader:Lr.background.vertexShader,fragmentShader:Lr.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=y,l.material.uniforms.backgroundIntensity.value=f.backgroundIntensity,l.material.toneMapped=Be.getTransfer(y.colorSpace)!==se,!0===y.matrixAutoUpdate&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),h===y&&d===y.version&&p===e.toneMapping||(l.material.needsUpdate=!0,h=y,d=y.version,p=e.toneMapping),l.layers.enableAll(),a.unshift(l,l.geometry,l.material,0,0,null))}}}function Dr(e,t,n,r){const s=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),i=r.isWebGL2||null!==a,o={},l=p(null);let u=l,c=!1;function h(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function d(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function p(e){const t=[],n=[],r=[];for(let e=0;e<s;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function m(){const e=u.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function f(e){g(e,0)}function g(n,s){const a=u.newAttributes,i=u.enabledAttributes,o=u.attributeDivisors;a[n]=1,0===i[n]&&(e.enableVertexAttribArray(n),i[n]=1),o[n]!==s&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,s),o[n]=s)}function y(){const t=u.newAttributes,n=u.enabledAttributes;for(let r=0,s=n.length;r<s;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function b(t,n,r,s,a,i,o){!0===o?e.vertexAttribIPointer(t,n,r,a,i):e.vertexAttribPointer(t,n,r,s,a,i)}function x(){v(),c=!0,u!==l&&(u=l,h(u.object))}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(s,l,d,x,v){let w=!1;if(i){const t=function(t,n,s){const i=!0===s.wireframe;let l=o[t.id];void 0===l&&(l={},o[t.id]=l);let u=l[n.id];void 0===u&&(u={},l[n.id]=u);let c=u[i];return void 0===c&&(c=p(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[i]=c),c}(x,d,l);u!==t&&(u=t,h(u.object)),w=function(e,t,n,r){const s=u.attributes,a=t.attributes;let i=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){const n=s[t];let r=a[t];if(void 0===r&&("instanceMatrix"===t&&e.instanceMatrix&&(r=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(r=e.instanceColor)),void 0===n)return!0;if(n.attribute!==r)return!0;if(r&&n.data!==r.data)return!0;i++}return u.attributesNum!==i||u.index!==r}(s,x,d,v),w&&function(e,t,n,r){const s={},a=t.attributes;let i=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){let n=a[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const r={};r.attribute=n,n&&n.data&&(r.data=n.data),s[t]=r,i++}u.attributes=s,u.attributesNum=i,u.index=r}(s,x,d,v)}else{const e=!0===l.wireframe;u.geometry===x.id&&u.program===d.id&&u.wireframe===e||(u.geometry=x.id,u.program=d.id,u.wireframe=e,w=!0)}null!==v&&n.update(v,e.ELEMENT_ARRAY_BUFFER),(w||c)&&(c=!1,function(s,a,i,o){if(!1===r.isWebGL2&&(s.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;m();const l=o.attributes,u=i.getAttributes(),c=a.defaultAttributeValues;for(const t in u){const a=u[t];if(a.location>=0){let i=l[t];if(void 0===i&&("instanceMatrix"===t&&s.instanceMatrix&&(i=s.instanceMatrix),"instanceColor"===t&&s.instanceColor&&(i=s.instanceColor)),void 0!==i){const t=i.normalized,l=i.itemSize,u=n.get(i);if(void 0===u)continue;const c=u.buffer,h=u.type,d=u.bytesPerElement,p=!0===r.isWebGL2&&(h===e.INT||h===e.UNSIGNED_INT||1013===i.gpuType);if(i.isInterleavedBufferAttribute){const n=i.data,r=n.stride,u=i.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<a.locationSize;e++)g(a.location+e,n.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<a.locationSize;e++)f(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,c);for(let e=0;e<a.locationSize;e++)b(a.location+e,l/a.locationSize,h,t,r*d,(u+l/a.locationSize*e)*d,p)}else{if(i.isInstancedBufferAttribute){for(let e=0;e<a.locationSize;e++)g(a.location+e,i.meshPerAttribute);!0!==s.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let e=0;e<a.locationSize;e++)f(a.location+e);e.bindBuffer(e.ARRAY_BUFFER,c);for(let e=0;e<a.locationSize;e++)b(a.location+e,l/a.locationSize,h,t,l*d,l/a.locationSize*e*d,p)}}else if(void 0!==c){const n=c[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(a.location,n);break;case 3:e.vertexAttrib3fv(a.location,n);break;case 4:e.vertexAttrib4fv(a.location,n);break;default:e.vertexAttrib1fv(a.location,n)}}}}y()}(s,l,d,x),null!==v&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(v).buffer))},reset:x,resetDefaultState:v,dispose:function(){x();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)d(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const r=n[e.id];for(const e in r)d(r[e].object),delete r[e];delete n[e.id]}},initAttributes:m,enableAttribute:f,disableUnusedAttributes:y}}function Or(e,t,n,r){const s=r.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,r){e.drawArrays(a,t,r),n.update(r,a,1)},this.renderInstances=function(r,i,o){if(0===o)return;let l,u;if(s)l=e,u="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](a,r,i,o),n.update(i,a,o)},this.renderMultiDraw=function(e,r,s){if(0===s)return;const i=t.get("WEBGL_multi_draw");if(null===i)for(let t=0;t<s;t++)this.render(e[t],r[t]);else{i.multiDrawArraysWEBGL(a,e,0,r,0,s);let t=0;for(let e=0;e<s;e++)t+=r[e];n.update(t,a,1)}}}function Gr(e,t,n){let r;function s(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name;let i=void 0!==n.precision?n.precision:"highp";const o=s(i);o!==i&&(console.warn("THREE.WebGLRenderer:",i,"not supported, using",o,"instead."),i=o);const l=a||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),m=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),y=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),b=h>0,x=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:s,precision:i,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:y,vertexTextures:b,floatFragmentTextures:x,floatVertexTextures:b&&x,maxSamples:a?e.getParameter(e.MAX_SAMPLES):0}}function zr(e){const t=this;let n=null,r=0,s=!1,a=!1;const i=new Tr,o=new Le,l={value:null,needsUpdate:!1};function u(e,n,r,s){const a=null!==e?e.length:0;let u=null;if(0!==a){if(u=l.value,!0!==s||null===u){const t=r+4*a,s=n.matrixWorldInverse;o.getNormalMatrix(s),(null===u||u.length<t)&&(u=new Float32Array(t));for(let t=0,n=r;t!==a;++t,n+=4)i.copy(e[t]).applyMatrix4(s,o),i.normal.toArray(u,n),u[n+3]=i.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==r||s;return s=t,r=e.length,n},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=u(e,t,0)},this.setState=function(i,o,c){const h=i.clippingPlanes,d=i.clipIntersection,p=i.clipShadows,m=e.get(i);if(!s||null===h||0===h.length||a&&!p)a?u(null):(l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0);else{const e=a?0:r,t=4*e;let s=m.clippingState||null;l.value=s,s=u(h,o,t,c);for(let e=0;e!==t;++e)s[e]=n[e];m.clippingState=s,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function Fr(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=S:304===t&&(e.mapping=T),e}function r(e){const n=e.target;n.removeEventListener("dispose",r);const s=t.get(n);void 0!==s&&(t.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const a=s.mapping;if(303===a||304===a){if(t.has(s))return n(t.get(s).texture,s.mapping);{const a=s.image;if(a&&a.height>0){const i=new xr(a.height/2);return i.fromEquirectangularTexture(e,s),t.set(s,i),s.addEventListener("dispose",r),n(i.texture,s.mapping)}return null}}}return s},dispose:function(){t=new WeakMap}}}class Wr extends mr{constructor(e=-1,t=1,n=1,r=-1,s=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,a=n+e,i=r+t,o=r-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=e*this.view.offsetX,a=s+e*this.view.width,i-=t*this.view.offsetY,o=i-t*this.view.height}this.projectionMatrix.makeOrthographic(s,a,i,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const Vr=[.125,.215,.35,.446,.526,.582],Ur=new Wr,Br=new _n;let Xr=null,$r=0,Hr=0;const Zr=(1+Math.sqrt(5))/2,Kr=1/Zr,jr=[new at(1,1,1),new at(-1,1,1),new at(1,1,-1),new at(-1,1,-1),new at(0,Zr,Kr),new at(0,Zr,-Kr),new at(Kr,0,Zr),new at(-Kr,0,Zr),new at(Zr,Kr,0),new at(-Zr,Kr,0)];class Yr{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){Xr=this._renderer.getRenderTarget(),$r=this._renderer.getActiveCubeFace(),Hr=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=es(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=qr(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Xr,$r,Hr),e.scissorTest=!1,Jr(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===S||e.mapping===T?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Xr=this._renderer.getRenderTarget(),$r=this._renderer.getActiveCubeFace(),Hr=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:R,minFilter:R,generateMipmaps:!1,type:z,format:W,colorSpace:ee,depthBuffer:!1},r=Qr(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Qr(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],r=[];let s=e;const a=e-4+1+Vr.length;for(let i=0;i<a;i++){const a=Math.pow(2,s);n.push(a);let o=1/a;i>e-4?o=Vr[i-e+4-1]:0===i&&(o=0),r.push(o);const l=1/(a-2),u=-l,c=1+l,h=[u,u,c,u,c,c,u,u,c,c,u,c],d=6,p=6,m=3,f=2,g=1,y=new Float32Array(m*p*d),b=new Float32Array(f*p*d),x=new Float32Array(g*p*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,n=e>2?0:-1,r=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];y.set(r,m*p*e),b.set(h,f*p*e);const s=[e,e,e,e,e,e];x.set(s,g*p*e)}const v=new Un;v.setAttribute("position",new Rn(y,m)),v.setAttribute("uv",new Rn(b,f)),v.setAttribute("faceIndex",new Rn(x,g)),t.push(v),s>4&&s--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(r)),this._blurMaterial=function(e,t,n){const r=new Float32Array(20),s=new at(0,1,0);return new pr({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(r,e,t)}return r}_compileMaterial(e){const t=new ir(this._lodPlanes[0],e);this._renderer.compile(t,Ur)}_sceneToCubeUV(e,t,n,r){const s=new fr(90,1,t,n),a=[1,-1,1,1,1,1],i=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,u=o.toneMapping;o.getClearColor(Br),o.toneMapping=0,o.autoClear=!1;const c=new En({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new ir(new lr,c);let d=!1;const p=e.background;p?p.isColor&&(c.color.copy(p),e.background=null,d=!0):(c.color.copy(Br),d=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(s.up.set(0,a[t],0),s.lookAt(i[t],0,0)):1===n?(s.up.set(0,0,a[t]),s.lookAt(0,i[t],0)):(s.up.set(0,a[t],0),s.lookAt(0,0,i[t]));const l=this._cubeSize;Jr(r,n*l,t>2?l:0,l,l),o.setRenderTarget(r),d&&o.render(h,s),o.render(e,s)}h.geometry.dispose(),h.material.dispose(),o.toneMapping=u,o.autoClear=l,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===S||e.mapping===T;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=es()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=qr());const s=r?this._cubemapMaterial:this._equirectMaterial,a=new ir(this._lodPlanes[0],s);s.uniforms.envMap.value=e;const i=this._cubeSize;Jr(t,0,0,3*i,2*i),n.setRenderTarget(t),n.render(a,Ur)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=jr[(t-1)%jr.length];this._blur(e,t-1,t,n,r)}t.autoClear=n}_blur(e,t,n,r,s){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",s),this._halfBlur(a,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,a,i){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const u=new ir(this._lodPlanes[r],l),c=l.uniforms,h=this._sizeLods[n]-1,d=isFinite(s)?Math.PI/(2*h):2*Math.PI/39,p=s/d,m=isFinite(s)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<20;++e){const t=e/p,n=Math.exp(-t*t/2);f.push(n),0===e?g+=n:e<m&&(g+=2*n)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;c.envMap.value=e.texture,c.samples.value=m,c.weights.value=f,c.latitudinal.value="latitudinal"===a,i&&(c.poleAxis.value=i);const{_lodMax:y}=this;c.dTheta.value=d,c.mipInt.value=y-n;const b=this._sizeLods[r];Jr(t,3*b*(r>y-4?r-y+4:0),4*(this._cubeSize-b),3*b,2*b),o.setRenderTarget(t),o.render(u,Ur)}}function Qr(e,t,n){const r=new tt(e,t,n);return r.texture.mapping=_,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function Jr(e,t,n,r,s){e.viewport.set(t,n,r,s),e.scissor.set(t,n,r,s)}function qr(){return new pr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function es(){return new pr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function ts(e){let t=new WeakMap,n=null;function r(e){const n=e.target;n.removeEventListener("dispose",r);const s=t.get(n);void 0!==s&&(t.delete(n),s.dispose())}return{get:function(s){if(s&&s.isTexture){const a=s.mapping,i=303===a||304===a,o=a===S||a===T;if(i||o){if(s.isRenderTargetTexture&&!0===s.needsPMREMUpdate){s.needsPMREMUpdate=!1;let r=t.get(s);return null===n&&(n=new Yr(e)),r=i?n.fromEquirectangular(s,r):n.fromCubemap(s,r),t.set(s,r),r.texture}if(t.has(s))return t.get(s).texture;{const a=s.image;if(i&&a&&a.height>0||o&&a&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(a)){null===n&&(n=new Yr(e));const a=i?n.fromEquirectangular(s):n.fromCubemap(s);return t.set(s,a),s.addEventListener("dispose",r),a.texture}return null}}}return s},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function ns(e){const t={};function n(n){if(void 0!==t[n])return t[n];let r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?(n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance")):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function rs(e,t,n,r){const s={},a=new WeakMap;function i(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);for(const e in o.morphAttributes){const n=o.morphAttributes[e];for(let e=0,r=n.length;e<r;e++)t.remove(n[e])}o.removeEventListener("dispose",i),delete s[o.id];const l=a.get(o);l&&(t.remove(l),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],r=e.index,s=e.attributes.position;let i=0;if(null!==r){const e=r.array;i=r.version;for(let t=0,r=e.length;t<r;t+=3){const r=e[t+0],s=e[t+1],a=e[t+2];n.push(r,s,s,a,a,r)}}else{if(void 0===s)return;{const e=s.array;i=s.version;for(let t=0,r=e.length/3-1;t<r;t+=3){const e=t+0,r=t+1,s=t+2;n.push(e,r,r,s,s,e)}}}const o=new(Pe(n)?An:Ln)(n,1);o.version=i;const l=a.get(e);l&&t.remove(l),a.set(e,o)}return{get:function(e,t){return!0===s[t.id]||(t.addEventListener("dispose",i),s[t.id]=!0,n.memory.geometries++),t},update:function(n){const r=n.attributes;for(const n in r)t.update(r[n],e.ARRAY_BUFFER);const s=n.morphAttributes;for(const n in s){const r=s[n];for(let n=0,s=r.length;n<s;n++)t.update(r[n],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function ss(e,t,n,r){const s=r.isWebGL2;let a,i,o;this.setMode=function(e){a=e},this.setIndex=function(e){i=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(a,r,i,t*o),n.update(r,a,1)},this.renderInstances=function(r,l,u){if(0===u)return;let c,h;if(s)c=e,h="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===c)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[h](a,l,i,r*o,u),n.update(l,a,u)},this.renderMultiDraw=function(e,r,s){if(0===s)return;const l=t.get("WEBGL_multi_draw");if(null===l)for(let t=0;t<s;t++)this.render(e[t]/o,r[t]);else{l.multiDrawElementsWEBGL(a,r,0,i,e,0,s);let t=0;for(let e=0;e<s;e++)t+=r[e];n.update(t,a,1)}}}function as(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,r,s){switch(t.calls++,r){case e.TRIANGLES:t.triangles+=s*(n/3);break;case e.LINES:t.lines+=s*(n/2);break;case e.LINE_STRIP:t.lines+=s*(n-1);break;case e.LINE_LOOP:t.lines+=s*n;break;case e.POINTS:t.points+=s*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function is(e,t){return e[0]-t[0]}function os(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ls(e,t,n){const r={},s=new Float32Array(8),a=new WeakMap,i=new qe,o=[];for(let e=0;e<8;e++)o[e]=[e,0];return{update:function(l,u,c){const h=l.morphTargetInfluences;if(!0===t.isWebGL2){const d=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,p=void 0!==d?d.length:0;let m=a.get(u);if(void 0===m||m.count!==p){void 0!==m&&m.texture.dispose();const y=void 0!==u.morphAttributes.position,b=void 0!==u.morphAttributes.normal,x=void 0!==u.morphAttributes.color,v=u.morphAttributes.position||[],w=u.morphAttributes.normal||[],S=u.morphAttributes.color||[];let T=0;!0===y&&(T=1),!0===b&&(T=2),!0===x&&(T=3);let _=u.attributes.position.count*T,I=1;_>t.maxTextureSize&&(I=Math.ceil(_/t.maxTextureSize),_=t.maxTextureSize);const C=new Float32Array(_*I*4*p),M=new nt(C,_,I,p);M.type=G,M.needsUpdate=!0;const E=4*T;for(let k=0;k<p;k++){const R=v[k],L=w[k],A=S[k],P=_*I*4*k;for(let D=0;D<R.count;D++){const O=D*E;!0===y&&(i.fromBufferAttribute(R,D),C[P+O+0]=i.x,C[P+O+1]=i.y,C[P+O+2]=i.z,C[P+O+3]=0),!0===b&&(i.fromBufferAttribute(L,D),C[P+O+4]=i.x,C[P+O+5]=i.y,C[P+O+6]=i.z,C[P+O+7]=0),!0===x&&(i.fromBufferAttribute(A,D),C[P+O+8]=i.x,C[P+O+9]=i.y,C[P+O+10]=i.z,C[P+O+11]=4===A.itemSize?i.w:1)}}function N(){M.dispose(),a.delete(u),u.removeEventListener("dispose",N)}m={count:p,texture:M,size:new Re(_,I)},a.set(u,m),u.addEventListener("dispose",N)}let f=0;for(let z=0;z<h.length;z++)f+=h[z];const g=u.morphTargetsRelative?1:1-f;c.getUniforms().setValue(e,"morphTargetBaseInfluence",g),c.getUniforms().setValue(e,"morphTargetInfluences",h),c.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),c.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{const F=void 0===h?0:h.length;let W=r[u.id];if(void 0===W||W.length!==F){W=[];for(let $=0;$<F;$++)W[$]=[$,0];r[u.id]=W}for(let H=0;H<F;H++){const Z=W[H];Z[0]=H,Z[1]=h[H]}W.sort(os);for(let K=0;K<8;K++)K<F&&W[K][1]?(o[K][0]=W[K][0],o[K][1]=W[K][1]):(o[K][0]=Number.MAX_SAFE_INTEGER,o[K][1]=0);o.sort(is);const V=u.morphAttributes.position,U=u.morphAttributes.normal;let B=0;for(let j=0;j<8;j++){const Y=o[j],Q=Y[0],J=Y[1];Q!==Number.MAX_SAFE_INTEGER&&J?(V&&u.getAttribute("morphTarget"+j)!==V[Q]&&u.setAttribute("morphTarget"+j,V[Q]),U&&u.getAttribute("morphNormal"+j)!==U[Q]&&u.setAttribute("morphNormal"+j,U[Q]),s[j]=J,B+=J):(V&&!0===u.hasAttribute("morphTarget"+j)&&u.deleteAttribute("morphTarget"+j),U&&!0===u.hasAttribute("morphNormal"+j)&&u.deleteAttribute("morphNormal"+j),s[j]=0)}const X=u.morphTargetsRelative?1:1-B;c.getUniforms().setValue(e,"morphTargetBaseInfluence",X),c.getUniforms().setValue(e,"morphTargetInfluences",s)}}}}function us(e,t,n,r){let s=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(i){const o=r.render.frame,l=i.geometry,u=t.get(i,l);if(s.get(u)!==o&&(t.update(u),s.set(u,o)),i.isInstancedMesh&&(!1===i.hasEventListener("dispose",a)&&i.addEventListener("dispose",a),s.get(i)!==o&&(n.update(i.instanceMatrix,e.ARRAY_BUFFER),null!==i.instanceColor&&n.update(i.instanceColor,e.ARRAY_BUFFER),s.set(i,o))),i.isSkinnedMesh){const e=i.skeleton;s.get(e)!==o&&(e.update(),s.set(e,o))}return u},dispose:function(){s=new WeakMap}}}class cs extends Je{constructor(e,t,n,r,s,a,i,o,l,u){if((u=void 0!==u?u:V)!==V&&u!==U)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===V&&(n=O),void 0===n&&u===U&&(n=F),super(null,r,s,a,i,o,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==i?i:E,this.minFilter=void 0!==o?o:E,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return null!==this.compareFunction&&(t.compareFunction=this.compareFunction),t}}const hs=new Je,ds=new cs(1,1);ds.compareFunction=515;const ps=new nt,ms=new rt,fs=new br,gs=[],ys=[],bs=new Float32Array(16),xs=new Float32Array(9),vs=new Float32Array(4);function ws(e,t,n){const r=e[0];if(r<=0||r>0)return e;const s=t*n;let a=gs[s];if(void 0===a&&(a=new Float32Array(s),gs[s]=a),0!==t){r.toArray(a,0);for(let r=1,s=0;r!==t;++r)s+=n,e[r].toArray(a,s)}return a}function Ss(e,t){if(e.length!==t.length)return!1;for(let n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Ts(e,t){for(let n=0,r=t.length;n<r;n++)e[n]=t[n]}function _s(e,t){let n=ys[t];void 0===n&&(n=new Int32Array(t),ys[t]=n);for(let r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function Is(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Cs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ss(n,t))return;e.uniform2fv(this.addr,t),Ts(n,t)}}function Ms(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Ss(n,t))return;e.uniform3fv(this.addr,t),Ts(n,t)}}function Es(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ss(n,t))return;e.uniform4fv(this.addr,t),Ts(n,t)}}function Ns(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(Ss(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ts(n,t)}else{if(Ss(n,r))return;vs.set(r),e.uniformMatrix2fv(this.addr,!1,vs),Ts(n,r)}}function ks(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(Ss(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ts(n,t)}else{if(Ss(n,r))return;xs.set(r),e.uniformMatrix3fv(this.addr,!1,xs),Ts(n,r)}}function Rs(e,t){const n=this.cache,r=t.elements;if(void 0===r){if(Ss(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ts(n,t)}else{if(Ss(n,r))return;bs.set(r),e.uniformMatrix4fv(this.addr,!1,bs),Ts(n,r)}}function Ls(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function As(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ss(n,t))return;e.uniform2iv(this.addr,t),Ts(n,t)}}function Ps(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Ss(n,t))return;e.uniform3iv(this.addr,t),Ts(n,t)}}function Ds(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ss(n,t))return;e.uniform4iv(this.addr,t),Ts(n,t)}}function Os(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Gs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ss(n,t))return;e.uniform2uiv(this.addr,t),Ts(n,t)}}function zs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Ss(n,t))return;e.uniform3uiv(this.addr,t),Ts(n,t)}}function Fs(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ss(n,t))return;e.uniform4uiv(this.addr,t),Ts(n,t)}}function Ws(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s);const a=this.type===e.SAMPLER_2D_SHADOW?ds:hs;n.setTexture2D(t||a,s)}function Vs(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.setTexture3D(t||ms,s)}function Us(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.setTextureCube(t||fs,s)}function Bs(e,t,n){const r=this.cache,s=n.allocateTextureUnit();r[0]!==s&&(e.uniform1i(this.addr,s),r[0]=s),n.setTexture2DArray(t||ps,s)}function Xs(e,t){e.uniform1fv(this.addr,t)}function $s(e,t){const n=ws(t,this.size,2);e.uniform2fv(this.addr,n)}function Hs(e,t){const n=ws(t,this.size,3);e.uniform3fv(this.addr,n)}function Zs(e,t){const n=ws(t,this.size,4);e.uniform4fv(this.addr,n)}function Ks(e,t){const n=ws(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function js(e,t){const n=ws(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Ys(e,t){const n=ws(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Qs(e,t){e.uniform1iv(this.addr,t)}function Js(e,t){e.uniform2iv(this.addr,t)}function qs(e,t){e.uniform3iv(this.addr,t)}function ea(e,t){e.uniform4iv(this.addr,t)}function ta(e,t){e.uniform1uiv(this.addr,t)}function na(e,t){e.uniform2uiv(this.addr,t)}function ra(e,t){e.uniform3uiv(this.addr,t)}function sa(e,t){e.uniform4uiv(this.addr,t)}function aa(e,t,n){const r=this.cache,s=t.length,a=_s(n,s);Ss(r,a)||(e.uniform1iv(this.addr,a),Ts(r,a));for(let e=0;e!==s;++e)n.setTexture2D(t[e]||hs,a[e])}function ia(e,t,n){const r=this.cache,s=t.length,a=_s(n,s);Ss(r,a)||(e.uniform1iv(this.addr,a),Ts(r,a));for(let e=0;e!==s;++e)n.setTexture3D(t[e]||ms,a[e])}function oa(e,t,n){const r=this.cache,s=t.length,a=_s(n,s);Ss(r,a)||(e.uniform1iv(this.addr,a),Ts(r,a));for(let e=0;e!==s;++e)n.setTextureCube(t[e]||fs,a[e])}function la(e,t,n){const r=this.cache,s=t.length,a=_s(n,s);Ss(r,a)||(e.uniform1iv(this.addr,a),Ts(r,a));for(let e=0;e!==s;++e)n.setTexture2DArray(t[e]||ps,a[e])}class ua{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=function(e){switch(e){case 5126:return Is;case 35664:return Cs;case 35665:return Ms;case 35666:return Es;case 35674:return Ns;case 35675:return ks;case 35676:return Rs;case 5124:case 35670:return Ls;case 35667:case 35671:return As;case 35668:case 35672:return Ps;case 35669:case 35673:return Ds;case 5125:return Os;case 36294:return Gs;case 36295:return zs;case 36296:return Fs;case 35678:case 36198:case 36298:case 36306:case 35682:return Ws;case 35679:case 36299:case 36307:return Vs;case 35680:case 36300:case 36308:case 36293:return Us;case 36289:case 36303:case 36311:case 36292:return Bs}}(t.type)}}class ca{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Xs;case 35664:return $s;case 35665:return Hs;case 35666:return Zs;case 35674:return Ks;case 35675:return js;case 35676:return Ys;case 5124:case 35670:return Qs;case 35667:case 35671:return Js;case 35668:case 35672:return qs;case 35669:case 35673:return ea;case 5125:return ta;case 36294:return na;case 36295:return ra;case 36296:return sa;case 35678:case 36198:case 36298:case 36306:case 35682:return aa;case 35679:case 36299:case 36307:return ia;case 35680:case 36300:case 36308:case 36293:return oa;case 36289:case 36303:case 36311:case 36292:return la}}(t.type)}}class ha{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,a=r.length;s!==a;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const da=/(\w+)(\])?(\[|\.)?/g;function pa(e,t){e.seq.push(t),e.map[t.id]=t}function ma(e,t,n){const r=e.name,s=r.length;for(da.lastIndex=0;;){const a=da.exec(r),i=da.lastIndex;let o=a[1];const l="]"===a[2],u=a[3];if(l&&(o|=0),void 0===u||"["===u&&i+2===s){pa(n,void 0===u?new ua(o,e,t):new ca(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new ha(o),pa(n,e)),n=e}}}class fa{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const n=e.getActiveUniform(t,r);ma(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,r){const s=this.map[t];void 0!==s&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];void 0!==r&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,a=t.length;s!==a;++s){const a=t[s],i=n[a.id];!1!==i.needsUpdate&&a.setValue(e,i.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const s=e[r];s.id in t&&n.push(s)}return n}}function ga(e,t,n){const r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}let ya=0;function ba(e,t,n){const r=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(r&&""===s)return"";const a=/ERROR: 0:(\d+)/.exec(s);if(a){const r=parseInt(a[1]);return n.toUpperCase()+"\n\n"+s+"\n\n"+function(e,t){const n=e.split("\n"),r=[],s=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=s;e<a;e++){const s=e+1;r.push(`${s===t?">":" "} ${s}: ${n[e]}`)}return r.join("\n")}(e.getShaderSource(t),r)}return s}function xa(e,t){const n=function(e){const t=Be.getPrimaries(Be.workingColorSpace),n=Be.getPrimaries(e);let r;switch(t===n?r="":t===ie&&n===ae?r="LinearDisplayP3ToLinearSRGB":t===ae&&n===ie&&(r="LinearSRGBToLinearDisplayP3"),e){case ee:case ne:return[r,"LinearTransferOETF"];case q:case te:return[r,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[r,"LinearTransferOETF"]}}(t);return`vec4 ${e}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function va(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 6:n="AgX";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function wa(e){return""!==e}function Sa(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ta(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const _a=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ia(e){return e.replace(_a,Ma)}const Ca=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Ma(e,t){let n=kr[t];if(void 0===n){const e=Ca.get(t);if(void 0===e)throw new Error("Can not resolve #include <"+t+">");n=kr[e],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,e)}return Ia(n)}const Ea=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Na(e){return e.replace(Ea,ka)}function ka(e,t,n,r){let s="";for(let e=parseInt(t);e<parseInt(n);e++)s+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return s}function Ra(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function La(e,t,n,r){const s=e.getContext(),a=n.defines;let i=n.vertexShader,o=n.fragmentShader;const l=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),u=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case S:case T:t="ENVMAP_TYPE_CUBE";break;case _:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),c=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===T&&(t="ENVMAP_MODE_REFRACTION"),t}(n),h=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),d=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,r=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),p=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(wa).join("\n")}(n),m=function(e){return[e.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":""].filter(wa).join("\n")}(n),f=function(e){const t=[];for(const n in e){const r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(a),g=s.createProgram();let y,b,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(y=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(wa).join("\n"),y.length>0&&(y+="\n"),b=[p,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f].filter(wa).join("\n"),b.length>0&&(b+="\n")):(y=[Ra(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(wa).join("\n"),b=[p,Ra(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?kr.tonemapping_pars_fragment:"",0!==n.toneMapping?va("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",kr.colorspace_pars_fragment,xa("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(wa).join("\n")),i=Ia(i),i=Sa(i,n),i=Ta(i,n),o=Ia(o),o=Sa(o,n),o=Ta(o,n),i=Na(i),o=Na(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",y=[m,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+y,b=["precision mediump sampler2DArray;","#define varying in",n.glslVersion===ge?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ge?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+b);const v=x+y+i,w=x+b+o,I=ga(s,s.VERTEX_SHADER,v),C=ga(s,s.FRAGMENT_SHADER,w);function M(t){if(e.debug.checkShaderErrors){const n=s.getProgramInfoLog(g).trim(),r=s.getShaderInfoLog(I).trim(),a=s.getShaderInfoLog(C).trim();let i=!0,o=!0;if(!1===s.getProgramParameter(g,s.LINK_STATUS))if(i=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(s,g,I,C);else{const e=ba(s,I,"vertex"),t=ba(s,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(g,s.VALIDATE_STATUS)+"\n\nProgram Info Log: "+n+"\n"+e+"\n"+t)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):""!==r&&""!==a||(o=!1);o&&(t.diagnostics={runnable:i,programLog:n,vertexShader:{log:r,prefix:y},fragmentShader:{log:a,prefix:b}})}s.deleteShader(I),s.deleteShader(C),E=new fa(s,g),N=function(e,t){const n={},r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let s=0;s<r;s++){const r=e.getActiveAttrib(t,s),a=r.name;let i=1;r.type===e.FLOAT_MAT2&&(i=2),r.type===e.FLOAT_MAT3&&(i=3),r.type===e.FLOAT_MAT4&&(i=4),n[a]={type:r.type,location:e.getAttribLocation(t,a),locationSize:i}}return n}(s,g)}let E,N;s.attachShader(g,I),s.attachShader(g,C),void 0!==n.index0AttributeName?s.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&s.bindAttribLocation(g,0,"position"),s.linkProgram(g),this.getUniforms=function(){return void 0===E&&M(this),E},this.getAttributes=function(){return void 0===N&&M(this),N};let k=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===k&&(k=s.getProgramParameter(g,37297)),k},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=ya++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=I,this.fragmentShader=C,this}let Aa=0;class Pa{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(s)&&(a.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new Da(e),t.set(e,n)),n}}class Da{constructor(e){this.id=Aa++,this.code=e,this.usedTimes=0}}function Oa(e,t,n,r,s,a,i){const o=new Ht,l=new Pa,u=[],c=s.isWebGL2,h=s.logarithmicDepthBuffer,d=s.vertexTextures;let p=s.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(e){return 0===e?"uv":`uv${e}`}return{getParameters:function(a,o,u,g,y){const b=g.fog,x=y.geometry,v=a.isMeshStandardMaterial?g.environment:null,w=(a.isMeshStandardMaterial?n:t).get(a.envMap||v),S=w&&w.mapping===_?w.image.height:null,T=m[a.type];null!==a.precision&&(p=s.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const I=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,C=void 0!==I?I.length:0;let M,E,N,k,R=0;if(void 0!==x.morphAttributes.position&&(R=1),void 0!==x.morphAttributes.normal&&(R=2),void 0!==x.morphAttributes.color&&(R=3),T){const e=Lr[T];M=e.vertexShader,E=e.fragmentShader}else M=a.vertexShader,E=a.fragmentShader,l.update(a),N=l.getVertexShaderID(a),k=l.getFragmentShaderID(a);const L=e.getRenderTarget(),A=!0===y.isInstancedMesh,P=!0===y.isBatchedMesh,D=!!a.map,O=!!a.matcap,G=!!w,z=!!a.aoMap,F=!!a.lightMap,W=!!a.bumpMap,V=!!a.normalMap,U=!!a.displacementMap,B=!!a.emissiveMap,X=!!a.metalnessMap,$=!!a.roughnessMap,H=a.anisotropy>0,Z=a.clearcoat>0,K=a.iridescence>0,j=a.sheen>0,Y=a.transmission>0,Q=H&&!!a.anisotropyMap,J=Z&&!!a.clearcoatMap,q=Z&&!!a.clearcoatNormalMap,te=Z&&!!a.clearcoatRoughnessMap,ne=K&&!!a.iridescenceMap,re=K&&!!a.iridescenceThicknessMap,ae=j&&!!a.sheenColorMap,ie=j&&!!a.sheenRoughnessMap,oe=!!a.specularMap,le=!!a.specularColorMap,ue=!!a.specularIntensityMap,ce=Y&&!!a.transmissionMap,he=Y&&!!a.thicknessMap,de=!!a.gradientMap,pe=!!a.alphaMap,me=a.alphaTest>0,fe=!!a.alphaHash,ge=!!a.extensions,ye=!!x.attributes.uv1,be=!!x.attributes.uv2,xe=!!x.attributes.uv3;let ve=0;return a.toneMapped&&(null!==L&&!0!==L.isXRRenderTarget||(ve=e.toneMapping)),{isWebGL2:c,shaderID:T,shaderType:a.type,shaderName:a.name,vertexShader:M,fragmentShader:E,defines:a.defines,customVertexShaderID:N,customFragmentShaderID:k,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,batching:P,instancing:A,instancingColor:A&&null!==y.instanceColor,supportsVertexTextures:d,outputColorSpace:null===L?e.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:ee,map:D,matcap:O,envMap:G,envMapMode:G&&w.mapping,envMapCubeUVHeight:S,aoMap:z,lightMap:F,bumpMap:W,normalMap:V,displacementMap:d&&U,emissiveMap:B,normalMapObjectSpace:V&&1===a.normalMapType,normalMapTangentSpace:V&&0===a.normalMapType,metalnessMap:X,roughnessMap:$,anisotropy:H,anisotropyMap:Q,clearcoat:Z,clearcoatMap:J,clearcoatNormalMap:q,clearcoatRoughnessMap:te,iridescence:K,iridescenceMap:ne,iridescenceThicknessMap:re,sheen:j,sheenColorMap:ae,sheenRoughnessMap:ie,specularMap:oe,specularColorMap:le,specularIntensityMap:ue,transmission:Y,transmissionMap:ce,thicknessMap:he,gradientMap:de,opaque:!1===a.transparent&&1===a.blending,alphaMap:pe,alphaTest:me,alphaHash:fe,combine:a.combine,mapUv:D&&f(a.map.channel),aoMapUv:z&&f(a.aoMap.channel),lightMapUv:F&&f(a.lightMap.channel),bumpMapUv:W&&f(a.bumpMap.channel),normalMapUv:V&&f(a.normalMap.channel),displacementMapUv:U&&f(a.displacementMap.channel),emissiveMapUv:B&&f(a.emissiveMap.channel),metalnessMapUv:X&&f(a.metalnessMap.channel),roughnessMapUv:$&&f(a.roughnessMap.channel),anisotropyMapUv:Q&&f(a.anisotropyMap.channel),clearcoatMapUv:J&&f(a.clearcoatMap.channel),clearcoatNormalMapUv:q&&f(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:te&&f(a.clearcoatRoughnessMap.channel),iridescenceMapUv:ne&&f(a.iridescenceMap.channel),iridescenceThicknessMapUv:re&&f(a.iridescenceThicknessMap.channel),sheenColorMapUv:ae&&f(a.sheenColorMap.channel),sheenRoughnessMapUv:ie&&f(a.sheenRoughnessMap.channel),specularMapUv:oe&&f(a.specularMap.channel),specularColorMapUv:le&&f(a.specularColorMap.channel),specularIntensityMapUv:ue&&f(a.specularIntensityMap.channel),transmissionMapUv:ce&&f(a.transmissionMap.channel),thicknessMapUv:he&&f(a.thicknessMap.channel),alphaMapUv:pe&&f(a.alphaMap.channel),vertexTangents:!!x.attributes.tangent&&(V||H),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,vertexUv1s:ye,vertexUv2s:be,vertexUv3s:xe,pointsUvs:!0===y.isPoints&&!!x.attributes.uv&&(D||pe),fog:!!b,useFog:!0===a.fog,fogExp2:b&&b.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===y.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:C,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:i.numPlanes,numClipIntersection:i.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:ve,useLegacyLights:e._useLegacyLights,decodeVideoTexture:D&&!0===a.map.isVideoTexture&&Be.getTransfer(a.map.colorSpace)===se,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:ge&&!0===a.extensions.derivatives,extensionFragDepth:ge&&!0===a.extensions.fragDepth,extensionDrawBuffers:ge&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:ge&&!0===a.extensions.shaderTextureLOD,extensionClipCullDistance:ge&&a.extensions.clipCullDistance&&r.has("WEBGL_clip_cull_distance"),rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:r.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.anisotropyMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.numLightProbes),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){o.disableAll(),t.isWebGL2&&o.enable(0),t.supportsVertexTextures&&o.enable(1),t.instancing&&o.enable(2),t.instancingColor&&o.enable(3),t.matcap&&o.enable(4),t.envMap&&o.enable(5),t.normalMapObjectSpace&&o.enable(6),t.normalMapTangentSpace&&o.enable(7),t.clearcoat&&o.enable(8),t.iridescence&&o.enable(9),t.alphaTest&&o.enable(10),t.vertexColors&&o.enable(11),t.vertexAlphas&&o.enable(12),t.vertexUv1s&&o.enable(13),t.vertexUv2s&&o.enable(14),t.vertexUv3s&&o.enable(15),t.vertexTangents&&o.enable(16),t.anisotropy&&o.enable(17),t.alphaHash&&o.enable(18),t.batching&&o.enable(19),e.push(o.mask),o.disableAll(),t.fog&&o.enable(0),t.useFog&&o.enable(1),t.flatShading&&o.enable(2),t.logarithmicDepthBuffer&&o.enable(3),t.skinning&&o.enable(4),t.morphTargets&&o.enable(5),t.morphNormals&&o.enable(6),t.morphColors&&o.enable(7),t.premultipliedAlpha&&o.enable(8),t.shadowMapEnabled&&o.enable(9),t.useLegacyLights&&o.enable(10),t.doubleSided&&o.enable(11),t.flipSided&&o.enable(12),t.useDepthPacking&&o.enable(13),t.dithering&&o.enable(14),t.transmission&&o.enable(15),t.sheen&&o.enable(16),t.opaque&&o.enable(17),t.pointsUvs&&o.enable(18),t.decodeVideoTexture&&o.enable(19),e.push(o.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=m[e.type];let n;if(t){const e=Lr[t];n=dr.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let r;for(let e=0,t=u.length;e<t;e++){const t=u[e];if(t.cacheKey===n){r=t,++r.usedTimes;break}}return void 0===r&&(r=new La(e,n,t,a),u.push(r)),r},releaseProgram:function(e){if(0==--e.usedTimes){const t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function Ga(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function za(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Fa(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Wa(){const e=[];let t=0;const n=[],r=[],s=[];function a(n,r,s,a,i,o){let l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:s,groupOrder:a,renderOrder:n.renderOrder,z:i,group:o},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=s,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=i,l.group=o),t++,l}return{opaque:n,transmissive:r,transparent:s,init:function(){t=0,n.length=0,r.length=0,s.length=0},push:function(e,t,i,o,l,u){const c=a(e,t,i,o,l,u);i.transmission>0?r.push(c):!0===i.transparent?s.push(c):n.push(c)},unshift:function(e,t,i,o,l,u){const c=a(e,t,i,o,l,u);i.transmission>0?r.unshift(c):!0===i.transparent?s.unshift(c):n.unshift(c)},finish:function(){for(let n=t,r=e.length;n<r;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||za),r.length>1&&r.sort(t||Fa),s.length>1&&s.sort(t||Fa)}}}function Va(){let e=new WeakMap;return{get:function(t,n){const r=e.get(t);let s;return void 0===r?(s=new Wa,e.set(t,[s])):n>=r.length?(s=new Wa,r.push(s)):s=r[n],s},dispose:function(){e=new WeakMap}}}function Ua(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new at,color:new _n};break;case"SpotLight":n={position:new at,direction:new at,color:new _n,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new at,color:new _n,distance:0,decay:0};break;case"HemisphereLight":n={direction:new at,skyColor:new _n,groundColor:new _n};break;case"RectAreaLight":n={color:new _n,position:new at,halfWidth:new at,halfHeight:new at}}return e[t.id]=n,n}}}let Ba=0;function Xa(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function $a(e,t){const n=new Ua,r=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let e=0;e<9;e++)s.probe.push(new at);const a=new at,i=new Dt,o=new Dt;return{setup:function(a,i){let o=0,l=0,u=0;for(let e=0;e<9;e++)s.probe[e].set(0,0,0);let c=0,h=0,d=0,p=0,m=0,f=0,g=0,y=0,b=0,x=0,v=0;a.sort(Xa);const w=!0===i?Math.PI:1;for(let e=0,t=a.length;e<t;e++){const t=a[e],i=t.color,S=t.intensity,T=t.distance,_=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=i.r*S*w,l+=i.g*S*w,u+=i.b*S*w;else if(t.isLightProbe){for(let e=0;e<9;e++)s.probe[e].addScaledVector(t.sh.coefficients[e],S);v++}else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*w),t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,s.directionalShadow[c]=n,s.directionalShadowMap[c]=_,s.directionalShadowMatrix[c]=t.shadow.matrix,f++}s.directional[c]=e,c++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(i).multiplyScalar(S*w),e.distance=T,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,s.spot[d]=e;const a=t.shadow;if(t.map&&(s.spotLightMap[b]=t.map,b++,a.updateMatrices(t),t.castShadow&&x++),s.spotLightMatrix[d]=a.matrix,t.castShadow){const e=r.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,s.spotShadow[d]=e,s.spotShadowMap[d]=_,y++}d++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(i).multiplyScalar(S),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),s.rectArea[p]=e,p++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*w),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=r.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,s.pointShadow[h]=n,s.pointShadowMap[h]=_,s.pointShadowMatrix[h]=t.shadow.matrix,g++}s.point[h]=e,h++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(S*w),e.groundColor.copy(t.groundColor).multiplyScalar(S*w),s.hemi[m]=e,m++}}p>0&&(t.isWebGL2?!0===e.has("OES_texture_float_linear")?(s.rectAreaLTC1=Rr.LTC_FLOAT_1,s.rectAreaLTC2=Rr.LTC_FLOAT_2):(s.rectAreaLTC1=Rr.LTC_HALF_1,s.rectAreaLTC2=Rr.LTC_HALF_2):!0===e.has("OES_texture_float_linear")?(s.rectAreaLTC1=Rr.LTC_FLOAT_1,s.rectAreaLTC2=Rr.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(s.rectAreaLTC1=Rr.LTC_HALF_1,s.rectAreaLTC2=Rr.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=o,s.ambient[1]=l,s.ambient[2]=u;const S=s.hash;S.directionalLength===c&&S.pointLength===h&&S.spotLength===d&&S.rectAreaLength===p&&S.hemiLength===m&&S.numDirectionalShadows===f&&S.numPointShadows===g&&S.numSpotShadows===y&&S.numSpotMaps===b&&S.numLightProbes===v||(s.directional.length=c,s.spot.length=d,s.rectArea.length=p,s.point.length=h,s.hemi.length=m,s.directionalShadow.length=f,s.directionalShadowMap.length=f,s.pointShadow.length=g,s.pointShadowMap.length=g,s.spotShadow.length=y,s.spotShadowMap.length=y,s.directionalShadowMatrix.length=f,s.pointShadowMatrix.length=g,s.spotLightMatrix.length=y+b-x,s.spotLightMap.length=b,s.numSpotLightShadowsWithMaps=x,s.numLightProbes=v,S.directionalLength=c,S.pointLength=h,S.spotLength=d,S.rectAreaLength=p,S.hemiLength=m,S.numDirectionalShadows=f,S.numPointShadows=g,S.numSpotShadows=y,S.numSpotMaps=b,S.numLightProbes=v,s.version=Ba++)},setupView:function(e,t){let n=0,r=0,l=0,u=0,c=0;const h=t.matrixWorldInverse;for(let t=0,d=e.length;t<d;t++){const d=e[t];if(d.isDirectionalLight){const e=s.directional[n];e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),n++}else if(d.isSpotLight){const e=s.spot[l];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),e.direction.setFromMatrixPosition(d.matrixWorld),a.setFromMatrixPosition(d.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(h),l++}else if(d.isRectAreaLight){const e=s.rectArea[u];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),o.identity(),i.copy(d.matrixWorld),i.premultiply(h),o.extractRotation(i),e.halfWidth.set(.5*d.width,0,0),e.halfHeight.set(0,.5*d.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),u++}else if(d.isPointLight){const e=s.point[r];e.position.setFromMatrixPosition(d.matrixWorld),e.position.applyMatrix4(h),r++}else if(d.isHemisphereLight){const e=s.hemi[c];e.direction.setFromMatrixPosition(d.matrixWorld),e.direction.transformDirection(h),c++}}},state:s}}function Ha(e,t){const n=new $a(e,t),r=[],s=[];return{init:function(){r.length=0,s.length=0},state:{lightsArray:r,shadowsArray:s,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){s.push(e)}}}function Za(e,t){let n=new WeakMap;return{get:function(r,s=0){const a=n.get(r);let i;return void 0===a?(i=new Ha(e,t),n.set(r,[i])):s>=a.length?(i=new Ha(e,t),a.push(i)):i=a[s],i},dispose:function(){n=new WeakMap}}}class Ka extends Mn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ja extends Mn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Ya(e,s,a){let i=new Cr;const o=new Re,l=new Re,u=new qe,c=new Ka({depthPacking:3201}),h=new ja,d={},p=a.maxTextureSize,m={[t]:1,[n]:0,[r]:2},f=new pr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Re},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),g=f.clone();g.defines.HORIZONTAL_PASS=1;const y=new Un;y.setAttribute("position",new Rn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new ir(y,f),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let v=this.type;function w(t,n){const r=s.update(b);f.defines.VSM_SAMPLES!==t.blurSamples&&(f.defines.VSM_SAMPLES=t.blurSamples,g.defines.VSM_SAMPLES=t.blurSamples,f.needsUpdate=!0,g.needsUpdate=!0),null===t.mapPass&&(t.mapPass=new tt(o.x,o.y)),f.uniforms.shadow_pass.value=t.map.texture,f.uniforms.resolution.value=t.mapSize,f.uniforms.radius.value=t.radius,e.setRenderTarget(t.mapPass),e.clear(),e.renderBufferDirect(n,null,r,f,b,null),g.uniforms.shadow_pass.value=t.mapPass.texture,g.uniforms.resolution.value=t.mapSize,g.uniforms.radius.value=t.radius,e.setRenderTarget(t.map),e.clear(),e.renderBufferDirect(n,null,r,g,b,null)}function S(t,n,r,s){let a=null;const i=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==i)a=i;else if(a=!0===r.isPointLight?h:c,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=a.uuid,t=n.uuid;let r=d[e];void 0===r&&(r={},d[e]=r);let s=r[t];void 0===s&&(s=a.clone(),r[t]=s,n.addEventListener("dispose",_)),a=s}return a.visible=n.visible,a.wireframe=n.wireframe,a.side=3===s?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:m[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===r.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=r),a}function T(t,n,r,a,o){if(!1===t.visible)return;if(t.layers.test(n.layers)&&(t.isMesh||t.isLine||t.isPoints)&&(t.castShadow||t.receiveShadow&&3===o)&&(!t.frustumCulled||i.intersectsObject(t))){t.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld);const i=s.update(t),l=t.material;if(Array.isArray(l)){const s=i.groups;for(let u=0,c=s.length;u<c;u++){const c=s[u],h=l[c.materialIndex];if(h&&h.visible){const s=S(t,h,a,o);t.onBeforeShadow(e,t,n,r,i,s,c),e.renderBufferDirect(r,null,i,s,t,c),t.onAfterShadow(e,t,n,r,i,s,c)}}}else if(l.visible){const s=S(t,l,a,o);t.onBeforeShadow(e,t,n,r,i,s,null),e.renderBufferDirect(r,null,i,s,t,null),t.onAfterShadow(e,t,n,r,i,s,null)}}const l=t.children;for(let e=0,t=l.length;e<t;e++)T(l[e],n,r,a,o)}function _(e){e.target.removeEventListener("dispose",_);for(const t in d){const n=d[t],r=e.target.uuid;r in n&&(n[r].dispose(),delete n[r])}}this.render=function(t,n,r){if(!1===x.enabled)return;if(!1===x.autoUpdate&&!1===x.needsUpdate)return;if(0===t.length)return;const s=e.getRenderTarget(),a=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),h=e.state;h.setBlending(0),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);const d=3!==v&&3===this.type,m=3===v&&3!==this.type;for(let s=0,a=t.length;s<a;s++){const a=t[s],c=a.shadow;if(void 0===c){console.warn("THREE.WebGLShadowMap:",a,"has no shadow.");continue}if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;o.copy(c.mapSize);const f=c.getFrameExtents();if(o.multiply(f),l.copy(c.mapSize),(o.x>p||o.y>p)&&(o.x>p&&(l.x=Math.floor(p/f.x),o.x=l.x*f.x,c.mapSize.x=l.x),o.y>p&&(l.y=Math.floor(p/f.y),o.y=l.y*f.y,c.mapSize.y=l.y)),null===c.map||!0===d||!0===m){const e=3!==this.type?{minFilter:E,magFilter:E}:{};null!==c.map&&c.map.dispose(),c.map=new tt(o.x,o.y,e),c.map.texture.name=a.name+".shadowMap",c.camera.updateProjectionMatrix()}e.setRenderTarget(c.map),e.clear();const g=c.getViewportCount();for(let e=0;e<g;e++){const t=c.getViewport(e);u.set(l.x*t.x,l.y*t.y,l.x*t.z,l.y*t.w),h.viewport(u),c.updateMatrices(a,e),i=c.getFrustum(),T(n,r,c.camera,a,this.type)}!0!==c.isPointLightShadow&&3===this.type&&w(c,r),c.needsUpdate=!1}v=this.type,x.needsUpdate=!1,e.setRenderTarget(s,a,c)}}function Qa(e,t,n){const r=n.isWebGL2,S=new function(){let t=!1;const n=new qe;let r=null;const s=new qe(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,i,o){!0===o&&(t*=i,r*=i,a*=i),n.set(t,r,a,i),!1===s.equals(n)&&(e.clearColor(t,r,a,i),s.copy(n))},reset:function(){t=!1,r=null,s.set(-1,0,0,0)}}},T=new function(){let t=!1,n=null,r=null,s=null;return{setTest:function(t){t?ie(e.DEPTH_TEST):oe(e.DEPTH_TEST)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}r=t}},setLocked:function(e){t=e},setClear:function(t){s!==t&&(e.clearDepth(t),s=t)},reset:function(){t=!1,n=null,r=null,s=null}}},_=new function(){let t=!1,n=null,r=null,s=null,a=null,i=null,o=null,l=null,u=null;return{setTest:function(n){t||(n?ie(e.STENCIL_TEST):oe(e.STENCIL_TEST))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,i){r===t&&s===n&&a===i||(e.stencilFunc(t,n,i),r=t,s=n,a=i)},setOp:function(t,n,r){i===t&&o===n&&l===r||(e.stencilOp(t,n,r),i=t,o=n,l=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,s=null,a=null,i=null,o=null,l=null,u=null}}},I=new WeakMap,C=new WeakMap;let M={},E={},N=new WeakMap,k=[],R=null,L=!1,A=null,P=null,D=null,O=null,G=null,z=null,F=null,W=new _n(0,0,0),V=0,U=!1,B=null,X=null,$=null,H=null,Z=null;const K=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let j=!1,Y=0;const Q=e.getParameter(e.VERSION);-1!==Q.indexOf("WebGL")?(Y=parseFloat(/^WebGL (\d)/.exec(Q)[1]),j=Y>=1):-1!==Q.indexOf("OpenGL ES")&&(Y=parseFloat(/^OpenGL ES (\d)/.exec(Q)[1]),j=Y>=2);let J=null,q={};const ee=e.getParameter(e.SCISSOR_BOX),te=e.getParameter(e.VIEWPORT),ne=(new qe).fromArray(ee),re=(new qe).fromArray(te);function se(t,n,s,a){const i=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<s;o++)!r||t!==e.TEXTURE_3D&&t!==e.TEXTURE_2D_ARRAY?e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i):e.texImage3D(n,0,e.RGBA,1,1,a,0,e.RGBA,e.UNSIGNED_BYTE,i);return o}const ae={};function ie(t){!0!==M[t]&&(e.enable(t),M[t]=!0)}function oe(t){!1!==M[t]&&(e.disable(t),M[t]=!1)}ae[e.TEXTURE_2D]=se(e.TEXTURE_2D,e.TEXTURE_2D,1),ae[e.TEXTURE_CUBE_MAP]=se(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),r&&(ae[e.TEXTURE_2D_ARRAY]=se(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),ae[e.TEXTURE_3D]=se(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),S.setClear(0,0,0,1),T.setClear(1),_.setClear(0),ie(e.DEPTH_TEST),T.setFunc(3),he(!1),de(1),ie(e.CULL_FACE),ce(0);const le={[s]:e.FUNC_ADD,[a]:e.FUNC_SUBTRACT,[i]:e.FUNC_REVERSE_SUBTRACT};if(r)le[103]=e.MIN,le[104]=e.MAX;else{const e=t.get("EXT_blend_minmax");null!==e&&(le[103]=e.MIN_EXT,le[104]=e.MAX_EXT)}const ue={[o]:e.ZERO,[l]:e.ONE,[u]:e.SRC_COLOR,[h]:e.SRC_ALPHA,[y]:e.SRC_ALPHA_SATURATE,[f]:e.DST_COLOR,[p]:e.DST_ALPHA,[c]:e.ONE_MINUS_SRC_COLOR,[d]:e.ONE_MINUS_SRC_ALPHA,[g]:e.ONE_MINUS_DST_COLOR,[m]:e.ONE_MINUS_DST_ALPHA,[b]:e.CONSTANT_COLOR,[x]:e.ONE_MINUS_CONSTANT_COLOR,[v]:e.CONSTANT_ALPHA,[w]:e.ONE_MINUS_CONSTANT_ALPHA};function ce(t,n,r,a,i,o,l,u,c,h){if(0!==t){if(!1===L&&(ie(e.BLEND),L=!0),5===t)i=i||n,o=o||r,l=l||a,n===P&&i===G||(e.blendEquationSeparate(le[n],le[i]),P=n,G=i),r===D&&a===O&&o===z&&l===F||(e.blendFuncSeparate(ue[r],ue[a],ue[o],ue[l]),D=r,O=a,z=o,F=l),!1!==u.equals(W)&&c===V||(e.blendColor(u.r,u.g,u.b,c),W.copy(u),V=c),A=t,U=!1;else if(t!==A||h!==U){if(P===s&&G===s||(e.blendEquation(e.FUNC_ADD),P=s,G=s),h)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}D=null,O=null,z=null,F=null,W.set(0,0,0),V=0,A=t,U=h}}else!0===L&&(oe(e.BLEND),L=!1)}function he(t){B!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),B=t)}function de(t){0!==t?(ie(e.CULL_FACE),t!==X&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):oe(e.CULL_FACE),X=t}function pe(t,n,r){t?(ie(e.POLYGON_OFFSET_FILL),H===n&&Z===r||(e.polygonOffset(n,r),H=n,Z=r)):oe(e.POLYGON_OFFSET_FILL)}return{buffers:{color:S,depth:T,stencil:_},enable:ie,disable:oe,bindFramebuffer:function(t,n){return E[t]!==n&&(e.bindFramebuffer(t,n),E[t]=n,r&&(t===e.DRAW_FRAMEBUFFER&&(E[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(E[e.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(r,s){let a=k,i=!1;if(r)if(a=N.get(s),void 0===a&&(a=[],N.set(s,a)),r.isWebGLMultipleRenderTargets){const t=r.texture;if(a.length!==t.length||a[0]!==e.COLOR_ATTACHMENT0){for(let n=0,r=t.length;n<r;n++)a[n]=e.COLOR_ATTACHMENT0+n;a.length=t.length,i=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,i=!0);else a[0]!==e.BACK&&(a[0]=e.BACK,i=!0);i&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return R!==t&&(e.useProgram(t),R=t,!0)},setBlending:ce,setMaterial:function(t,n){2===t.side?oe(e.CULL_FACE):ie(e.CULL_FACE);let r=1===t.side;n&&(r=!r),he(r),1===t.blending&&!1===t.transparent?ce(0):ce(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.blendColor,t.blendAlpha,t.premultipliedAlpha),T.setFunc(t.depthFunc),T.setTest(t.depthTest),T.setMask(t.depthWrite),S.setMask(t.colorWrite);const s=t.stencilWrite;_.setTest(s),s&&(_.setMask(t.stencilWriteMask),_.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),_.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),pe(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?ie(e.SAMPLE_ALPHA_TO_COVERAGE):oe(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:he,setCullFace:de,setLineWidth:function(t){t!==$&&(j&&e.lineWidth(t),$=t)},setPolygonOffset:pe,setScissorTest:function(t){t?ie(e.SCISSOR_TEST):oe(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+K-1),J!==t&&(e.activeTexture(t),J=t)},bindTexture:function(t,n,r){void 0===r&&(r=null===J?e.TEXTURE0+K-1:J);let s=q[r];void 0===s&&(s={type:void 0,texture:void 0},q[r]=s),s.type===t&&s.texture===n||(J!==r&&(e.activeTexture(r),J=r),e.bindTexture(t,n||ae[t]),s.type=t,s.texture=n)},unbindTexture:function(){const t=q[J];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let r=C.get(n);void 0===r&&(r=new WeakMap,C.set(n,r));let s=r.get(t);void 0===s&&(s=e.getUniformBlockIndex(n,t.name),r.set(t,s))},uniformBlockBinding:function(t,n){const r=C.get(n).get(t);I.get(n)!==r&&(e.uniformBlockBinding(n,r,t.__bindingPointIndex),I.set(n,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===ne.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),ne.copy(t))},viewport:function(t){!1===re.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),re.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===r&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),M={},J=null,q={},E={},N=new WeakMap,k=[],R=null,L=!1,A=null,P=null,D=null,O=null,G=null,z=null,F=null,W=new _n(0,0,0),V=0,U=!1,B=null,X=null,$=null,H=null,Z=null,ne.set(0,0,e.canvas.width,e.canvas.height),re.set(0,0,e.canvas.width,e.canvas.height),S.reset(),T.reset(),_.reset()}}}function Ja(e,t,n,r,s,a,i){const o=s.isWebGL2,l=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,u="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),c=new WeakMap;let h;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function m(e,t){return p?new OffscreenCanvas(e,t):De("canvas")}function f(e,t,n,r){let s=1;if((e.width>r||e.height>r)&&(s=r/Math.max(e.width,e.height)),s<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=t?Ee:Math.floor,a=r(s*e.width),i=r(s*e.height);void 0===h&&(h=m(a,i));const o=n?m(a,i):h;return o.width=a,o.height=i,o.getContext("2d").drawImage(e,0,0,a,i),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+i+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function g(e){return Me(e.width)&&Me(e.height)}function y(e,t){return e.generateMipmaps&&t&&e.minFilter!==E&&e.minFilter!==R}function b(t){e.generateMipmap(t)}function x(n,r,s,a,i=!1){if(!1===o)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let l=r;if(r===e.RED&&(s===e.FLOAT&&(l=e.R32F),s===e.HALF_FLOAT&&(l=e.R16F),s===e.UNSIGNED_BYTE&&(l=e.R8)),r===e.RED_INTEGER&&(s===e.UNSIGNED_BYTE&&(l=e.R8UI),s===e.UNSIGNED_SHORT&&(l=e.R16UI),s===e.UNSIGNED_INT&&(l=e.R32UI),s===e.BYTE&&(l=e.R8I),s===e.SHORT&&(l=e.R16I),s===e.INT&&(l=e.R32I)),r===e.RG&&(s===e.FLOAT&&(l=e.RG32F),s===e.HALF_FLOAT&&(l=e.RG16F),s===e.UNSIGNED_BYTE&&(l=e.RG8)),r===e.RGBA){const t=i?re:Be.getTransfer(a);s===e.FLOAT&&(l=e.RGBA32F),s===e.HALF_FLOAT&&(l=e.RGBA16F),s===e.UNSIGNED_BYTE&&(l=t===se?e.SRGB8_ALPHA8:e.RGBA8),s===e.UNSIGNED_SHORT_4_4_4_4&&(l=e.RGBA4),s===e.UNSIGNED_SHORT_5_5_5_1&&(l=e.RGB5_A1)}return l!==e.R16F&&l!==e.R32F&&l!==e.RG16F&&l!==e.RG32F&&l!==e.RGBA16F&&l!==e.RGBA32F||t.get("EXT_color_buffer_float"),l}function v(e,t,n){return!0===y(e,n)||e.isFramebufferTexture&&e.minFilter!==E&&e.minFilter!==R?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function w(t){return t===E||1004===t||t===k?e.NEAREST:e.LINEAR}function S(e){const t=e.target;t.removeEventListener("dispose",S),function(e){const t=r.get(e);if(void 0===t.__webglInit)return;const n=e.source,s=d.get(n);if(s){const r=s[t.__cacheKey];r.usedTimes--,0===r.usedTimes&&_(e),0===Object.keys(s).length&&d.delete(n)}r.remove(e)}(t),t.isVideoTexture&&c.delete(t)}function T(t){const n=t.target;n.removeEventListener("dispose",T),function(t){const n=t.texture,s=r.get(t),a=r.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),i.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++){if(Array.isArray(s.__webglFramebuffer[t]))for(let n=0;n<s.__webglFramebuffer[t].length;n++)e.deleteFramebuffer(s.__webglFramebuffer[t][n]);else e.deleteFramebuffer(s.__webglFramebuffer[t]);s.__webglDepthbuffer&&e.deleteRenderbuffer(s.__webglDepthbuffer[t])}else{if(Array.isArray(s.__webglFramebuffer))for(let t=0;t<s.__webglFramebuffer.length;t++)e.deleteFramebuffer(s.__webglFramebuffer[t]);else e.deleteFramebuffer(s.__webglFramebuffer);if(s.__webglDepthbuffer&&e.deleteRenderbuffer(s.__webglDepthbuffer),s.__webglMultisampledFramebuffer&&e.deleteFramebuffer(s.__webglMultisampledFramebuffer),s.__webglColorRenderbuffer)for(let t=0;t<s.__webglColorRenderbuffer.length;t++)s.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(s.__webglColorRenderbuffer[t]);s.__webglDepthRenderbuffer&&e.deleteRenderbuffer(s.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,s=n.length;t<s;t++){const s=r.get(n[t]);s.__webglTexture&&(e.deleteTexture(s.__webglTexture),i.memory.textures--),r.remove(n[t])}r.remove(n),r.remove(t)}(n)}function _(t){const n=r.get(t);e.deleteTexture(n.__webglTexture);const s=t.source;delete d.get(s)[n.__cacheKey],i.memory.textures--}let B=0;function X(t,s){const a=r.get(t);if(t.isVideoTexture&&function(e){const t=i.render.frame;c.get(e)!==t&&(c.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void Y(a,t,s);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+s)}const $={[I]:e.REPEAT,[C]:e.CLAMP_TO_EDGE,[M]:e.MIRRORED_REPEAT},H={[E]:e.NEAREST,[N]:e.NEAREST_MIPMAP_NEAREST,[k]:e.NEAREST_MIPMAP_LINEAR,[R]:e.LINEAR,[L]:e.LINEAR_MIPMAP_NEAREST,[A]:e.LINEAR_MIPMAP_LINEAR},Z={[le]:e.NEVER,[fe]:e.ALWAYS,[ue]:e.LESS,[he]:e.LEQUAL,[ce]:e.EQUAL,[me]:e.GEQUAL,[de]:e.GREATER,[pe]:e.NOTEQUAL};function K(n,a,i){if(i?(e.texParameteri(n,e.TEXTURE_WRAP_S,$[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,$[a.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,$[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,H[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,H[a.minFilter])):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),a.wrapS===C&&a.wrapT===C||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,e.TEXTURE_MAG_FILTER,w(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,w(a.minFilter)),a.minFilter!==E&&a.minFilter!==R&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),a.compareFunction&&(e.texParameteri(n,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,Z[a.compareFunction])),!0===t.has("EXT_texture_filter_anisotropic")){const i=t.get("EXT_texture_filter_anisotropic");if(a.magFilter===E)return;if(a.minFilter!==k&&a.minFilter!==A)return;if(a.type===G&&!1===t.has("OES_texture_float_linear"))return;if(!1===o&&a.type===z&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,s.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function j(t,n){let r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",S));const s=n.source;let a=d.get(s);void 0===a&&(a={},d.set(s,a));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},i.memory.textures++,r=!0),a[o].usedTimes++;const s=a[t.__cacheKey];void 0!==s&&(a[t.__cacheKey].usedTimes--,0===s.usedTimes&&_(n)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return r}function Y(t,i,l){let u=e.TEXTURE_2D;(i.isDataArrayTexture||i.isCompressedArrayTexture)&&(u=e.TEXTURE_2D_ARRAY),i.isData3DTexture&&(u=e.TEXTURE_3D);const c=j(t,i),h=i.source;n.bindTexture(u,t.__webglTexture,e.TEXTURE0+l);const d=r.get(h);if(h.version!==d.__version||!0===c){n.activeTexture(e.TEXTURE0+l);const t=Be.getPrimaries(Be.workingColorSpace),r=i.colorSpace===J?null:Be.getPrimaries(i.colorSpace),p=i.colorSpace===J||t===r?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);const m=function(e){return!o&&(e.wrapS!==C||e.wrapT!==C||e.minFilter!==E&&e.minFilter!==R)}(i)&&!1===g(i.image);let w=f(i.image,m,!1,s.maxTextureSize);w=ie(i,w);const S=g(w)||o,T=a.convert(i.format,i.colorSpace);let _,I=a.convert(i.type),M=x(i.internalFormat,T,I,i.colorSpace,i.isVideoTexture);K(u,i,S);const N=i.mipmaps,k=o&&!0!==i.isVideoTexture&&36196!==M,L=void 0===d.__version||!0===c,A=v(i,w,S);if(i.isDepthTexture)M=e.DEPTH_COMPONENT,o?M=i.type===G?e.DEPTH_COMPONENT32F:i.type===O?e.DEPTH_COMPONENT24:i.type===F?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:i.type===G&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===V&&M===e.DEPTH_COMPONENT&&i.type!==D&&i.type!==O&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=O,I=a.convert(i.type)),i.format===U&&M===e.DEPTH_COMPONENT&&(M=e.DEPTH_STENCIL,i.type!==F&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=F,I=a.convert(i.type))),L&&(k?n.texStorage2D(e.TEXTURE_2D,1,M,w.width,w.height):n.texImage2D(e.TEXTURE_2D,0,M,w.width,w.height,0,T,I,null));else if(i.isDataTexture)if(N.length>0&&S){k&&L&&n.texStorage2D(e.TEXTURE_2D,A,M,N[0].width,N[0].height);for(let t=0,r=N.length;t<r;t++)_=N[t],k?n.texSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,T,I,_.data):n.texImage2D(e.TEXTURE_2D,t,M,_.width,_.height,0,T,I,_.data);i.generateMipmaps=!1}else k?(L&&n.texStorage2D(e.TEXTURE_2D,A,M,w.width,w.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,w.width,w.height,T,I,w.data)):n.texImage2D(e.TEXTURE_2D,0,M,w.width,w.height,0,T,I,w.data);else if(i.isCompressedTexture)if(i.isCompressedArrayTexture){k&&L&&n.texStorage3D(e.TEXTURE_2D_ARRAY,A,M,N[0].width,N[0].height,w.depth);for(let t=0,r=N.length;t<r;t++)_=N[t],i.format!==W?null!==T?k?n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,_.width,_.height,w.depth,T,_.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,M,_.width,_.height,w.depth,0,_.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):k?n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,_.width,_.height,w.depth,T,I,_.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,M,_.width,_.height,w.depth,0,T,I,_.data)}else{k&&L&&n.texStorage2D(e.TEXTURE_2D,A,M,N[0].width,N[0].height);for(let t=0,r=N.length;t<r;t++)_=N[t],i.format!==W?null!==T?k?n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,T,_.data):n.compressedTexImage2D(e.TEXTURE_2D,t,M,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):k?n.texSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,T,I,_.data):n.texImage2D(e.TEXTURE_2D,t,M,_.width,_.height,0,T,I,_.data)}else if(i.isDataArrayTexture)k?(L&&n.texStorage3D(e.TEXTURE_2D_ARRAY,A,M,w.width,w.height,w.depth),n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,w.width,w.height,w.depth,T,I,w.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,M,w.width,w.height,w.depth,0,T,I,w.data);else if(i.isData3DTexture)k?(L&&n.texStorage3D(e.TEXTURE_3D,A,M,w.width,w.height,w.depth),n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,w.width,w.height,w.depth,T,I,w.data)):n.texImage3D(e.TEXTURE_3D,0,M,w.width,w.height,w.depth,0,T,I,w.data);else if(i.isFramebufferTexture){if(L)if(k)n.texStorage2D(e.TEXTURE_2D,A,M,w.width,w.height);else{let t=w.width,r=w.height;for(let s=0;s<A;s++)n.texImage2D(e.TEXTURE_2D,s,M,t,r,0,T,I,null),t>>=1,r>>=1}}else if(N.length>0&&S){k&&L&&n.texStorage2D(e.TEXTURE_2D,A,M,N[0].width,N[0].height);for(let t=0,r=N.length;t<r;t++)_=N[t],k?n.texSubImage2D(e.TEXTURE_2D,t,0,0,T,I,_):n.texImage2D(e.TEXTURE_2D,t,M,T,I,_);i.generateMipmaps=!1}else k?(L&&n.texStorage2D(e.TEXTURE_2D,A,M,w.width,w.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,T,I,w)):n.texImage2D(e.TEXTURE_2D,0,M,T,I,w);y(i,S)&&b(u),d.__version=h.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}function Q(t,s,i,o,u,c){const h=a.convert(i.format,i.colorSpace),d=a.convert(i.type),p=x(i.internalFormat,h,d,i.colorSpace);if(!r.get(s).__hasExternalTextures){const t=Math.max(1,s.width>>c),r=Math.max(1,s.height>>c);u===e.TEXTURE_3D||u===e.TEXTURE_2D_ARRAY?n.texImage3D(u,c,p,t,r,s.depth,0,h,d,null):n.texImage2D(u,c,p,t,r,0,h,d,null)}n.bindFramebuffer(e.FRAMEBUFFER,t),ae(s)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,u,r.get(i).__webglTexture,0,ne(s)):(u===e.TEXTURE_2D||u>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&u<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,o,u,r.get(i).__webglTexture,c),n.bindFramebuffer(e.FRAMEBUFFER,null)}function q(t,n,r){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let s=!0===o?e.DEPTH_COMPONENT24:e.DEPTH_COMPONENT16;if(r||ae(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===G?s=e.DEPTH_COMPONENT32F:t.type===O&&(s=e.DEPTH_COMPONENT24));const r=ne(n);ae(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,s,n.width,n.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,r,s,n.width,n.height)}else e.renderbufferStorage(e.RENDERBUFFER,s,n.width,n.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){const s=ne(n);r&&!1===ae(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,s,e.DEPTH24_STENCIL8,n.width,n.height):ae(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,s,e.DEPTH24_STENCIL8,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let s=0;s<t.length;s++){const i=t[s],o=a.convert(i.format,i.colorSpace),u=a.convert(i.type),c=x(i.internalFormat,o,u,i.colorSpace),h=ne(n);r&&!1===ae(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,h,c,n.width,n.height):ae(n)?l.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,h,c,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,c,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function te(t){const s=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!s.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,s){if(s&&s.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!s.depthTexture||!s.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(s.depthTexture).__webglTexture&&s.depthTexture.image.width===s.width&&s.depthTexture.image.height===s.height||(s.depthTexture.image.width=s.width,s.depthTexture.image.height=s.height,s.depthTexture.needsUpdate=!0),X(s.depthTexture,0);const a=r.get(s.depthTexture).__webglTexture,i=ne(s);if(s.depthTexture.format===V)ae(s)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,i):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(s.depthTexture.format!==U)throw new Error("Unknown depthTexture format");ae(s)?l.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,i):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}(s.__webglFramebuffer,t)}else if(a){s.__webglDepthbuffer=[];for(let r=0;r<6;r++)n.bindFramebuffer(e.FRAMEBUFFER,s.__webglFramebuffer[r]),s.__webglDepthbuffer[r]=e.createRenderbuffer(),q(s.__webglDepthbuffer[r],t,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,s.__webglFramebuffer),s.__webglDepthbuffer=e.createRenderbuffer(),q(s.__webglDepthbuffer,t,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function ne(e){return Math.min(s.maxSamples,e.samples)}function ae(e){const n=r.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function ie(e,n){const r=e.colorSpace,s=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===ye||r!==ee&&r!==J&&(Be.getTransfer(r)===se?!1===o?!0===t.has("EXT_sRGB")&&s===W?(e.format=ye,e.minFilter=R,e.generateMipmaps=!1):n=Ze.sRGBToLinear(n):s===W&&a===P||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",r)),n}this.allocateTextureUnit=function(){const e=B;return e>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+s.maxTextures),B+=1,e},this.resetTextureUnits=function(){B=0},this.setTexture2D=X,this.setTexture2DArray=function(t,s){const a=r.get(t);t.version>0&&a.__version!==t.version?Y(a,t,s):n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+s)},this.setTexture3D=function(t,s){const a=r.get(t);t.version>0&&a.__version!==t.version?Y(a,t,s):n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+s)},this.setTextureCube=function(t,i){const l=r.get(t);t.version>0&&l.__version!==t.version?function(t,i,l){if(6!==i.image.length)return;const u=j(t,i),c=i.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+l);const h=r.get(c);if(c.version!==h.__version||!0===u){n.activeTexture(e.TEXTURE0+l);const t=Be.getPrimaries(Be.workingColorSpace),r=i.colorSpace===J?null:Be.getPrimaries(i.colorSpace),d=i.colorSpace===J||t===r?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,i.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);const p=i.isCompressedTexture||i.image[0].isCompressedTexture,m=i.image[0]&&i.image[0].isDataTexture,w=[];for(let e=0;e<6;e++)w[e]=p||m?m?i.image[e].image:i.image[e]:f(i.image[e],!1,!0,s.maxCubemapSize),w[e]=ie(i,w[e]);const S=w[0],T=g(S)||o,_=a.convert(i.format,i.colorSpace),I=a.convert(i.type),C=x(i.internalFormat,_,I,i.colorSpace),M=o&&!0!==i.isVideoTexture,E=void 0===h.__version||!0===u;let N,k=v(i,S,T);if(K(e.TEXTURE_CUBE_MAP,i,T),p){M&&E&&n.texStorage2D(e.TEXTURE_CUBE_MAP,k,C,S.width,S.height);for(let t=0;t<6;t++){N=w[t].mipmaps;for(let r=0;r<N.length;r++){const s=N[r];i.format!==W?null!==_?M?n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,0,0,s.width,s.height,_,s.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,C,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):M?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,0,0,s.width,s.height,_,I,s.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r,C,s.width,s.height,0,_,I,s.data)}}}else{N=i.mipmaps,M&&E&&(N.length>0&&k++,n.texStorage2D(e.TEXTURE_CUBE_MAP,k,C,w[0].width,w[0].height));for(let t=0;t<6;t++)if(m){M?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,w[t].width,w[t].height,_,I,w[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,C,w[t].width,w[t].height,0,_,I,w[t].data);for(let r=0;r<N.length;r++){const s=N[r].image[t].image;M?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,0,0,s.width,s.height,_,I,s.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,C,s.width,s.height,0,_,I,s.data)}}else{M?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,_,I,w[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,C,_,I,w[t]);for(let r=0;r<N.length;r++){const s=N[r];M?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,0,0,_,I,s.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,r+1,C,_,I,s.image[t])}}}y(i,T)&&b(e.TEXTURE_CUBE_MAP),h.__version=c.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}(l,t,i):n.bindTexture(e.TEXTURE_CUBE_MAP,l.__webglTexture,e.TEXTURE0+i)},this.rebindTextures=function(t,n,s){const a=r.get(t);void 0!==n&&Q(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),void 0!==s&&te(t)},this.setupRenderTarget=function(t){const l=t.texture,u=r.get(t),c=r.get(l);t.addEventListener("dispose",T),!0!==t.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=l.version,i.memory.textures++);const h=!0===t.isWebGLCubeRenderTarget,d=!0===t.isWebGLMultipleRenderTargets,p=g(t)||o;if(h){u.__webglFramebuffer=[];for(let t=0;t<6;t++)if(o&&l.mipmaps&&l.mipmaps.length>0){u.__webglFramebuffer[t]=[];for(let n=0;n<l.mipmaps.length;n++)u.__webglFramebuffer[t][n]=e.createFramebuffer()}else u.__webglFramebuffer[t]=e.createFramebuffer()}else{if(o&&l.mipmaps&&l.mipmaps.length>0){u.__webglFramebuffer=[];for(let t=0;t<l.mipmaps.length;t++)u.__webglFramebuffer[t]=e.createFramebuffer()}else u.__webglFramebuffer=e.createFramebuffer();if(d)if(s.drawBuffers){const n=t.texture;for(let t=0,s=n.length;t<s;t++){const s=r.get(n[t]);void 0===s.__webglTexture&&(s.__webglTexture=e.createTexture(),i.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&t.samples>0&&!1===ae(t)){const r=d?l:[l];u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer);for(let n=0;n<r.length;n++){const s=r[n];u.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,u.__webglColorRenderbuffer[n]);const i=a.convert(s.format,s.colorSpace),o=a.convert(s.type),l=x(s.internalFormat,i,o,s.colorSpace,!0===t.isXRRenderTarget),c=ne(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,c,l,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,u.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),q(u.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(h){n.bindTexture(e.TEXTURE_CUBE_MAP,c.__webglTexture),K(e.TEXTURE_CUBE_MAP,l,p);for(let n=0;n<6;n++)if(o&&l.mipmaps&&l.mipmaps.length>0)for(let r=0;r<l.mipmaps.length;r++)Q(u.__webglFramebuffer[n][r],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,r);else Q(u.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);y(l,p)&&b(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(d){const s=t.texture;for(let a=0,i=s.length;a<i;a++){const i=s[a],o=r.get(i);n.bindTexture(e.TEXTURE_2D,o.__webglTexture),K(e.TEXTURE_2D,i,p),Q(u.__webglFramebuffer,t,i,e.COLOR_ATTACHMENT0+a,e.TEXTURE_2D,0),y(i,p)&&b(e.TEXTURE_2D)}n.unbindTexture()}else{let r=e.TEXTURE_2D;if((t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?r=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(r,c.__webglTexture),K(r,l,p),o&&l.mipmaps&&l.mipmaps.length>0)for(let n=0;n<l.mipmaps.length;n++)Q(u.__webglFramebuffer[n],t,l,e.COLOR_ATTACHMENT0,r,n);else Q(u.__webglFramebuffer,t,l,e.COLOR_ATTACHMENT0,r,0);y(l,p)&&b(r),n.unbindTexture()}t.depthBuffer&&te(t)},this.updateRenderTargetMipmap=function(t){const s=g(t)||o,a=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let i=0,o=a.length;i<o;i++){const o=a[i];if(y(o,s)){const s=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=r.get(o).__webglTexture;n.bindTexture(s,a),b(s),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===ae(t)){const s=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,i=t.height;let o=e.COLOR_BUFFER_BIT;const l=[],c=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,h=r.get(t),d=!0===t.isWebGLMultipleRenderTargets;if(d)for(let t=0;t<s.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,h.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,h.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,h.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,h.__webglFramebuffer);for(let n=0;n<s.length;n++){l.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&l.push(c);const p=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;if(!1===p&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),d&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,h.__webglColorRenderbuffer[n]),!0===p&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[c]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[c])),d){const t=r.get(s[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,i,0,0,a,i,o,e.NEAREST),u&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,l)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),d)for(let t=0;t<s.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,h.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,h.__webglColorRenderbuffer[t]);const a=r.get(s[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,h.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=te,this.setupFrameBufferTexture=Q,this.useMultisampledRTT=ae}function qa(e,t,n){const r=n.isWebGL2;return{convert:function(n,s=""){let a;const i=Be.getTransfer(s);if(n===P)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(n===D)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(n===O)return e.UNSIGNED_INT;if(n===G)return e.FLOAT;if(n===z)return r?e.HALF_FLOAT:(a=t.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===n)return e.ALPHA;if(n===W)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(n===V)return e.DEPTH_COMPONENT;if(n===U)return e.DEPTH_STENCIL;if(n===ye)return a=t.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(n===B||n===X||n===$||n===H)if(i===se){if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===B)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===X)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===$)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===H)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=t.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===B)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===X)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===$)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===H)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(a=t.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return a=t.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(a=t.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===n)return i===se?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(a=t.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return i===se?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Z||36494===n||36495===n){if(a=t.get("EXT_texture_compression_bptc"),null===a)return null;if(n===Z)return i===se?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===n)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===n)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===n||36284===n||36285===n||36286===n){if(a=t.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===Z)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===F?r?e.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class ei extends fr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ti extends on{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ni={type:"move"};class ri{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new ti,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new ti,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new at,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new at),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new ti,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new at,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new at),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,a=null;const i=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){a=!0;for(const r of e.hand.values()){const e=t.getJointPose(r,n),s=this._getHandJoint(l,r);null!==e&&(s.matrix.fromArray(e.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,s.jointRadius=e.radius),s.visible=null!==e}const r=l.joints["index-finger-tip"],s=l.joints["thumb-tip"],i=r.position.distanceTo(s.position),o=.02,u=.005;l.inputState.pinching&&i>o+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&i<=o-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1));null!==i&&(r=t.getPose(e.targetRaySpace,n),null===r&&null!==s&&(r=s),null!==r&&(i.matrix.fromArray(r.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,r.linearVelocity?(i.hasLinearVelocity=!0,i.linearVelocity.copy(r.linearVelocity)):i.hasLinearVelocity=!1,r.angularVelocity?(i.hasAngularVelocity=!0,i.angularVelocity.copy(r.angularVelocity)):i.hasAngularVelocity=!1,this.dispatchEvent(ni)))}return null!==i&&(i.visible=null!==r),null!==o&&(o.visible=null!==s),null!==l&&(l.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new ti;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class si extends ve{constructor(e,t){super();const n=this;let r=null,s=1,a=null,i="local-floor",o=1,l=null,u=null,c=null,h=null,d=null,p=null;const m=t.getContextAttributes();let f=null,g=null;const y=[],b=[],x=new Re;let v=null;const w=new fr;w.layers.enable(1),w.viewport=new qe;const S=new fr;S.layers.enable(2),S.viewport=new qe;const T=[w,S],_=new ei;_.layers.enable(1),_.layers.enable(2);let I=null,C=null;function M(e){const t=b.indexOf(e.inputSource);if(-1===t)return;const n=y[t];void 0!==n&&(n.update(e.inputSource,e.frame,l||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function E(){r.removeEventListener("select",M),r.removeEventListener("selectstart",M),r.removeEventListener("selectend",M),r.removeEventListener("squeeze",M),r.removeEventListener("squeezestart",M),r.removeEventListener("squeezeend",M),r.removeEventListener("end",E),r.removeEventListener("inputsourceschange",N);for(let e=0;e<y.length;e++){const t=b[e];null!==t&&(b[e]=null,y[e].disconnect(t))}I=null,C=null,e.setRenderTarget(f),d=null,h=null,c=null,r=null,g=null,D.stop(),n.isPresenting=!1,e.setPixelRatio(v),e.setSize(x.width,x.height,!1),n.dispatchEvent({type:"sessionend"})}function N(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],r=b.indexOf(n);r>=0&&(b[r]=null,y[r].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let r=b.indexOf(n);if(-1===r){for(let e=0;e<y.length;e++){if(e>=b.length){b.push(n),r=e;break}if(null===b[e]){b[e]=n,r=e;break}}if(-1===r)break}const s=y[r];s&&s.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=y[e];return void 0===t&&(t=new ri,y[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=y[e];return void 0===t&&(t=new ri,y[e]=t),t.getGripSpace()},this.getHand=function(e){let t=y[e];return void 0===t&&(t=new ri,y[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(e){l=e},this.getBaseLayer=function(){return null!==h?h:d},this.getBinding=function(){return c},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(u){if(r=u,null!==r){if(f=e.getRenderTarget(),r.addEventListener("select",M),r.addEventListener("selectstart",M),r.addEventListener("selectend",M),r.addEventListener("squeeze",M),r.addEventListener("squeezestart",M),r.addEventListener("squeezeend",M),r.addEventListener("end",E),r.addEventListener("inputsourceschange",N),!0!==m.xrCompatible&&await t.makeXRCompatible(),v=e.getPixelRatio(),e.getSize(x),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==r.renderState.layers||m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,n),r.updateRenderState({baseLayer:d}),e.setPixelRatio(1),e.setSize(d.framebufferWidth,d.framebufferHeight,!1),g=new tt(d.framebufferWidth,d.framebufferHeight,{format:W,type:P,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil})}else{let n=null,a=null,i=null;m.depth&&(i=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=m.stencil?U:V,a=m.stencil?F:O);const o={colorFormat:t.RGBA8,depthFormat:i,scaleFactor:s};c=new XRWebGLBinding(r,t),h=c.createProjectionLayer(o),r.updateRenderState({layers:[h]}),e.setPixelRatio(1),e.setSize(h.textureWidth,h.textureHeight,!1),g=new tt(h.textureWidth,h.textureHeight,{format:W,type:P,depthTexture:new cs(h.textureWidth,h.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0}),e.properties.get(g).__ignoreDepthValues=h.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(o),l=null,a=await r.requestReferenceSpace(i),D.setContext(r),D.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode};const k=new at,R=new at;function L(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;_.near=S.near=w.near=e.near,_.far=S.far=w.far=e.far,I===_.near&&C===_.far||(r.updateRenderState({depthNear:_.near,depthFar:_.far}),I=_.near,C=_.far);const t=e.parent,n=_.cameras;L(_,t);for(let e=0;e<n.length;e++)L(n[e],t);2===n.length?function(e,t,n){k.setFromMatrixPosition(t.matrixWorld),R.setFromMatrixPosition(n.matrixWorld);const r=k.distanceTo(R),s=t.projectionMatrix.elements,a=n.projectionMatrix.elements,i=s[14]/(s[10]-1),o=s[14]/(s[10]+1),l=(s[9]+1)/s[5],u=(s[9]-1)/s[5],c=(s[8]-1)/s[0],h=(a[8]+1)/a[0],d=i*c,p=i*h,m=r/(-c+h),f=m*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const g=i+m,y=o+m,b=d-f,x=p+(r-f),v=l*o/y*g,w=u*o/y*g;e.projectionMatrix.makePerspective(b,x,v,w,g,y),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(_,w,S):_.projectionMatrix.copy(w.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0),e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*Te*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,_,t)},this.getCamera=function(){return _},this.getFoveation=function(){if(null!==h||null!==d)return o},this.setFoveation=function(e){o=e,null!==h&&(h.fixedFoveation=e),null!==d&&void 0!==d.fixedFoveation&&(d.fixedFoveation=e)};let A=null;const D=new Mr;D.setAnimationLoop((function(t,r){if(u=r.getViewerPose(l||a),p=r,null!==u){const t=u.views;null!==d&&(e.setRenderTargetFramebuffer(g,d.framebuffer),e.setRenderTarget(g));let n=!1;t.length!==_.cameras.length&&(_.cameras.length=0,n=!0);for(let r=0;r<t.length;r++){const s=t[r];let a=null;if(null!==d)a=d.getViewport(s);else{const t=c.getViewSubImage(h,s);a=t.viewport,0===r&&(e.setRenderTargetTextures(g,t.colorTexture,h.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(g))}let i=T[r];void 0===i&&(i=new fr,i.layers.enable(r),i.viewport=new qe,T[r]=i),i.matrix.fromArray(s.transform.matrix),i.matrix.decompose(i.position,i.quaternion,i.scale),i.projectionMatrix.fromArray(s.projectionMatrix),i.projectionMatrixInverse.copy(i.projectionMatrix).invert(),i.viewport.set(a.x,a.y,a.width,a.height),0===r&&(_.matrix.copy(i.matrix),_.matrix.decompose(_.position,_.quaternion,_.scale)),!0===n&&_.cameras.push(i)}}for(let e=0;e<y.length;e++){const t=b[e],n=y[e];null!==t&&void 0!==n&&n.update(t,r,l||a)}A&&A(t,r),r.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:r}),p=null})),this.setAnimationLoop=function(e){A=e},this.dispose=function(){}}}function ai(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function r(r,s){r.opacity.value=s.opacity,s.color&&r.diffuse.value.copy(s.color),s.emissive&&r.emissive.value.copy(s.emissive).multiplyScalar(s.emissiveIntensity),s.map&&(r.map.value=s.map,n(s.map,r.mapTransform)),s.alphaMap&&(r.alphaMap.value=s.alphaMap,n(s.alphaMap,r.alphaMapTransform)),s.bumpMap&&(r.bumpMap.value=s.bumpMap,n(s.bumpMap,r.bumpMapTransform),r.bumpScale.value=s.bumpScale,1===s.side&&(r.bumpScale.value*=-1)),s.normalMap&&(r.normalMap.value=s.normalMap,n(s.normalMap,r.normalMapTransform),r.normalScale.value.copy(s.normalScale),1===s.side&&r.normalScale.value.negate()),s.displacementMap&&(r.displacementMap.value=s.displacementMap,n(s.displacementMap,r.displacementMapTransform),r.displacementScale.value=s.displacementScale,r.displacementBias.value=s.displacementBias),s.emissiveMap&&(r.emissiveMap.value=s.emissiveMap,n(s.emissiveMap,r.emissiveMapTransform)),s.specularMap&&(r.specularMap.value=s.specularMap,n(s.specularMap,r.specularMapTransform)),s.alphaTest>0&&(r.alphaTest.value=s.alphaTest);const a=t.get(s).envMap;if(a&&(r.envMap.value=a,r.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,r.reflectivity.value=s.reflectivity,r.ior.value=s.ior,r.refractionRatio.value=s.refractionRatio),s.lightMap){r.lightMap.value=s.lightMap;const t=!0===e._useLegacyLights?Math.PI:1;r.lightMapIntensity.value=s.lightMapIntensity*t,n(s.lightMap,r.lightMapTransform)}s.aoMap&&(r.aoMap.value=s.aoMap,r.aoMapIntensity.value=s.aoMapIntensity,n(s.aoMap,r.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,hr(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,s,a,i,o){s.isMeshBasicMaterial||s.isMeshLambertMaterial?r(e,s):s.isMeshToonMaterial?(r(e,s),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,s)):s.isMeshPhongMaterial?(r(e,s),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,s)):s.isMeshStandardMaterial?(r(e,s),function(e,r){e.metalness.value=r.metalness,r.metalnessMap&&(e.metalnessMap.value=r.metalnessMap,n(r.metalnessMap,e.metalnessMapTransform)),e.roughness.value=r.roughness,r.roughnessMap&&(e.roughnessMap.value=r.roughnessMap,n(r.roughnessMap,e.roughnessMapTransform));t.get(r).envMap&&(e.envMapIntensity.value=r.envMapIntensity)}(e,s),s.isMeshPhysicalMaterial&&function(e,t,r){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform))),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=r.texture,e.transmissionSamplerSize.value.set(r.width,r.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),t.anisotropy>0&&(e.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(e.anisotropyMap.value=t.anisotropyMap,n(t.anisotropyMap,e.anisotropyMapTransform))),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform)),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,s,o)):s.isMeshMatcapMaterial?(r(e,s),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,s)):s.isMeshDepthMaterial?r(e,s):s.isMeshDistanceMaterial?(r(e,s),function(e,n){const r=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(r.matrixWorld),e.nearDistance.value=r.shadow.camera.near,e.farDistance.value=r.shadow.camera.far}(e,s)):s.isMeshNormalMaterial?r(e,s):s.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,s),s.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,s)):s.isPointsMaterial?function(e,t,r,s){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*s,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,s,a,i):s.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap,n(t.alphaMap,e.alphaMapTransform)),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,s):s.isShadowMaterial?(e.color.value.copy(s.color),e.opacity.value=s.opacity):s.isShaderMaterial&&(s.uniformsNeedUpdate=!1)}}}function ii(e,t,n,r){let s={},a={},i=[];const o=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(e,t,n,r){const s=e.value,a=t+"_"+n;if(void 0===r[a])return r[a]="number"==typeof s||"boolean"==typeof s?s:s.clone(),!0;{const e=r[a];if("number"==typeof s||"boolean"==typeof s){if(e!==s)return r[a]=s,!0}else if(!1===e.equals(s))return e.copy(s),!0}return!1}function u(e){const t={boundary:0,storage:0};return"number"==typeof e||"boolean"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function c(t){const n=t.target;n.removeEventListener("dispose",c);const r=i.indexOf(n.__bindingPointIndex);i.splice(r,1),e.deleteBuffer(s[n.id]),delete s[n.id],delete a[n.id]}return{bind:function(e,t){const n=t.program;r.uniformBlockBinding(e,n)},update:function(n,h){let d=s[n.id];void 0===d&&(function(e){const t=e.uniforms;let n=0;for(let e=0,r=t.length;e<r;e++){const r=Array.isArray(t[e])?t[e]:[t[e]];for(let e=0,t=r.length;e<t;e++){const t=r[e],s=Array.isArray(t.value)?t.value:[t.value];for(let e=0,r=s.length;e<r;e++){const r=u(s[e]),a=n%16;0!==a&&16-a<r.boundary&&(n+=16-a),t.__data=new Float32Array(r.storage/Float32Array.BYTES_PER_ELEMENT),t.__offset=n,n+=r.storage}}}const r=n%16;r>0&&(n+=16-r),e.__size=n,e.__cache={}}(n),d=function(t){const n=function(){for(let e=0;e<o;e++)if(-1===i.indexOf(e))return i.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const r=e.createBuffer(),s=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,r),e.bufferData(e.UNIFORM_BUFFER,s,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,r),r}(n),s[n.id]=d,n.addEventListener("dispose",c));const p=h.program;r.updateUBOMapping(n,p);const m=t.render.frame;a[n.id]!==m&&(function(t){const n=s[t.id],r=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=r.length;t<n;t++){const n=Array.isArray(r[t])?r[t]:[r[t]];for(let r=0,s=n.length;r<s;r++){const s=n[r];if(!0===l(s,t,r,a)){const t=s.__offset,n=Array.isArray(s.value)?s.value:[s.value];let r=0;for(let a=0;a<n.length;a++){const i=n[a],o=u(i);"number"==typeof i||"boolean"==typeof i?(s.__data[0]=i,e.bufferSubData(e.UNIFORM_BUFFER,t+r,s.__data)):i.isMatrix3?(s.__data[0]=i.elements[0],s.__data[1]=i.elements[1],s.__data[2]=i.elements[2],s.__data[3]=0,s.__data[4]=i.elements[3],s.__data[5]=i.elements[4],s.__data[6]=i.elements[5],s.__data[7]=0,s.__data[8]=i.elements[6],s.__data[9]=i.elements[7],s.__data[10]=i.elements[8],s.__data[11]=0):(i.toArray(s.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,s.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=m)},dispose:function(){for(const t in s)e.deleteBuffer(s[t]);i=[],s={},a={}}}}class oi{constructor(t={}){const{canvas:n=Oe(),context:r=null,depth:s=!0,stencil:a=!0,alpha:i=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=t;let d;this.isWebGLRenderer=!0,d=null!==r?r.getContextAttributes().alpha:i;const p=new Uint32Array(4),m=new Int32Array(4);let f=null,g=null;const y=[],b=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=q,this._useLegacyLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const x=this;let v=!1,w=0,S=0,T=null,_=-1,I=null;const C=new qe,M=new qe;let E=null;const N=new _n(0);let k=0,R=n.width,L=n.height,V=1,U=null,B=null;const X=new qe(0,0,R,L),$=new qe(0,0,R,L);let H=!1;const Z=new Cr;let K=!1,j=!1,Y=null;const Q=new Dt,J=new Re,te=new at,ne={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function re(){return null===T?V:1}let se,ae,ie,oe,le,ue,ce,he,de,pe,me,fe,ge,ye,be,xe,ve,we,Se,Te,_e,Ie,Ce,Me,Ne=r;function ke(e,t){for(let r=0;r<e.length;r++){const s=e[r],a=n.getContext(s,t);if(null!==a)return a}return null}try{const t={alpha:!0,depth:s,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${e}`),n.addEventListener("webglcontextlost",Pe,!1),n.addEventListener("webglcontextrestored",De,!1),n.addEventListener("webglcontextcreationerror",Ge,!1),null===Ne){const e=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&e.shift(),Ne=ke(e,t),null===Ne)throw ke(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}"undefined"!=typeof WebGLRenderingContext&&Ne instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),void 0===Ne.getShaderPrecisionFormat&&(Ne.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Le(){se=new ns(Ne),ae=new Gr(Ne,se,t),se.init(ae),Ie=new qa(Ne,se,ae),ie=new Qa(Ne,se,ae),oe=new as(Ne),le=new Ga,ue=new Ja(Ne,se,ie,le,ae,Ie,oe),ce=new Fr(x),he=new ts(x),de=new Er(Ne,ae),Ce=new Dr(Ne,se,de,ae),pe=new rs(Ne,de,oe,Ce),me=new us(Ne,pe,de,oe),Se=new ls(Ne,ae,ue),xe=new zr(le),fe=new Oa(x,ce,he,se,ae,Ce,xe),ge=new ai(x,le),ye=new Va,be=new Za(se,ae),we=new Pr(x,ce,he,ie,me,d,l),ve=new Ya(x,me,ae),Me=new ii(Ne,oe,ae,ie),Te=new Or(Ne,se,oe,ae),_e=new ss(Ne,se,oe,ae),oe.programs=fe.programs,x.capabilities=ae,x.extensions=se,x.properties=le,x.renderLists=ye,x.shadowMap=ve,x.state=ie,x.info=oe}Le();const Ae=new si(x,Ne);function Pe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function De(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const e=oe.autoReset,t=ve.enabled,n=ve.autoUpdate,r=ve.needsUpdate,s=ve.type;Le(),oe.autoReset=e,ve.enabled=t,ve.autoUpdate=n,ve.needsUpdate=r,ve.type=s}function Ge(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function ze(e){const t=e.target;t.removeEventListener("dispose",ze),function(e){(function(e){const t=le.get(e).programs;void 0!==t&&(t.forEach((function(e){fe.releaseProgram(e)})),e.isShaderMaterial&&fe.releaseShaderCache(e))})(e),le.remove(e)}(t)}function Fe(e,t,n){!0===e.transparent&&2===e.side&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Ke(e,t,n),e.side=0,e.needsUpdate=!0,Ke(e,t,n),e.side=2):Ke(e,t,n)}this.xr=Ae,this.getContext=function(){return Ne},this.getContextAttributes=function(){return Ne.getContextAttributes()},this.forceContextLoss=function(){const e=se.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=se.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(e){void 0!==e&&(V=e,this.setSize(R,L,!1))},this.getSize=function(e){return e.set(R,L)},this.setSize=function(e,t,r=!0){Ae.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(R=e,L=t,n.width=Math.floor(e*V),n.height=Math.floor(t*V),!0===r&&(n.style.width=e+"px",n.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(R*V,L*V).floor()},this.setDrawingBufferSize=function(e,t,r){R=e,L=t,V=r,n.width=Math.floor(e*r),n.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(C)},this.getViewport=function(e){return e.copy(X)},this.setViewport=function(e,t,n,r){e.isVector4?X.set(e.x,e.y,e.z,e.w):X.set(e,t,n,r),ie.viewport(C.copy(X).multiplyScalar(V).floor())},this.getScissor=function(e){return e.copy($)},this.setScissor=function(e,t,n,r){e.isVector4?$.set(e.x,e.y,e.z,e.w):$.set(e,t,n,r),ie.scissor(M.copy($).multiplyScalar(V).floor())},this.getScissorTest=function(){return H},this.setScissorTest=function(e){ie.setScissorTest(H=e)},this.setOpaqueSort=function(e){U=e},this.setTransparentSort=function(e){B=e},this.getClearColor=function(e){return e.copy(we.getClearColor())},this.setClearColor=function(){we.setClearColor.apply(we,arguments)},this.getClearAlpha=function(){return we.getClearAlpha()},this.setClearAlpha=function(){we.setClearAlpha.apply(we,arguments)},this.clear=function(e=!0,t=!0,n=!0){let r=0;if(e){let e=!1;if(null!==T){const t=T.texture.format;e=1033===t||1031===t||1029===t}if(e){const e=T.texture.type,t=e===P||e===O||e===D||e===F||1017===e||1018===e,n=we.getClearColor(),r=we.getClearAlpha(),s=n.r,a=n.g,i=n.b;t?(p[0]=s,p[1]=a,p[2]=i,p[3]=r,Ne.clearBufferuiv(Ne.COLOR,0,p)):(m[0]=s,m[1]=a,m[2]=i,m[3]=r,Ne.clearBufferiv(Ne.COLOR,0,m))}else r|=Ne.COLOR_BUFFER_BIT}t&&(r|=Ne.DEPTH_BUFFER_BIT),n&&(r|=Ne.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),Ne.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",Pe,!1),n.removeEventListener("webglcontextrestored",De,!1),n.removeEventListener("webglcontextcreationerror",Ge,!1),ye.dispose(),be.dispose(),le.dispose(),ce.dispose(),he.dispose(),me.dispose(),Ce.dispose(),Me.dispose(),fe.dispose(),Ae.dispose(),Ae.removeEventListener("sessionstart",Ve),Ae.removeEventListener("sessionend",Ue),Y&&(Y.dispose(),Y=null),Be.stop()},this.renderBufferDirect=function(e,t,n,r,s,a){null===t&&(t=ne);const i=s.isMesh&&s.matrixWorld.determinant()<0,o=function(e,t,n,r,s){!0!==t.isScene&&(t=ne),ue.resetTextureUnits();const a=t.fog,i=r.isMeshStandardMaterial?t.environment:null,o=null===T?x.outputColorSpace:!0===T.isXRRenderTarget?T.texture.colorSpace:ee,l=(r.isMeshStandardMaterial?he:ce).get(r.envMap||i),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!n.attributes.tangent&&(!!r.normalMap||r.anisotropy>0),h=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let m=0;r.toneMapped&&(null!==T&&!0!==T.isXRRenderTarget||(m=x.toneMapping));const f=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,y=void 0!==f?f.length:0,b=le.get(r),v=g.state.lights;if(!0===K&&(!0===j||e!==I)){const t=e===I&&r.id===_;xe.setState(r,e,t)}let w=!1;r.version===b.__version?b.needsLights&&b.lightsStateVersion!==v.state.version||b.outputColorSpace!==o||s.isBatchedMesh&&!1===b.batching?w=!0:s.isBatchedMesh||!0!==b.batching?s.isInstancedMesh&&!1===b.instancing?w=!0:s.isInstancedMesh||!0!==b.instancing?s.isSkinnedMesh&&!1===b.skinning?w=!0:s.isSkinnedMesh||!0!==b.skinning?s.isInstancedMesh&&!0===b.instancingColor&&null===s.instanceColor||s.isInstancedMesh&&!1===b.instancingColor&&null!==s.instanceColor||b.envMap!==l||!0===r.fog&&b.fog!==a?w=!0:void 0===b.numClippingPlanes||b.numClippingPlanes===xe.numPlanes&&b.numIntersection===xe.numIntersection?(b.vertexAlphas!==u||b.vertexTangents!==c||b.morphTargets!==h||b.morphNormals!==d||b.morphColors!==p||b.toneMapping!==m||!0===ae.isWebGL2&&b.morphTargetsCount!==y)&&(w=!0):w=!0:w=!0:w=!0:w=!0:(w=!0,b.__version=r.version);let S=b.currentProgram;!0===w&&(S=Ke(r,t,s));let C=!1,M=!1,E=!1;const N=S.getUniforms(),k=b.uniforms;if(ie.useProgram(S.program)&&(C=!0,M=!0,E=!0),r.id!==_&&(_=r.id,M=!0),C||I!==e){N.setValue(Ne,"projectionMatrix",e.projectionMatrix),N.setValue(Ne,"viewMatrix",e.matrixWorldInverse);const t=N.map.cameraPosition;void 0!==t&&t.setValue(Ne,te.setFromMatrixPosition(e.matrixWorld)),ae.logarithmicDepthBuffer&&N.setValue(Ne,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&N.setValue(Ne,"isOrthographic",!0===e.isOrthographicCamera),I!==e&&(I=e,M=!0,E=!0)}if(s.isSkinnedMesh){N.setOptional(Ne,s,"bindMatrix"),N.setOptional(Ne,s,"bindMatrixInverse");const e=s.skeleton;e&&(ae.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),N.setValue(Ne,"boneTexture",e.boneTexture,ue)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}s.isBatchedMesh&&(N.setOptional(Ne,s,"batchingTexture"),N.setValue(Ne,"batchingTexture",s._matricesTexture,ue));const R=n.morphAttributes;var A,P;if((void 0!==R.position||void 0!==R.normal||void 0!==R.color&&!0===ae.isWebGL2)&&Se.update(s,n,S),(M||b.receiveShadow!==s.receiveShadow)&&(b.receiveShadow=s.receiveShadow,N.setValue(Ne,"receiveShadow",s.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(k.envMap.value=l,k.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),M&&(N.setValue(Ne,"toneMappingExposure",x.toneMappingExposure),b.needsLights&&(P=E,(A=k).ambientLightColor.needsUpdate=P,A.lightProbe.needsUpdate=P,A.directionalLights.needsUpdate=P,A.directionalLightShadows.needsUpdate=P,A.pointLights.needsUpdate=P,A.pointLightShadows.needsUpdate=P,A.spotLights.needsUpdate=P,A.spotLightShadows.needsUpdate=P,A.rectAreaLights.needsUpdate=P,A.hemisphereLights.needsUpdate=P),a&&!0===r.fog&&ge.refreshFogUniforms(k,a),ge.refreshMaterialUniforms(k,r,V,L,Y),fa.upload(Ne,je(b),k,ue)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(fa.upload(Ne,je(b),k,ue),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&N.setValue(Ne,"center",s.center),N.setValue(Ne,"modelViewMatrix",s.modelViewMatrix),N.setValue(Ne,"normalMatrix",s.normalMatrix),N.setValue(Ne,"modelMatrix",s.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial){const e=r.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(ae.isWebGL2){const n=e[t];Me.update(n,S),Me.bind(n,S)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return S}(e,t,n,r,s);ie.setMaterial(r,i);let l=n.index,u=1;if(!0===r.wireframe){if(l=pe.getWireframeAttribute(n),void 0===l)return;u=2}const c=n.drawRange,h=n.attributes.position;let d=c.start*u,p=(c.start+c.count)*u;null!==a&&(d=Math.max(d,a.start*u),p=Math.min(p,(a.start+a.count)*u)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=h&&(d=Math.max(d,0),p=Math.min(p,h.count));const m=p-d;if(m<0||m===1/0)return;let f;Ce.setup(s,r,o,n,l);let y=Te;if(null!==l&&(f=de.get(l),y=_e,y.setIndex(f)),s.isMesh)!0===r.wireframe?(ie.setLineWidth(r.wireframeLinewidth*re()),y.setMode(Ne.LINES)):y.setMode(Ne.TRIANGLES);else if(s.isLine){let e=r.linewidth;void 0===e&&(e=1),ie.setLineWidth(e*re()),s.isLineSegments?y.setMode(Ne.LINES):s.isLineLoop?y.setMode(Ne.LINE_LOOP):y.setMode(Ne.LINE_STRIP)}else s.isPoints?y.setMode(Ne.POINTS):s.isSprite&&y.setMode(Ne.TRIANGLES);if(s.isBatchedMesh)y.renderMultiDraw(s._multiDrawStarts,s._multiDrawCounts,s._multiDrawCount);else if(s.isInstancedMesh)y.renderInstances(d,m,s.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);y.renderInstances(d,m,t)}else y.render(d,m)},this.compile=function(e,t,n=null){null===n&&(n=e),g=be.get(n),g.init(),b.push(g),n.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(g.pushLight(e),e.castShadow&&g.pushShadow(e))})),e!==n&&e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(g.pushLight(e),e.castShadow&&g.pushShadow(e))})),g.setupLights(x._useLegacyLights);const r=new Set;return e.traverse((function(e){const t=e.material;if(t)if(Array.isArray(t))for(let s=0;s<t.length;s++){const a=t[s];Fe(a,n,e),r.add(a)}else Fe(t,n,e),r.add(t)})),b.pop(),g=null,r},this.compileAsync=function(e,t,n=null){const r=this.compile(e,t,n);return new Promise((t=>{function n(){r.forEach((function(e){le.get(e).currentProgram.isReady()&&r.delete(e)})),0!==r.size?setTimeout(n,10):t(e)}null!==se.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let We=null;function Ve(){Be.stop()}function Ue(){Be.start()}const Be=new Mr;function Xe(e,t,n,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)g.pushLight(e),e.castShadow&&g.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||Z.intersectsSprite(e)){r&&te.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Q);const t=me.update(e),s=e.material;s.visible&&f.push(e,t,s,n,te.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Z.intersectsObject(e))){const t=me.update(e),s=e.material;if(r&&(void 0!==e.boundingSphere?(null===e.boundingSphere&&e.computeBoundingSphere(),te.copy(e.boundingSphere.center)):(null===t.boundingSphere&&t.computeBoundingSphere(),te.copy(t.boundingSphere.center)),te.applyMatrix4(e.matrixWorld).applyMatrix4(Q)),Array.isArray(s)){const r=t.groups;for(let a=0,i=r.length;a<i;a++){const i=r[a],o=s[i.materialIndex];o&&o.visible&&f.push(e,t,o,n,te.z,i)}}else s.visible&&f.push(e,t,s,n,te.z,null)}const s=e.children;for(let e=0,a=s.length;e<a;e++)Xe(s[e],t,n,r)}function $e(e,t,n,r){const s=e.opaque,a=e.transmissive,i=e.transparent;g.setupLightsView(n),!0===K&&xe.setGlobalState(x.clippingPlanes,n),a.length>0&&function(e,t,n,r){if(null!==(!0===n.isScene?n.overrideMaterial:null))return;const s=ae.isWebGL2;null===Y&&(Y=new tt(1,1,{generateMipmaps:!0,type:se.has("EXT_color_buffer_half_float")?z:P,minFilter:A,samples:s?4:0})),x.getDrawingBufferSize(J),s?Y.setSize(J.x,J.y):Y.setSize(Ee(J.x),Ee(J.y));const a=x.getRenderTarget();x.setRenderTarget(Y),x.getClearColor(N),k=x.getClearAlpha(),k<1&&x.setClearColor(16777215,.5),x.clear();const i=x.toneMapping;x.toneMapping=0,He(e,n,r),ue.updateMultisampleRenderTarget(Y),ue.updateRenderTargetMipmap(Y);let o=!1;for(let e=0,s=t.length;e<s;e++){const s=t[e],a=s.object,i=s.geometry,l=s.material,u=s.group;if(2===l.side&&a.layers.test(r.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,Ze(a,n,r,i,l,u),l.side=e,l.needsUpdate=!0,o=!0}}!0===o&&(ue.updateMultisampleRenderTarget(Y),ue.updateRenderTargetMipmap(Y)),x.setRenderTarget(a),x.setClearColor(N,k),x.toneMapping=i}(s,a,t,n),r&&ie.viewport(C.copy(r)),s.length>0&&He(s,t,n),a.length>0&&He(a,t,n),i.length>0&&He(i,t,n),ie.buffers.depth.setTest(!0),ie.buffers.depth.setMask(!0),ie.buffers.color.setMask(!0),ie.setPolygonOffset(!1)}function He(e,t,n){const r=!0===t.isScene?t.overrideMaterial:null;for(let s=0,a=e.length;s<a;s++){const a=e[s],i=a.object,o=a.geometry,l=null===r?a.material:r,u=a.group;i.layers.test(n.layers)&&Ze(i,t,n,o,l,u)}}function Ze(e,t,n,r,s,a){e.onBeforeRender(x,t,n,r,s,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),s.onBeforeRender(x,t,n,r,e,a),!0===s.transparent&&2===s.side&&!1===s.forceSinglePass?(s.side=1,s.needsUpdate=!0,x.renderBufferDirect(n,t,r,s,e,a),s.side=0,s.needsUpdate=!0,x.renderBufferDirect(n,t,r,s,e,a),s.side=2):x.renderBufferDirect(n,t,r,s,e,a),e.onAfterRender(x,t,n,r,s,a)}function Ke(e,t,n){!0!==t.isScene&&(t=ne);const r=le.get(e),s=g.state.lights,a=g.state.shadowsArray,i=s.state.version,o=fe.getParameters(e,s.state,a,t,n),l=fe.getProgramCacheKey(o);let u=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?he:ce).get(e.envMap||r.environment),void 0===u&&(e.addEventListener("dispose",ze),u=new Map,r.programs=u);let c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===i)return Ye(e,o),c}else o.uniforms=fe.getUniforms(e),e.onBuild(n,o,x),e.onBeforeCompile(o,x),c=fe.acquireProgram(o,l),u.set(l,c),r.uniforms=o.uniforms;const h=r.uniforms;return(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=xe.uniform),Ye(e,o),r.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),r.lightsStateVersion=i,r.needsLights&&(h.ambientLightColor.value=s.state.ambient,h.lightProbe.value=s.state.probe,h.directionalLights.value=s.state.directional,h.directionalLightShadows.value=s.state.directionalShadow,h.spotLights.value=s.state.spot,h.spotLightShadows.value=s.state.spotShadow,h.rectAreaLights.value=s.state.rectArea,h.ltc_1.value=s.state.rectAreaLTC1,h.ltc_2.value=s.state.rectAreaLTC2,h.pointLights.value=s.state.point,h.pointLightShadows.value=s.state.pointShadow,h.hemisphereLights.value=s.state.hemi,h.directionalShadowMap.value=s.state.directionalShadowMap,h.directionalShadowMatrix.value=s.state.directionalShadowMatrix,h.spotShadowMap.value=s.state.spotShadowMap,h.spotLightMatrix.value=s.state.spotLightMatrix,h.spotLightMap.value=s.state.spotLightMap,h.pointShadowMap.value=s.state.pointShadowMap,h.pointShadowMatrix.value=s.state.pointShadowMatrix),r.currentProgram=c,r.uniformsList=null,c}function je(e){if(null===e.uniformsList){const t=e.currentProgram.getUniforms();e.uniformsList=fa.seqWithValue(t.seq,e.uniforms)}return e.uniformsList}function Ye(e,t){const n=le.get(e);n.outputColorSpace=t.outputColorSpace,n.batching=t.batching,n.instancing=t.instancing,n.instancingColor=t.instancingColor,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}Be.setAnimationLoop((function(e){We&&We(e)})),"undefined"!=typeof self&&Be.setContext(self),this.setAnimationLoop=function(e){We=e,Ae.setAnimationLoop(e),null===e?Be.stop():Be.start()},Ae.addEventListener("sessionstart",Ve),Ae.addEventListener("sessionend",Ue),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===v)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Ae.enabled&&!0===Ae.isPresenting&&(!0===Ae.cameraAutoUpdate&&Ae.updateCamera(t),t=Ae.getCamera()),!0===e.isScene&&e.onBeforeRender(x,e,t,T),g=be.get(e,b.length),g.init(),b.push(g),Q.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Z.setFromProjectionMatrix(Q),j=this.localClippingEnabled,K=xe.init(this.clippingPlanes,j),f=ye.get(e,y.length),f.init(),y.push(f),Xe(e,t,0,x.sortObjects),f.finish(),!0===x.sortObjects&&f.sort(U,B),this.info.render.frame++,!0===K&&xe.beginShadows();const n=g.state.shadowsArray;if(ve.render(n,e,t),!0===K&&xe.endShadows(),!0===this.info.autoReset&&this.info.reset(),we.render(f,e),g.setupLights(x._useLegacyLights),t.isArrayCamera){const n=t.cameras;for(let t=0,r=n.length;t<r;t++){const r=n[t];$e(f,e,r,r.viewport)}}else $e(f,e,t);null!==T&&(ue.updateMultisampleRenderTarget(T),ue.updateRenderTargetMipmap(T)),!0===e.isScene&&e.onAfterRender(x,e,t),Ce.resetDefaultState(),_=-1,I=null,b.pop(),g=b.length>0?b[b.length-1]:null,y.pop(),f=y.length>0?y[y.length-1]:null},this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return S},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(e,t,n){le.get(e.texture).__webglTexture=t,le.get(e.depthTexture).__webglTexture=n;const r=le.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===se.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=le.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){T=e,w=t,S=n;let r=!0,s=null,a=!1,i=!1;if(e){const o=le.get(e);void 0!==o.__useDefaultFramebuffer?(ie.bindFramebuffer(Ne.FRAMEBUFFER,null),r=!1):void 0===o.__webglFramebuffer?ue.setupRenderTarget(e):o.__hasExternalTextures&&ue.rebindTextures(e,le.get(e.texture).__webglTexture,le.get(e.depthTexture).__webglTexture);const l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(i=!0);const u=le.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(s=Array.isArray(u[t])?u[t][n]:u[t],a=!0):s=ae.isWebGL2&&e.samples>0&&!1===ue.useMultisampledRTT(e)?le.get(e).__webglMultisampledFramebuffer:Array.isArray(u)?u[n]:u,C.copy(e.viewport),M.copy(e.scissor),E=e.scissorTest}else C.copy(X).multiplyScalar(V).floor(),M.copy($).multiplyScalar(V).floor(),E=H;if(ie.bindFramebuffer(Ne.FRAMEBUFFER,s)&&ae.drawBuffers&&r&&ie.drawBuffers(e,s),ie.viewport(C),ie.scissor(M),ie.setScissorTest(E),a){const r=le.get(e.texture);Ne.framebufferTexture2D(Ne.FRAMEBUFFER,Ne.COLOR_ATTACHMENT0,Ne.TEXTURE_CUBE_MAP_POSITIVE_X+t,r.__webglTexture,n)}else if(i){const r=le.get(e.texture),s=t||0;Ne.framebufferTextureLayer(Ne.FRAMEBUFFER,Ne.COLOR_ATTACHMENT0,r.__webglTexture,n||0,s)}_=-1},this.readRenderTargetPixels=function(e,t,n,r,s,a,i){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=le.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==i&&(o=o[i]),o){ie.bindFramebuffer(Ne.FRAMEBUFFER,o);try{const i=e.texture,o=i.format,l=i.type;if(o!==W&&Ie.convert(o)!==Ne.getParameter(Ne.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const u=l===z&&(se.has("EXT_color_buffer_half_float")||ae.isWebGL2&&se.has("EXT_color_buffer_float"));if(!(l===P||Ie.convert(l)===Ne.getParameter(Ne.IMPLEMENTATION_COLOR_READ_TYPE)||l===G&&(ae.isWebGL2||se.has("OES_texture_float")||se.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-r&&n>=0&&n<=e.height-s&&Ne.readPixels(t,n,r,s,Ie.convert(o),Ie.convert(l),a)}finally{const e=null!==T?le.get(T).__webglFramebuffer:null;ie.bindFramebuffer(Ne.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const r=Math.pow(2,-n),s=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r);ue.setTexture2D(t,0),Ne.copyTexSubImage2D(Ne.TEXTURE_2D,n,0,0,e.x,e.y,s,a),ie.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){const s=t.image.width,a=t.image.height,i=Ie.convert(n.format),o=Ie.convert(n.type);ue.setTexture2D(n,0),Ne.pixelStorei(Ne.UNPACK_FLIP_Y_WEBGL,n.flipY),Ne.pixelStorei(Ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),Ne.pixelStorei(Ne.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?Ne.texSubImage2D(Ne.TEXTURE_2D,r,e.x,e.y,s,a,i,o,t.image.data):t.isCompressedTexture?Ne.compressedTexSubImage2D(Ne.TEXTURE_2D,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,i,t.mipmaps[0].data):Ne.texSubImage2D(Ne.TEXTURE_2D,r,e.x,e.y,i,o,t.image),0===r&&n.generateMipmaps&&Ne.generateMipmap(Ne.TEXTURE_2D),ie.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r,s=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,i=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=Ie.convert(r.format),u=Ie.convert(r.type);let c;if(r.isData3DTexture)ue.setTexture3D(r,0),c=Ne.TEXTURE_3D;else{if(!r.isDataArrayTexture&&!r.isCompressedArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ue.setTexture2DArray(r,0),c=Ne.TEXTURE_2D_ARRAY}Ne.pixelStorei(Ne.UNPACK_FLIP_Y_WEBGL,r.flipY),Ne.pixelStorei(Ne.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),Ne.pixelStorei(Ne.UNPACK_ALIGNMENT,r.unpackAlignment);const h=Ne.getParameter(Ne.UNPACK_ROW_LENGTH),d=Ne.getParameter(Ne.UNPACK_IMAGE_HEIGHT),p=Ne.getParameter(Ne.UNPACK_SKIP_PIXELS),m=Ne.getParameter(Ne.UNPACK_SKIP_ROWS),f=Ne.getParameter(Ne.UNPACK_SKIP_IMAGES),g=n.isCompressedTexture?n.mipmaps[s]:n.image;Ne.pixelStorei(Ne.UNPACK_ROW_LENGTH,g.width),Ne.pixelStorei(Ne.UNPACK_IMAGE_HEIGHT,g.height),Ne.pixelStorei(Ne.UNPACK_SKIP_PIXELS,e.min.x),Ne.pixelStorei(Ne.UNPACK_SKIP_ROWS,e.min.y),Ne.pixelStorei(Ne.UNPACK_SKIP_IMAGES,e.min.z),n.isDataTexture||n.isData3DTexture?Ne.texSubImage3D(c,s,t.x,t.y,t.z,a,i,o,l,u,g.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Ne.compressedTexSubImage3D(c,s,t.x,t.y,t.z,a,i,o,l,g.data)):Ne.texSubImage3D(c,s,t.x,t.y,t.z,a,i,o,l,u,g),Ne.pixelStorei(Ne.UNPACK_ROW_LENGTH,h),Ne.pixelStorei(Ne.UNPACK_IMAGE_HEIGHT,d),Ne.pixelStorei(Ne.UNPACK_SKIP_PIXELS,p),Ne.pixelStorei(Ne.UNPACK_SKIP_ROWS,m),Ne.pixelStorei(Ne.UNPACK_SKIP_IMAGES,f),0===s&&r.generateMipmaps&&Ne.generateMipmap(c),ie.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ue.setTextureCube(e,0):e.isData3DTexture?ue.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?ue.setTexture2DArray(e,0):ue.setTexture2D(e,0),ie.unbindTexture()},this.resetState=function(){w=0,S=0,T=null,ie.reset(),Ce.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return be}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===te?"display-p3":"srgb",t.unpackColorSpace=Be.workingColorSpace===ne?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===q?Q:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Q?q:ee}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}(class extends oi{}).prototype.isWebGL1Renderer=!0;class li extends on{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class ui extends Je{constructor(e,t,n,r,s,a,i,o,l){super(e,t,n,r,s,a,i,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==a?a:R,this.magFilter=void 0!==s?s:R,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){u.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}function ci(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}class hi{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let a;n:{r:if(!(e<r)){for(let a=n+2;;){if(void 0===r){if(e<s)break r;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=r,r=t[++n],e<r)break t}a=t.length;break n}if(e>=s)break e;{const i=t[1];e<i&&(n=2,s=i);for(let a=n-2;;){if(void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(r=s,s=t[--n-1],e>=s)break t}a=n,n=0}}for(;n<a;){const r=n+a>>>1;e<t[r]?a=r:n=r+1}if(r=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let e=0;e!==r;++e)t[e]=n[s+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class di extends hi{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,a=e+1,i=r[s],o=r[a];if(void 0===i)switch(this.getSettings_().endingStart){case 2401:s=e,i=2*t-n;break;case 2402:s=r.length-2,i=t+r[s]-r[s+1];break;default:s=e,i=n}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*n-t;break;case 2402:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}const l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-i),this._weightNext=l/(o-n),this._offsetPrev=s*u,this._offsetNext=a*u}interpolate_(e,t,n,r){const s=this.resultBuffer,a=this.sampleValues,i=this.valueSize,o=e*i,l=o-i,u=this._offsetPrev,c=this._offsetNext,h=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),m=p*p,f=m*p,g=-h*f+2*h*m-h*p,y=(1+h)*f+(-1.5-2*h)*m+(-.5+h)*p+1,b=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let e=0;e!==i;++e)s[e]=g*a[u+e]+y*a[l+e]+b*a[o+e]+x*a[c+e];return s}}class pi extends hi{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,a=this.sampleValues,i=this.valueSize,o=e*i,l=o-i,u=(n-t)/(r-t),c=1-u;for(let e=0;e!==i;++e)s[e]=a[l+e]*c+a[o+e]*u;return s}}class mi extends hi{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class fi{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ci(t,this.TimeBufferType),this.values=ci(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ci(e.times,Array),values:ci(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new mi(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pi(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new di(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case K:t=this.InterpolantFactoryMethodDiscrete;break;case j:t=this.InterpolantFactoryMethodLinear;break;case Y:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return K;case this.InterpolantFactoryMethodLinear:return j;case this.InterpolantFactoryMethodSmooth:return Y}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,a=r-1;for(;s!==r&&n[s]<e;)++s;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==s||a!==r){s>=a&&(a=Math.max(a,1),s=a-1);const e=this.getValueSize();this.times=n.slice(s,a),this.values=this.values.slice(s*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==s;t++){const r=n[t];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r),e=!1;break}if(null!==a&&a>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,a),e=!1;break}a=r}if(void 0!==r&&(i=r,ArrayBuffer.isView(i)&&!(i instanceof DataView)))for(let t=0,n=r.length;t!==n;++t){const n=r[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}var i;return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===Y,s=e.length-1;let a=1;for(let i=1;i<s;++i){let s=!1;const o=e[i];if(o!==e[i+1]&&(1!==i||o!==e[0]))if(r)s=!0;else{const e=i*n,r=e-n,a=e+n;for(let i=0;i!==n;++i){const n=t[e+i];if(n!==t[r+i]||n!==t[a+i]){s=!0;break}}}if(s){if(i!==a){e[a]=e[i];const r=i*n,s=a*n;for(let e=0;e!==n;++e)t[s+e]=t[r+e]}++a}}if(s>0){e[a]=e[s];for(let e=s*n,r=a*n,i=0;i!==n;++i)t[r+i]=t[e+i];++a}return a!==e.length?(this.times=e.slice(0,a),this.values=t.slice(0,a*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}fi.prototype.TimeBufferType=Float32Array,fi.prototype.ValueBufferType=Float32Array,fi.prototype.DefaultInterpolation=j;class gi extends fi{}gi.prototype.ValueTypeName="bool",gi.prototype.ValueBufferType=Array,gi.prototype.DefaultInterpolation=K,gi.prototype.InterpolantFactoryMethodLinear=void 0,gi.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends fi{}).prototype.ValueTypeName="color";(class extends fi{}).prototype.ValueTypeName="number";class yi extends hi{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,a=this.sampleValues,i=this.valueSize,o=(n-t)/(r-t);let l=e*i;for(let e=l+i;l!==e;l+=4)st.slerpFlat(s,0,a,l-i,a,l,o);return s}}class bi extends fi{InterpolantFactoryMethodLinear(e){return new yi(this.times,this.values,this.getValueSize(),e)}}bi.prototype.ValueTypeName="quaternion",bi.prototype.DefaultInterpolation=j,bi.prototype.InterpolantFactoryMethodSmooth=void 0;class xi extends fi{}xi.prototype.ValueTypeName="string",xi.prototype.ValueBufferType=Array,xi.prototype.DefaultInterpolation=K,xi.prototype.InterpolantFactoryMethodLinear=void 0,xi.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends fi{}).prototype.ValueTypeName="vector";Error;const vi="\\[\\]\\.:\\/",wi=new RegExp("["+vi+"]","g"),Si="[^"+vi+"]",Ti="[^"+vi.replace("\\.","")+"]",_i=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Si)+/(WCOD+)?/.source.replace("WCOD",Ti)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Si)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Si)+"$"),Ii=["material","materials","bones","map"];class Ci{constructor(e,t,n){this.path=t,this.parsedPath=n||Ci.parseTrackName(t),this.node=Ci.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ci.Composite(e,t,n):new Ci(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(wi,"")}static parseTrackName(e){const t=_i.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const e=n.nodeName.substring(r+1);-1!==Ii.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let r=0;r<e.length;r++){const s=e[r];if(s.name===t||s.uuid===t)return s;const a=n(s.children);if(a)return a}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=Ci.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");if(n){let r=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===r){r=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==r){if(void 0===e[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[r]}}const a=e[r];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",e)}let i=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?i=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(i=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==s){if("morphTargetInfluences"===r){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[s]&&(s=e.morphTargetDictionary[s])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=s}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=r;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][i]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ci.Composite=class{constructor(e,t,n){const r=n||Ci.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Ci.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ci.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ci.prototype.GetterByBindingType=[Ci.prototype._getValue_direct,Ci.prototype._getValue_array,Ci.prototype._getValue_arrayElement,Ci.prototype._getValue_toArray],Ci.prototype.SetterByBindingTypeAndVersioning=[[Ci.prototype._setValue_direct,Ci.prototype._setValue_direct_setNeedsUpdate,Ci.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ci.prototype._setValue_array,Ci.prototype._setValue_array_setNeedsUpdate,Ci.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ci.prototype._setValue_arrayElement,Ci.prototype._setValue_arrayElement_setNeedsUpdate,Ci.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ci.prototype._setValue_fromArray,Ci.prototype._setValue_fromArray_setNeedsUpdate,Ci.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:e}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=e);const Mi=(e,t)=>{const n=2*Math.PI*t*e;return n/(n+1)},Ei=(e,t,n)=>e*t+(1-e)*n;class Ni{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map((()=>0)),this.tPrev=e,t;const{xPrev:n,tPrev:r,dxPrev:s}=this,a=e-r,i=Mi(a,this.dCutOff),o=[],l=[],u=[];for(let e=0;e<t.length;e++){o[e]=(t[e]-n[e])/a,l[e]=Ei(i,o[e],s[e]);const r=this.minCutOff+this.beta*Math.abs(l[e]),c=Mi(a,r);u[e]=Ei(c,t[e],n[e])}return this.xPrev=u,this.dxPrev=l,this.tPrev=e,u}}class ki{constructor({uiLoading:e,uiScanning:t,uiError:n}){const r=document.createElement("style");r.innerText=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}",document.head.appendChild(r),"yes"===e?this.loadingModal=this._loadHTML('<div class="mindar-ui-overlay mindar-ui-loading">\n  <div class="loader"/>\n</div>\n'):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML('<div class="mindar-ui-overlay mindar-ui-compatibility">\n  <div class="content">\n    <h1>Failed to launch :(</h1>\n    <p>\n      Looks like your device/browser is not compatible.\n    </p>\n\n    <br/>\n    <br/>\n    <p>\n      Please try the following recommended browsers:\n    </p>\n    <p>\n      For Android device - Chrome\n    </p>\n    <p>\n      For iOS device - Safari\n    </p>\n  </div>\n</div>\n'):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML('<div class="mindar-ui-overlay mindar-ui-scanning">\n  <div class="scanning">\n    <div class="inner">\n      <div class="scanline"/>\n    </div>\n  </div>\n</div>\n'):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}function Ri(e,t){for(var n=0;n<t.length;n++){const r=t[n];if("string"!=typeof r&&!Array.isArray(r))for(const t in r)if("default"!==t&&!(t in e)){const n=Object.getOwnPropertyDescriptor(r,t);n&&Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:()=>r[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}class Li{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ai{refCount(e){return Pi("refCount")}incRef(e){return Pi("incRef")}timerAvailable(){return!0}time(e){return Pi("time")}read(e){return Pi("read")}readSync(e){return Pi("readSync")}readToGPU(e,t){return Pi("readToGPU")}numDataIds(){return Pi("numDataIds")}disposeData(e,t){return Pi("disposeData")}write(e,t,n){return Pi("write")}move(e,t,n,r,s){return Pi("move")}createTensorFromGPUData(e,t,n){return Pi("createTensorFromGPUData")}memory(){return Pi("memory")}floatPrecision(){return Pi("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Pi("dispose")}}function Pi(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Di(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,zi(e,t,n)}function Oi(e,t,n){return Math.max(e,Math.min(t,n))}function Gi(e){return e%2==0?e:e+1}function zi(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Fi(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Wi(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Vi(e,t,n=""){Wi($i(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Ui(e){Wi(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Bi(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Xi(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function $i(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Hi(e){return e%1==0}function Zi(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Ki(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ji(e,t=e=>0,n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function Yi(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function Qi(e,t){const n=t.length;return Wi((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Wi(e.every((e=>Hi(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function Ji(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:Qi(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function qi(e,t){return eo(e,t)}function eo(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function to(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function no(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ro(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function so(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ao(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function io(e){return"string"==typeof e||e instanceof String}function oo(e){return"boolean"==typeof e}function lo(e){return"number"==typeof e}function uo(e){return Array.isArray(e)?uo(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":lo(e)?"float32":io(e)?"string":oo(e)?"bool":"float32"}function co(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ho(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function po(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function mo(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=mo(e+t*o,i,n,r)}return s}function fo(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return mo(0,e,t,n)}function go(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function yo(e,t){const n=bo(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function bo(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function xo(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return fo(e,new Float32Array(n));if("int32"===t)return fo(e,new Int32Array(n));if("bool"===t)return fo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function vo(e){e.forEach((t=>{Wi(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function wo(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function So(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function To(e){return e&&e.then&&"function"==typeof e.then}const _o="tfjsflags";class Io{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Co,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Mo().getBool("IS_TEST")||Mo().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Mo().getBool("IS_TEST")||Mo().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(To(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);_o in e&&e[_o].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function Co(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Mo(){return No}let Eo,No=null;function ko(){if(null==Eo){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");e=self}Eo=e}return Eo}function Ro(e,t){const n=function(){const e=ko();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Lo="Abs",Ao="Acos",Po="Acosh",Do="Add",Oo="AddN",Go="All",zo="Any",Fo="ArgMax",Wo="ArgMin",Vo="Asin",Uo="Asinh",Bo="Atan",Xo="Atanh",$o="Atan2",Ho="AvgPool",Zo="AvgPoolGrad",Ko="AvgPool3D",jo="AvgPool3DGrad",Yo="BatchMatMul",Qo="BatchToSpaceND",Jo="Bincount",qo="BitwiseAnd",el="BroadcastTo",tl="BroadcastArgs",nl="Cast",rl="Ceil",sl="ClipByValue",al="Complex",il="ComplexAbs",ol="Concat",ll="Conv2D",ul="Conv2DBackpropFilter",cl="Conv2DBackpropInput",hl="Conv3D",dl="Conv3DBackpropFilterV2",pl="Conv3DBackpropInputV2",ml="Cos",fl="Cosh",gl="Cumprod",yl="Cumsum",bl="CropAndResize",xl="DenseBincount",vl="DepthToSpace",wl="DepthwiseConv2dNative",Sl="DepthwiseConv2dNativeBackpropFilter",Tl="DepthwiseConv2dNativeBackpropInput",_l="Diag",Il="Dilation2D",Cl="Dilation2DBackpropInput",Ml="Dilation2DBackpropFilter",El="Draw",Nl="RealDiv",kl="Einsum",Rl="Elu",Ll="EluGrad",Al="Erf",Pl="Equal",Dl="Exp",Ol="ExpandDims",Gl="Expm1",zl="FFT",Fl="Fill",Wl="FlipLeftRight",Vl="Floor",Ul="FloorDiv",Bl="FusedBatchNorm",Xl="GatherV2",$l="GatherNd",Hl="Greater",Zl="GreaterEqual",Kl="Identity",jl="IFFT",Yl="Imag",Ql="IsFinite",Jl="IsInf",ql="IsNan",eu="LeakyRelu",tu="Less",nu="LessEqual",ru="LinSpace",su="Log",au="Log1p",iu="LogicalAnd",ou="LogicalNot",lu="LogicalOr",uu="LogSoftmax",cu="LRN",hu="LRNGrad",du="Max",pu="Maximum",mu="MaxPool",fu="MaxPoolGrad",gu="MaxPool3D",yu="MaxPool3DGrad",bu="MaxPoolWithArgmax",xu="Mean",vu="Min",wu="Minimum",Su="MirrorPad",Tu="Mod",_u="Multinomial",Iu="Multiply",Cu="Neg",Mu="NotEqual",Eu="NonMaxSuppressionV3",Nu="NonMaxSuppressionV4",ku="NonMaxSuppressionV5",Ru="OnesLike",Lu="OneHot",Au="Pack",Pu="PadV2",Du="Pow",Ou="Prelu",Gu="Prod",zu="RaggedGather",Fu="RaggedRange",Wu="RaggedTensorToTensor",Vu="Range",Uu="Real",Bu="Reciprocal",Xu="Relu",$u="Reshape",Hu="ResizeNearestNeighbor",Zu="ResizeNearestNeighborGrad",Ku="ResizeBilinear",ju="ResizeBilinearGrad",Yu="Relu6",Qu="Reverse",Ju="Round",qu="Rsqrt",ec="ScatterNd",tc="TensorScatterUpdate",nc="SearchSorted",rc="Select",sc="Selu",ac="Slice",ic="Sin",oc="Sinh",lc="Sign",uc="Sigmoid",cc="Softplus",hc="Sqrt",dc="Sum",pc="SpaceToBatchND",mc="SplitV",fc="Softmax",gc="SparseFillEmptyRows",yc="SparseReshape",bc="SparseSegmentMean",xc="SparseSegmentSum",vc="SparseToDense",wc="SquaredDifference",Sc="Square",Tc="StaticRegexReplace",_c="StridedSlice",Ic="StringNGrams",Cc="StringSplit",Mc="StringToHashBucketFast",Ec="Sub",Nc="Tan",kc="Tanh",Rc="Tile",Lc="TopK",Ac="Transform",Pc="Transpose",Dc="Unique",Oc="Unpack",Gc="UnsortedSegmentSum",zc="ZerosLike",Fc="Step",Wc="FromPixels",Vc="RotateWithOffset",Uc="_FusedMatMul",Bc="FusedConv2D",Xc="FusedDepthwiseConv2D";function $c(...e){Mo().getBool("IS_TEST")||Mo().getBool("PROD")||console.warn(...e)}const Hc=Ro("kernelRegistry",(()=>new Map)),Zc=Ro("gradRegistry",(()=>new Map));function Kc(e,t){const n=qc(e,t);return Hc.get(n)}function jc(e){return Zc.get(e)}function Yc(e){const t=Hc.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Qc(e){const{kernelName:t,backendName:n}=e,r=qc(t,n);Hc.has(r)&&$c(`The kernel '${t}' for backend '${n}' is already registered`),Hc.set(r,e)}function Jc(e){const{kernelName:t}=e;Zc.has(t)&&Mo().getBool("DEBUG")&&$c(`Overriding the gradient for '${t}'`),Zc.set(t,e)}function qc(e,t){return`${t}_${e}`}function eh(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var th=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function nh(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function rh(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var sh=ih,ah=null;try{ah=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ih(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function oh(e){return!0===(e&&e.__isLong__)}ih.prototype.__isLong__,Object.defineProperty(ih.prototype,"__isLong__",{value:!0}),ih.isLong=oh;var lh={},uh={};function ch(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=uh[e])?r:(n=dh(e,(0|e)<0?-1:0,!0),s&&(uh[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=lh[e])?r:(n=dh(e,e<0?-1:0,!1),s&&(lh[e]=n),n)}function hh(e,t){if(isNaN(e))return t?wh:vh;if(t){if(e<0)return wh;if(e>=yh)return Ch}else{if(e<=-bh)return Mh;if(e+1>=bh)return Ih}return e<0?hh(-e,t).neg():dh(e%gh|0,e/gh|0,t)}function dh(e,t,n){return new ih(e,t,n)}ih.fromInt=ch,ih.fromNumber=hh,ih.fromBits=dh;var ph=Math.pow;function mh(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return vh;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return mh(e.substring(1),t,n).neg();for(var s=hh(ph(n,8)),a=vh,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),l=parseInt(e.substring(i,i+o),n);if(o<8){var u=hh(ph(n,o));a=a.mul(u).add(hh(l))}else a=(a=a.mul(s)).add(hh(l))}return a.unsigned=t,a}function fh(e,t){return"number"==typeof e?hh(e,t):"string"==typeof e?mh(e,t):dh(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}ih.fromString=mh,ih.fromValue=fh;var gh=4294967296,yh=gh*gh,bh=yh/2,xh=ch(1<<24),vh=ch(0);ih.ZERO=vh;var wh=ch(0,!0);ih.UZERO=wh;var Sh=ch(1);ih.ONE=Sh;var Th=ch(1,!0);ih.UONE=Th;var _h=ch(-1);ih.NEG_ONE=_h;var Ih=dh(-1,2147483647,!1);ih.MAX_VALUE=Ih;var Ch=dh(-1,-1,!0);ih.MAX_UNSIGNED_VALUE=Ch;var Mh=dh(0,-2147483648,!1);ih.MIN_VALUE=Mh;var Eh=ih.prototype;Eh.toInt=function(){return this.unsigned?this.low>>>0:this.low},Eh.toNumber=function(){return this.unsigned?(this.high>>>0)*gh+(this.low>>>0):this.high*gh+(this.low>>>0)},Eh.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Mh)){var t=hh(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=hh(ph(e,6),this.unsigned),a=this,i="";;){var o=a.div(s),l=(a.sub(o.mul(s)).toInt()>>>0).toString(e);if((a=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},Eh.getHighBits=function(){return this.high},Eh.getHighBitsUnsigned=function(){return this.high>>>0},Eh.getLowBits=function(){return this.low},Eh.getLowBitsUnsigned=function(){return this.low>>>0},Eh.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Mh)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},Eh.isZero=function(){return 0===this.high&&0===this.low},Eh.eqz=Eh.isZero,Eh.isNegative=function(){return!this.unsigned&&this.high<0},Eh.isPositive=function(){return this.unsigned||this.high>=0},Eh.isOdd=function(){return!(1&~this.low)},Eh.isEven=function(){return!(1&this.low)},Eh.equals=function(e){return oh(e)||(e=fh(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},Eh.eq=Eh.equals,Eh.notEquals=function(e){return!this.eq(e)},Eh.neq=Eh.notEquals,Eh.ne=Eh.notEquals,Eh.lessThan=function(e){return this.comp(e)<0},Eh.lt=Eh.lessThan,Eh.lessThanOrEqual=function(e){return this.comp(e)<=0},Eh.lte=Eh.lessThanOrEqual,Eh.le=Eh.lessThanOrEqual,Eh.greaterThan=function(e){return this.comp(e)>0},Eh.gt=Eh.greaterThan,Eh.greaterThanOrEqual=function(e){return this.comp(e)>=0},Eh.gte=Eh.greaterThanOrEqual,Eh.ge=Eh.greaterThanOrEqual,Eh.compare=function(e){if(oh(e)||(e=fh(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Eh.comp=Eh.compare,Eh.negate=function(){return!this.unsigned&&this.eq(Mh)?Mh:this.not().add(Sh)},Eh.neg=Eh.negate,Eh.add=function(e){oh(e)||(e=fh(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=0,u=0,c=0,h=0;return c+=(h+=s+(65535&e.low))>>>16,u+=(c+=r+o)>>>16,l+=(u+=n+i)>>>16,l+=t+a,dh((c&=65535)<<16|(h&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},Eh.subtract=function(e){return oh(e)||(e=fh(e)),this.add(e.neg())},Eh.sub=Eh.subtract,Eh.multiply=function(e){if(this.isZero())return vh;if(oh(e)||(e=fh(e)),ah)return dh(ah.mul(this.low,this.high,e.low,e.high),ah.get_high(),this.unsigned);if(e.isZero())return vh;if(this.eq(Mh))return e.isOdd()?Mh:vh;if(e.eq(Mh))return this.isOdd()?Mh:vh;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(xh)&&e.lt(xh))return hh(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,o=e.low>>>16,l=65535&e.low,u=0,c=0,h=0,d=0;return h+=(d+=s*l)>>>16,c+=(h+=r*l)>>>16,h&=65535,c+=(h+=s*o)>>>16,u+=(c+=n*l)>>>16,c&=65535,u+=(c+=r*o)>>>16,c&=65535,u+=(c+=s*i)>>>16,u+=t*l+n*o+r*i+s*a,dh((h&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},Eh.mul=Eh.multiply,Eh.divide=function(e){if(oh(e)||(e=fh(e)),e.isZero())throw Error("division by zero");var t,n,r;if(ah)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?dh((this.unsigned?ah.div_u:ah.div_s)(this.low,this.high,e.low,e.high),ah.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?wh:vh;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return wh;if(e.gt(this.shru(1)))return Th;r=wh}else{if(this.eq(Mh))return e.eq(Sh)||e.eq(_h)?Mh:e.eq(Mh)?Sh:(t=this.shr(1).div(e).shl(1)).eq(vh)?e.isNegative()?Sh:_h:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(Mh))return this.unsigned?wh:vh;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=vh}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),a=s<=48?1:ph(2,s-48),i=hh(t),o=i.mul(e);o.isNegative()||o.gt(n);)o=(i=hh(t-=a,this.unsigned)).mul(e);i.isZero()&&(i=Sh),r=r.add(i),n=n.sub(o)}return r},Eh.div=Eh.divide,Eh.modulo=function(e){return oh(e)||(e=fh(e)),ah?dh((this.unsigned?ah.rem_u:ah.rem_s)(this.low,this.high,e.low,e.high),ah.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},Eh.mod=Eh.modulo,Eh.rem=Eh.modulo,Eh.not=function(){return dh(~this.low,~this.high,this.unsigned)},Eh.and=function(e){return oh(e)||(e=fh(e)),dh(this.low&e.low,this.high&e.high,this.unsigned)},Eh.or=function(e){return oh(e)||(e=fh(e)),dh(this.low|e.low,this.high|e.high,this.unsigned)},Eh.xor=function(e){return oh(e)||(e=fh(e)),dh(this.low^e.low,this.high^e.high,this.unsigned)},Eh.shiftLeft=function(e){return oh(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?dh(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):dh(0,this.low<<e-32,this.unsigned)},Eh.shl=Eh.shiftLeft,Eh.shiftRight=function(e){return oh(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?dh(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):dh(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Eh.shr=Eh.shiftRight,Eh.shiftRightUnsigned=function(e){if(oh(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?dh(this.low>>>e|t<<32-e,t>>>e,this.unsigned):dh(32===e?t:t>>>e-32,0,this.unsigned)},Eh.shru=Eh.shiftRightUnsigned,Eh.shr_u=Eh.shiftRightUnsigned,Eh.toSigned=function(){return this.unsigned?dh(this.low,this.high,!1):this},Eh.toUnsigned=function(){return this.unsigned?this:dh(this.low,this.high,!0)},Eh.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Eh.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},Eh.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},ih.fromBytes=function(e,t,n){return n?ih.fromBytesLE(e,t):ih.fromBytesBE(e,t)},ih.fromBytesLE=function(e,t){return new ih(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},ih.fromBytesBE=function(e,t){return new ih(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Nh=nh(sh),kh=Nh||Ri({__proto__:null,default:Nh},[sh]);function Rh(e){return kh.fromString(e,!0,16)}const Lh=Rh("c3a5c85c97cb3127"),Ah=Rh("b492b66fbe98f273"),Ph=Rh("9ae16a3b2f90404f");function Dh(e){return e.xor(e.shru(47))}function Oh(e,t,n){const r=e.slice(t,t+n);return kh.fromBytes(Array.from(r),!0,!0)}function Gh(e,t){return Oh(e,t,8)}function zh(e,t){return Oh(e,t,4)}function Fh(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Wh(e,t,n=Rh("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Vh(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Fh(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Fh(s,44)),[s.add(r),a.add(i)]}(Gh(e,t),Gh(e,t+8),Gh(e,t+16),Gh(e,t+24),n,r)}function Uh(e,t=e.length){const n=kh.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Ph.add(2*t),r=Gh(e,0).add(Ph),s=Gh(e,t-8);return Wh(Fh(s,37).mul(n).add(r),Fh(r,25).add(s).mul(n),n)}if(t>=4){const n=Ph.add(2*t);return Wh(zh(e,0).shl(3).add(t),zh(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Dh(Ph.mul(n).xor(Lh.mul(r))).mul(Ph)}return Ph}(e,t):function(e,t=e.length){const n=Ph.add(2*t),r=Gh(e,0).mul(Ah),s=Gh(e,8),a=Gh(e,t-8).mul(n),i=Gh(e,t-16).mul(Ph);return Wh(Fh(r.add(s),43).add(Fh(a,30)).add(i),r.add(Fh(s.add(Ph),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Ph.add(2*t),r=Gh(e,0).mul(Ph),s=Gh(e,8),a=Gh(e,t-8).mul(n),i=Gh(e,t-16).mul(Ph),o=Fh(r.add(s),43).add(Fh(a,30)).add(i),l=Wh(o,r.add(Fh(s.add(Ph),18)).add(a),n),u=Gh(e,16).mul(n),c=Gh(e,24),h=o.add(Gh(e,t-32)).mul(n),d=l.add(Gh(e,t-24)).mul(n);return Wh(Fh(u.add(c),43).add(Fh(h,30)).add(d),u.add(Fh(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Ah).add(113),a=Dh(s.mul(Ph).add(113)).mul(Ph),i=[kh.UZERO,kh.UZERO],o=[kh.UZERO,kh.UZERO];r=r.mul(Ph).add(Gh(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Fh(r.add(s).add(i[0]).add(Gh(e,l+8)),37).mul(Ah),s=Fh(s.add(i[1]).add(Gh(e,l+48)),42).mul(Ah),r=r.xor(o[1]),s=s.add(i[0]).add(Gh(e,l+40)),a=Fh(a.add(o[0]),33).mul(Ah),i=Vh(e,l,i[1].mul(Ah),r.add(o[0])),o=Vh(e,l+32,a.add(o[1]),s.add(Gh(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=Ah.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Fh(r.add(s).add(i[0]).add(Gh(e,l+8)),37).mul(h),s=Fh(s.add(i[1]).add(Gh(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Gh(e,l+40))),a=Fh(a.add(o[0]),33).mul(h),i=Vh(e,l,i[1].mul(h),r.add(o[0])),o=Vh(e,l+32,a.add(o[1]),s.add(Gh(e,l+16))),[a,r]=[r,a],Wh(Wh(i[0],o[0],h).add(Dh(s).mul(Lh)).add(a),Wh(i[1],o[1],h).add(r),h)}function Bh(e,t){return"string"===t?Zh(e):Xh([e],t)}function Xh(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Yh(e)),Mo().getBool("DEBUG")&&to(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function $h(){return Mo().platform.now()}function Hh(e,t){return Mo().platform.fetch(e,t)}function Zh(e,t="utf-8"){return t=t||"utf-8",Mo().platform.encode(e,t)}function Kh(e,t="utf-8"){return t=t||"utf-8",Mo().platform.decode(e,t)}function jh(e){return null!=Mo().platform.isTypedArray?Mo().platform.isTypedArray(e):eh(e)}function Yh(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||To(e)||null==e||jh(e)&&n)t.push(e);else if(Array.isArray(e)||jh(e))for(let r=0;r<e.length;++r)Yh(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)Yh(e[s],t,n)}return t}const Qh=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:$i,arraysEqualWithNull:Xi,assert:Wi,assertNonNegativeIntegerDimensions:vo,assertNonNull:Ui,assertShapesMatch:Vi,bytesFromStringArray:ao,bytesPerElement:so,checkConversionForErrors:to,clamp:Oi,computeStrides:po,convertBackendValuesAndArrayBuffer:go,createScalarValue:Bh,createShuffledIndices:function(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Di(t),t},decodeString:Kh,distSquared:function(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n},encodeString:Zh,fetch:Hh,fingerPrint64:Uh,flatten:Yh,getArrayFromDType:eo,getTypedArrayFromDType:qi,hasEncodingLoss:ro,hexToLong:Rh,indexToLoc:So,inferDtype:uo,inferFromImplicitShape:Yi,isBoolean:oo,isFunction:co,isInt:Hi,isNumber:lo,isPromise:To,isScalarShape:function(e){return 0===e.length},isString:io,isTypedArray:jh,isValidDtype:no,locToIndex:wo,makeOnesTypedArray:yo,makeZerosNestedTypedArray:xo,makeZerosTypedArray:bo,nearestDivisor:ho,nearestLargerEven:Gi,now:$h,parseAxisParam:Qi,randUniform:function(e,t){const n=Math.random();return t*n+(1-n)*e},repeatedTry:ji,rightPad:Ki,shuffle:Di,shuffleCombo:function(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,zi(e,n,r),zi(t,n,r)},sizeFromShape:Bi,sizeToSquarishShape:Zi,squeezeShape:Ji,sum:Fi,swap:zi,tanh:function(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}},toNestedArray:fo,toTypedArray:Xh},Symbol.toStringTag,{value:"Module"}));class Jh{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ed)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=$h();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:$h()-i})}if(Mo().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{qh(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function qh(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ed{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?Ki(`${r}ms`,9):r.error,o=Ki(e,25),l=t.rank,u=t.size,c=Ki(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function td(e,t,n,r){const s=po(t),a=function(e,t,n,r){const s=Bi(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?ad(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],nd(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=sd(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function nd(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:io(e)?`'${e}'`:"bool"===n?rd(e):parseFloat(e.toFixed(7)).toString(),Ki(r,t)}function rd(e){return 0===e?"false":"true"}function sd(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[nd(ad(e)[0],0,n)]:"bool"===n?[rd(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ad(r),a=ad(a)),["["+r.map(((e,t)=>nd(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>nd(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ad(e):Array.from(e)).map(((e,t)=>nd(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...sd(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...sd(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...sd(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let m=",\n";for(let e=2;e<l;e++)m+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":m),d}function ad(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class id{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Bi(e),null!=n){const e=n.length;Wi(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||eo(t,this.size),this.strides=po(e)}set(e,...t){0===t.length&&(t=[0]),Wi(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return od().makeTensor(this.values,this.shape,this.dtype)}}let od=null,ld=null;class ud{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Bi(e),this.strides=po(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ld.buffer(this.shape,this.dtype,e)}bufferSync(){return ld.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return fo(this.shape,e,"complex64"===this.dtype)}arraySync(){return fo(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=od().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Kh(e)))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),od().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=od().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Kh(e)))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await od().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),od().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ld.print(this,e)}clone(){return this.throwIfDisposed(),ld.clone(this)}toString(e=!1){return td(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ld.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),od().makeVariable(this,e,t,n)}}function cd(){return Ro("Tensor",(()=>ud))}Object.defineProperty(ud,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),cd();class hd extends ud{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!$i(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);od().disposeTensor(this),this.dataId=e.dataId,od().incRef(this,null)}dispose(){od().disposeVariable(this),this.isDisposedInternal=!0}}var dd,pd,md,fd,gd,yd;Object.defineProperty(hd,Symbol.hasInstance,{value:e=>e instanceof ud&&null!=e.assign&&e.assign instanceof Function}),(pd=dd||(dd={})).R0="R0",pd.R1="R1",pd.R2="R2",pd.R3="R3",pd.R4="R4",pd.R5="R5",pd.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(md||(md={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(fd||(fd={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(gd||(gd={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(yd||(yd={}));const bd={float32:gd,int32:md,bool:fd,complex64:yd};function xd(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return bd[e][t]}function vd(e){return xd(e,"int32")}function wd(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Sd(e){return typeof GPUBuffer<"u"&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Td(e,t){if(e.dtype===t.dtype)return[e,t];const n=xd(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function _d(e,t){Wi(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Id(e,t){return t.some((t=>t.id===e.id))}function Cd(e){const t=[];return Md(e,t,new Set),t}function Md(e,t,n){if(null==e)return;if(e instanceof ud)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),Md(s,t,n))}}const Ed=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:_d,getTensorsInContainer:Cd,isTensorInList:Id,makeTypesMatch:Td},Symbol.toStringTag,{value:"Module"}));function Nd(e){return null!=e.kernelName}class kd{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Rd{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new kd}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?($c(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Jh(this.backendInstance),!0}setupRegisteredKernels(){Yc(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Yc(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Ai||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,$c(`Initialization of backend ${e} failed`),$c(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return $c(`Initialization of backend ${e} failed`),$c(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Rd.nextTensorId++}nextVariableId(){return Rd.nextVariableId++}clone(e){const t=Ad.runKernel(Kl,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Ad.runKernel(nl,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Kc(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Nd(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Nd(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=Kc(t,this.backendName);Wi(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Nd(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=jc(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(Wi(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&io(e[0])&&(s=e.map((e=>Zh(e))));const a=r.write(s,t,n),i=new ud(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=ao(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new ud(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new hd(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*so(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof hd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*so(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=jc(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=bo(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Cd(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(Wi(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Wi(s instanceof ud,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=n??function(e){const t=yo(Bi(e),"float32");return Ad.makeTensor(t,e,"float32")}(s.shape),function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!$i(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Pd);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return Wi(co(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Wi(t.every((e=>e instanceof ud)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),Wi(n.value instanceof ud,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Wi(co(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];Wi(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Wi(a.every((e=>e instanceof ud)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=$h(),n=await this.backend.time(e);return n.wallMs=$h()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new kd;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ld(){const e=ko();if(null==e._tfengine){const t=new Io(e);e._tfengine=new Rd(t)}return function(e){No=e}(e._tfengine.ENV),function(e){od=e}((()=>e._tfengine)),e._tfengine}Rd.nextTensorId=0,Rd.nextVariableId=0;const Ad=Ld();function Pd(e,t){const n={a:e,b:t};return Ad.runKernel(Do,n)}let Dd;function Od(e){if(void 0!==Dd)return Dd;if(e||typeof navigator<"u"&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Gd(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}const zd=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:Gd,isMobile:Od,mockIsMobile:function(e){Dd=e}},Symbol.toStringTag,{value:"Module"})),Fd=Mo();function Wd(e,t){let n=e;if(jh(e))return"string"===t?[]:[e.length];if(wd(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Sd(e))return[e.buffer.size/(null==t?4:so(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||jh(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Mo().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Vd(e,r,[]),r}function Vd(e,t,n){if(n=n||[],!Array.isArray(e)&&!jh(e))return void Wi(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Wi(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Wi(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Vd(e[t],r,n.concat(t))}function Ud(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Bd(e,t,n,r="numeric"){if(e instanceof cd())return Ud(r,e.dtype,t,n),e;let s=uo(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ud(r,s,t,n),null==e||!jh(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Wd(e,s);!jh(e)&&!Array.isArray(e)&&(e=[e]);const i="string"!==s?Xh(e,s):Yh(e,[],!0);return Ad.makeTensor(i,a,s)}function Xd(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Bd(e,`${t}[${s}]`,n,r)))}Fd.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Fd.registerFlag("IS_BROWSER",(()=>Gd())),Fd.registerFlag("IS_NODE",(()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u")),Fd.registerFlag("IS_CHROME",(()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Fd.registerFlag("IS_SAFARI",(()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Fd.registerFlag("PROD",(()=>!1)),Fd.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Fd.getBool("DEBUG"))),Fd.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Fd.registerFlag("IS_TEST",(()=>!1)),Fd.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Fd.getBool("DEBUG"))),Fd.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Fd.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Fd.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const $d="__op";function Hd(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=$d;const s=(...e)=>{Ad.startScope(n);try{const t=r(...e);return To(t)&&console.error("Cannot return a Promise inside of tidy."),Ad.endScope(t),t}catch(e){throw Ad.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Zd=Hd({complex_:function(e,t){const n=Bd(e,"real","complex"),r=Bd(t,"imag","complex");Vi(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Ad.runKernel(al,s)}});function Kd(e,t,n,r){if(null==r)r=uo(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Sd(e)||wd(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Ad.backend.createTensorFromGPUData(e,t||n,r)}if(!jh(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){vo(t);const e=Bi(t),r=Bi(n);Wi(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Bi(t.slice(e));Wi(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!jh(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?Xh(e,r):Yh(e,[],!0),Ad.makeTensor(e,t,r)}function jd(e,t,n){return Kd(e,t,Wd(e,n),n)}const Yd={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Qd{static join(e){return new Qd(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map((e=>jh(e)?e.buffer:e))).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Jd(){return Ad}function qd(){return Ad.memory()}function ep(e,t){return Ad.tidy(e,t)}function tp(e){Cd(e).forEach((e=>e.dispose()))}function np(e){return Ad.keep(e)}function rp(){return Ad.backendName}function sp(e,t,n=1){return Ad.registerBackend(e,t,n)}function ap(){return Ad.backend}async function ip(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:pp(await Promise.all(r)),specs:n}}function op(e,t){const n=new Qd(e),r={};let s=0;for(const e of t){const t=lp(e,((e,t)=>n.slice(s+e,s+t)));r[e.name]=cp(e,n.slice(s,s+t)),s+=t}return r}function lp(e,t){const n=Bi(e.shape);let r;if("quantization"in e){const t=e.quantization;r=Yd[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}r=Yd[e.dtype]}return n*r}async function up(e,t){const n=Bi(e.shape);let r;if("quantization"in e){const t=e.quantization;r=Yd[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}r=Yd[e.dtype]}return n*r}function cp(e,t){const n=e.name,r=e.dtype,s=e.shape,a=Bi(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=Yd[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);i=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}()(u)}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*l}else if("string"===r){const n=Bi(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+4))[0];o+=4;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=Yd[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=jd(e,s,"float32"),a=jd(n,s,"float32"),o=Zd(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}i=new Uint8Array(t)}o+=a*e}return jd(i,s,r)}async function hp(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function dp(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const e of t){const t=await up(e,(async(e,t)=>(s=await hp(r,s,t),s.slice(e,t))));s=await hp(r,s,t);const a=s.slice(0,t);s=s.slice(t);const i=cp(e,a);if(n[e.name]=i,"webgpu"===rp()){const e=ap();"uploadToGPU"in e&&Bi(i.shape)>=Mo().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function pp(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const mp=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function fp(e){return mp?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function gp(e){return Qd.join(e)}function yp(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function bp(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function xp(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function vp(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),xp(e,n,r)}function wp(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:fp(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:fp(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Qd(e.weightData).byteLength}}function Sp(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Tp{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Tp.instance&&(Tp.instance=new Tp),Tp.instance}static registerSaveRouter(e){Tp.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Tp.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Tp.getHandlers(e,"save")}static getLoadHandlers(e,t){return Tp.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Tp.getInstance().loadRouters:Tp.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const _p=e=>Tp.getSaveHandlers(e),Ip=(e,t)=>Tp.getLoadHandlers(e,t),Cp="tensorflowjs",Mp="models_store",Ep="model_info_store";function Np(){if(!Mo().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function kp(e){const t=e.result;t.createObjectStore(Mp,{keyPath:"modelPath"}),t.createObjectStore(Ep,{keyPath:"modelPath"})}class Rp{constructor(e){if(this.indexedDB=Np(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Cp,1);r.onupgradeneeded=()=>kp(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Mp,"readonly"),r=t.objectStore(Mp).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=Qd.join(t.weightData);const r=wp(t),a=s.transaction(Ep,"readwrite");let i,o,l=a.objectStore(Ep);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Mp,"readwrite");const i=o.objectStore(Mp);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=a.objectStore(Ep);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Rp.URL_SCHEME="indexeddb://";const Lp=e=>Mo().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rp.URL_SCHEME)?function(e){return new Rp(e)}(e.slice(Rp.URL_SCHEME.length)):null;Tp.registerSaveRouter(Lp),Tp.registerLoadRouter(Lp);class Ap{constructor(){this.indexedDB=Np()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Cp,1);n.onupgradeneeded=()=>kp(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ep,"readonly"),a=s.objectStore(Ep).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Rp.URL_SCHEME)?e.slice(Rp.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{const r=this.indexedDB.open(Cp,1);r.onupgradeneeded=()=>kp(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Ep,"readwrite"),i=a.objectStore(Ep),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Mp,"readwrite");const r=l.objectStore(Mp).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Pp="/",Dp="tensorflowjs_models",Op="info",Gp="model_topology",zp="weight_specs",Fp="weight_data",Wp="model_metadata";function Vp(e){return{info:[Dp,e,Op].join(Pp),topology:[Dp,e,Gp].join(Pp),weightSpecs:[Dp,e,zp].join(Pp),weightData:[Dp,e,Fp].join(Pp),modelMetadata:[Dp,e,Wp].join(Pp)}}function Up(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Bp(e){const t=e.split(Pp);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Pp)}class Xp{constructor(e){if(!Mo().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Vp(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=wp(e),s=Qd.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(mp)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw Up(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(mp){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Xp.URL_SCHEME="localstorage://";const $p=e=>Mo().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xp.URL_SCHEME)?function(e){return new Xp(e)}(e.slice(Xp.URL_SCHEME.length)):null;Tp.registerSaveRouter($p),Tp.registerLoadRouter($p);class Hp{constructor(){Wi(Mo().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Wi(typeof window>"u"||typeof window.localStorage<"u",(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Dp+Pp,n=Pp+Op;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Bp(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){e=function(e){return e.startsWith(Xp.URL_SCHEME)?e.slice(Xp.URL_SCHEME.length):e}(e);const t=Vp(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return Up(t),n}}const Zp="://";class Kp{constructor(){this.managers={}}static getInstance(){return null==Kp.instance&&(Kp.instance=new Kp),Kp.instance}static registerManager(e,t){Wi(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Zp)&&(e=e.slice(0,e.indexOf(Zp))),Wi(e.length>0,(()=>"scheme must not be an empty string."));const n=Kp.getInstance();Wi(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Kp.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Kp.getInstance().managers)}}function jp(e){if(-1===e.indexOf(Zp))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Kp.getSchemes().join(",")}`);return{scheme:e.split(Zp)[0],path:e.split(Zp)[1]}}async function Yp(e,t,n=!1){Wi(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Tp.getLoadHandlers(e);Wi(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Wi(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Tp.getSaveHandlers(t);Wi(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Wi(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=jp(e).scheme,l=jp(e).path,u=o===jp(e).scheme,c=await s.load();n&&u&&await Kp.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await Kp.getManager(o).removeModel(l),h.modelArtifactsInfo}class Qp{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){typeof window>"u"||!Mo().getBool("USE_SETTIMEOUTCUSTOM")?setTimeout(e,t):(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0)))}isTypedArray(e){return eh(e)}}if(Mo().get("IS_BROWSER")){Mo().setPlatform("browser",new Qp);try{Kp.registerManager(Xp.URL_SCHEME,new Hp)}catch{}try{Kp.registerManager(Rp.URL_SCHEME,new Ap)}catch{}}let Jp;function qp(e,t="float32",n){return t=t||"float32",vo(e),new id(e,t,n)}Mo().get("IS_NODE")&&!Mo().get("IS_BROWSER")&&Mo().setPlatform("node",new class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Mo().global.fetch?Mo().global.fetch(e,t):(null==Jp&&(Jp=require("node-fetch")),Jp(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const em=Hd({cast_:function(e,t){const n=Bd(e,"x","cast");if(!no(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Ad.runKernel(nl,r,s)}}),tm=Hd({clone_:function(e){const t={x:Bd(e,"x","clone","string_or_numeric")};return Ad.runKernel(Kl,t)}});function nm(e,t=!1){console.log(e.toString(t))}Ld(),function(e){ld=e}({buffer:qp,cast:em,clone:tm,print:nm});const rm=Hd({add_:function(e,t){let n=Bd(e,"a","add"),r=Bd(t,"b","add");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel(Do,s)}}),sm=Hd({floorDiv_:function(e,t){let n=Bd(e,"a","floorDiv"),r=Bd(t,"b","floorDiv");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel(Ul,s)}}),am=Hd({div_:function(e,t){let n=Bd(e,"a","div"),r=Bd(t,"b","div");if([n,r]=Td(n,r),"int32"===n.dtype&&"int32"===r.dtype)return sm(n,r);const s={a:n,b:r};return Ad.runKernel(Nl,s,{})}}),im=Hd({mul_:function(e,t){let n=Bd(e,"a","mul"),r=Bd(t,"b","mul");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel(Iu,s)}}),om=Hd({abs_:function(e){const t=Bd(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ad.runKernel(il,e)}{const e={x:t};return Ad.runKernel(Lo,e)}}}),lm=Hd({acos_:function(e){const t={x:Bd(e,"x","acos")};return Ad.runKernel(Ao,t)}}),um=Hd({acosh_:function(e){const t={x:Bd(e,"x","acosh")};return Ad.runKernel(Po,t)}}),cm=Hd({all_:function(e,t=null,n=!1){const r={x:Bd(e,"x","all","bool")},s={axis:t,keepDims:n};return Ad.runKernel(Go,r,s)}}),hm=Hd({any_:function(e,t=null,n=!1){const r={x:Bd(e,"x","any","bool")},s={axis:t,keepDims:n};return Ad.runKernel(zo,r,s)}}),dm=Hd({argMax_:function(e,t=0){const n={x:Bd(e,"x","argMax")},r={axis:t};return Ad.runKernel(Fo,n,r)}}),pm=Hd({argMin_:function(e,t=0){const n={x:Bd(e,"x","argMin")},r={axis:t};return Ad.runKernel(Wo,n,r)}}),mm=Hd({asin_:function(e){const t={x:Bd(e,"x","asin")};return Ad.runKernel(Vo,t)}}),fm=Hd({asinh_:function(e){const t={x:Bd(e,"x","asinh")};return Ad.runKernel(Uo,t)}}),gm=Hd({atan_:function(e){const t={x:Bd(e,"x","atan")};return Ad.runKernel(Bo,t)}}),ym=Hd({atan2_:function(e,t){let n=Bd(e,"a","atan2"),r=Bd(t,"b","atan2");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel($o,s)}}),bm=Hd({atanh_:function(e){const t={x:Bd(e,"x","atanh")};return Ad.runKernel(Xo,t)}});function xm(e,t,n,r,s="NHWC",a){return Sm(e,[...t,e[3]],n,a,r,null,null,Lm(s))}function vm(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Im(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Sm(e,u,n,r,s,a,!1,i)}function wm(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Cm(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Tm(e,c,n,r,s,!1,h,a)}function Sm(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,m]=t,[f,g]=Im(n),[y,b]=Im(r),x=Mm(d,y),v=Mm(p,b),{padInfo:w,outHeight:S,outWidth:T}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=_m(e,t,n));const a=e[1];return[Em((e[0]-t+2*r)/n+1,s),Em((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],f="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:m,right:f,type:0===d&&0===p&&0===m&&0===f?"VALID":"EXPLICIT"},c=Em((t-a+d+p)/r+1,o),h=Em((n-i+m+f)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,f,g,x,v,a,o),_=i?m*h:m;let I;return"channelsFirst"===o?I=[l,_,S,T]:"channelsLast"===o&&(I=[l,S,T,_]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:S,outWidth:T,outChannels:_,padInfo:w,strideHeight:f,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:I,filterShape:t}}function Tm(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,m,f,,g]=t,[y,b,x]=Cm(n),[v,w,S]=Cm(r),T=Mm(p,v),_=Mm(m,w),I=Mm(f,S),{padInfo:C,outDepth:M,outHeight:E,outWidth:N}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,m;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const f=function(e,t,n,r,s,a){null==s&&(s=_m(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=Em((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,l,u],0,[s,a,i],e,c);d=f[0],p=f[1],m=f[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),m=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,f=(m-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(f/2);h={top:b,bottom:x,left:v,right:f-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:m}}(s,u,c,h,y,b,x,T,_,I,o),k=a?g*d:g;let R;return"channelsFirst"===i?R=[l,k,M,E,N]:"channelsLast"===i&&(R=[l,M,E,N,k]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:M,outHeight:E,outWidth:N,outChannels:k,padInfo:C,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:m,filterWidth:f,effectiveFilterDepth:T,effectiveFilterHeight:_,effectiveFilterWidth:I,dilationDepth:v,dilationHeight:w,dilationWidth:S,inShape:e,outShape:R,filterShape:t}}function _m(e,t,n,r=1){const s=Mm(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Im(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Cm(e){return"number"==typeof e?[e,e,e]:e}function Mm(e,t){return t<=1?e:e+(e-1)*(t-1)}function Em(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Nm(e){const[t,n,r]=Im(e);return 1===t&&1===n&&1===r}function km(e,t){return Nm(e)||Nm(t)}function Rm(e){return Im(e).every((e=>e>0))}function Lm(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Am(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Wi(Hi(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Wi(Hi(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Pm=Hd({reshape_:function(e,t){const n={x:Bd(e,"x","reshape","string_or_numeric")},r={shape:t};return Ad.runKernel($u,n,r)}}),Dm=Hd({avgPool_:function(e,t,n,r,s){const a=Bd(e,"x","avgPool","float32");Wi(km(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Pm(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Wi(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Am("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Ad.runKernel(Ho,l,u);return c=em(c,a.dtype),o?Pm(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Om=Hd({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Bd(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Pm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Wi(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Wi("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Wi("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Am("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Ad.runKernel(Ko,u,c);return h=em(h,o.dtype),l?Pm(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Gm=Hd({concat_:function(e,t=0){Wi(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Xd(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return tm(n[0]);const r=n,s={axis:t};return Ad.runKernel(ol,r,s)}}),zm=Hd({matMul_:function(e,t,n=!1,r=!1){let s=Bd(e,"a","matMul"),a=Bd(t,"b","matMul");[s,a]=Td(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Ad.runKernel(Yo,i,o)}}),Fm=Hd({sigmoid_:function(e){const t={x:Bd(e,"x","sigmoid","float32")};return Ad.runKernel(uc,t)}}),Wm=Hd({slice_:function(e,t,n){const r=Bd(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Ad.runKernel(ac,s,a)}}),Vm=Hd({tanh_:function(e){const t={x:Bd(e,"x","tanh","float32")};return Ad.runKernel(kc,t)}}),Um=Hd({batchToSpaceND_:function(e,t,n){const r=Bd(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));Wi(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Wi(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Wi(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Ad.runKernel(Qo,a,i)}});function Bm(e){let t;return t=0===e.rank||1===e.rank?Pm(e,[1,1,1,e.size]):2===e.rank?Pm(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Pm(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}const Xm=Hd({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Bd(e,"x","batchNorm"),o=Bd(t,"mean","batchNorm"),l=Bd(n,"variance","batchNorm");let u,c;null!=s&&(u=Bd(s,"scale","batchNorm")),null!=r&&(c=Bd(r,"offset","batchNorm")),Wi(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Wi(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Wi(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:Bm(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=Ad.runKernel(Bl,h,d);return Pm(p,i.shape)}}),$m=Hd({batchNorm2d_:function(e,t,n,r,s,a){const i=Bd(e,"x","batchNorm"),o=Bd(t,"mean","batchNorm"),l=Bd(n,"variance","batchNorm");let u,c;return null!=s&&(u=Bd(s,"scale","batchNorm")),null!=r&&(c=Bd(r,"offset","batchNorm")),Wi(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),Wi(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Wi(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Wi(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Wi(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Xm(i,o,l,c,u,a)}}),Hm=Hd({batchNorm3d_:function(e,t,n,r,s,a){const i=Bd(e,"x","batchNorm"),o=Bd(t,"mean","batchNorm"),l=Bd(n,"variance","batchNorm");let u,c;return null!=s&&(u=Bd(s,"scale","batchNorm")),null!=r&&(c=Bd(r,"offset","batchNorm")),Wi(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),Wi(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Wi(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Wi(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Wi(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Xm(i,o,l,c,u,a)}}),Zm=Hd({batchNorm4d_:function(e,t,n,r,s,a){const i=Bd(e,"x","batchNorm"),o=Bd(t,"mean","batchNorm"),l=Bd(n,"variance","batchNorm");let u,c;return null!=s&&(u=Bd(s,"scale","batchNorm")),null!=r&&(c=Bd(r,"offset","batchNorm")),Wi(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),Wi(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Wi(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Wi(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Wi(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Xm(i,o,l,c,u,a)}}),Km=Hd({bincount_:function(e,t,n){const r=Bd(e,"x","bincount"),s=Bd(t,"weights","bincount");Wi("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Wi(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Wi(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Ad.runKernel(Jo,a,i)}}),jm=Hd({broadcastTo_:function(e,t){let n=Bd(e,"broadcastTo","x");const r=n.shape;if(vo(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Pm(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return tm(n);const i={x:n},o={reps:a};return Ad.runKernel(Rc,i,o)}}),Ym=Hd({ceil_:function(e){const t={x:Bd(e,"x","ceil","float32")};return Ad.runKernel(rl,t)}});function Qm(e,t,n){vo(e);const r={shape:e,value:t,dtype:n=n||uo(t)};return Ad.runKernel(Fl,{},r)}const Jm=Hd({clipByValue_:function(e,t,n){const r=Bd(e,"x","clipByValue");if(Wi(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Qm(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return Ad.runKernel(sl,s,a)}}),qm=Hd({concat1d_:function(e){return Gm(e,0)}}),ef=Hd({concat2d_:function(e,t){return Gm(e,t)}}),tf=Hd({concat3d_:function(e,t){return Gm(e,t)}}),nf=Hd({concat4d_:function(e,t){return Gm(e,t)}}),rf=Hd({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Bd(e,"x","conv2d","float32"),l=Bd(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Pm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Wi(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Wi(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Am("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];Wi(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Wi(km(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Wi(Rm(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),Wi(Rm(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=Ad.runKernel(ll,d,p);return c?Pm(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),sf=Hd({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Bd(e,"x","conv1d"),l=Bd(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Pm(o,[1,o.shape[0],o.shape[1]])),Wi(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Wi(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Am("conv1d",r,i),Wi(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Wi(km(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),Wi(Rm(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),Wi(Rm(n),(()=>"Error in conv1D: Stride should be larger than 0.")),Wi("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Pm(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Pm(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=rf(d,h,[1,n],r,"NHWC",[1,a],i);return Pm(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),af=Hd({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){Wi(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Pm(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Wi(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Wi(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Wi(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];Wi(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Wi(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Am("conv2dDerInput",s,i);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},m=Ad.runKernel(cl,d,p);return u?Pm(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),of=Hd({conv2dTranspose_:function(e,t,n,r,s,a){const i=Bd(e,"x","conv2dTranspose"),o=Bd(t,"filter","conv2dTranspose");return af(n,i,o,r,s,"NHWC",a)}}),lf=Hd({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Bd(e,"x","conv3d"),o=Bd(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Pm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Wi(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Wi(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Wi(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Wi(km(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Wi("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),Wi(Rm(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),Wi(Rm(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Ad.runKernel(hl,c,h);return u?Pm(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),uf=Hd({conv3DBackpropInput_:function(e,t,n,r,s){Wi(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Pm(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];Wi(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),Wi(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Wi(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Wi(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Wi(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Ad.runKernel(pl,c,h);return o?Pm(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),cf=Hd({conv3dTranspose_:function(e,t,n,r,s){const a=Bd(e,"x","conv3dTranspose"),i=Bd(t,"filter","conv3dTranspose");return uf(n,a,i,r,s)}}),hf=Hd({cos_:function(e){const t={x:Bd(e,"x","cos","float32")};return Ad.runKernel(ml,t)}}),df=Hd({cosh_:function(e){const t={x:Bd(e,"x","cosh","float32")};return Ad.runKernel(fl,t)}}),pf=Hd({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Bd(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return Ad.runKernel(gl,s,a)}}),mf=Hd({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Bd(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Ad.runKernel(yl,s,a)}}),ff=Hd({denseBincount_:function(e,t,n,r=!1){const s=Bd(e,"x","denseBincount"),a=Bd(t,"weights","denseBincount");Wi("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),Wi(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),Wi(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Wi(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return Ad.runKernel(xl,i,o)}}),gf=Hd({depthToSpace_:function(e,t,n="NHWC"){const r=Bd(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Wi(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Wi(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Wi(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Wi(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Ad.runKernel(vl,o,l)}}),yf=Hd({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Bd(e,"x","depthwiseConv2d","float32"),l=Bd(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Pm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Wi(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Wi(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];Wi(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Am("depthwiseConv2d",r,i);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},m=Ad.runKernel(wl,d,p);return c?Pm(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),bf=Hd({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Bd(e,"x","dilation2d"),o=Bd(t,"filter","dilation2d");Wi(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Wi(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Wi("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Pm(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),Wi(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Ad.runKernel(Il,c,h);return u?Pm(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});function xf(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function vf(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function wf(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const Sf=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:wf,getBroadcastDims:xf,getReductionAxes:vf},Symbol.toStringTag,{value:"Module"})),Tf=Hd({equal_:function(e,t){let n=Bd(e,"a","equal","string_or_numeric"),r=Bd(t,"b","equal","string_or_numeric");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(Pl,s)}}),_f=Hd({where_:function(e,t,n){const r=Bd(t,"a","where"),s=Bd(n,"b","where"),a=Bd(e,"condition","where","bool"),i=wf(wf(a.shape,r.shape),s.shape),o={condition:jm(a,i),t:jm(r,i),e:jm(s,i)};return Ad.runKernel(rc,o)}}),If=Hd({zerosLike_:function(e){const t={x:Bd(e,"x","zerosLike")};return Ad.runKernel(zc,t)}}),Cf=Hd({divNoNan_:function(e,t){let n=Bd(e,"a","div"),r=Bd(t,"b","div");[n,r]=Td(n,r);const s=am(n,r),a=If(s),i=Tf(r,a);return _f(i,a,s)}}),Mf=Hd({dot_:function(e,t){const n=Bd(e,"t1","dot"),r=Bd(t,"t2","dot");Wi(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(Wi(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Pm(n,[1,-1]),t=Pm(r,[-1,1]),s=zm(e,t);return Pm(s,[])}if(1===n.rank&&2===r.rank){const e=Pm(n,[1,-1]),t=Pm(r,[r.shape[0],r.shape[1]]),s=zm(e,t);return Pm(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Pm(r,[-1,1]),t=zm(n,e);return Pm(t,[t.size])}{const e=Pm(r,[r.shape[0],r.shape[1]]);return zm(n,e)}}}),Ef=Hd({einsum_:function(e,...t){const n=t.map(((e,t)=>Bd(e,`tensors${t}`,"einsum"))),r={equation:e};return Ad.runKernel(kl,n,r)}}),Nf=Hd({elu_:function(e){const t={x:Bd(e,"x","elu","float32")};return Ad.runKernel(Rl,t)}}),kf=Hd({erf_:function(e){let t=Bd(e,"x","erf");Wi("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=em(t,"float32"));const n={x:t};return Ad.runKernel(Al,n)}});function Rf(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Lf(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Af(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Pf(e,t){return Lf(e,t.map((e=>1)),t)}function Df(e,t,n){Wi(Rf(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Of(e,t){if(Rf(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Gf(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function zf(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ff=Hd({max_:function(e,t=null,n=!1){const r={x:Bd(e,"x","max")},s={reductionIndices:t,keepDims:n};return Ad.runKernel(du,r,s)}}),Wf=Hd({min_:function(e,t=null,n=!1){const r={x:Bd(e,"x","min")},s={axis:t,keepDims:n};return Ad.runKernel(vu,r,s)}}),Vf=Hd({pow_:function(e,t){let n=Bd(e,"base","pow"),r=Bd(t,"exp","pow");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel(Du,s)}});function Uf(e,t){if((jh(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&jh(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Kd(e,[],[],t)}const Bf=Hd({sqrt_:function(e){const t={x:Bd(e,"x","sqrt","float32")};return Ad.runKernel(hc,t)}}),Xf=Hd({square_:function(e){const t=Bd(e,"x","square");return Ad.runKernel("Square",{x:t},{})}}),$f=Hd({sum_:function(e,t=null,n=!1){let r=Bd(e,"x","sum");"bool"===r.dtype&&(r=em(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Ad.runKernel(dc,s,a)}});function Hf(e,t,n=null){if(0===e.rank)return om(e);if(1!==e.rank&&null===n)return Hf(Pm(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return $f(om(e),n);if(t===1/0)return Ff(om(e),n);if(t===-1/0)return Wf(om(e),n);if("euclidean"===t||2===t)return Bf($f(Vf(om(e),Uf(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ff($f(om(e),n[0]),n[1]-1);if(t===1/0)return Ff($f(om(e),n[1]),n[0]);if(t===-1/0)return Wf($f(om(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Bf($f(Xf(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Zf=Hd({norm_:function(e,t="euclidean",n=null,r=!1){const s=Hf(e=Bd(e,"x","norm"),t,n);let a=s.shape;if(r){const t=Qi(n,e.shape);a=Pf(s.shape,t)}return Pm(s,a)}}),Kf=Hd({euclideanNorm_:function(e,t=null,n=!1){return Zf(e,"euclidean",t,n)}}),jf=Hd({exp_:function(e){const t={x:Bd(e,"x","exp")};return Ad.runKernel(Dl,t)}}),Yf=Hd({expandDims_:function(e,t=0){const n=Bd(e,"x","expandDims","string_or_numeric");Wi(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Ad.runKernel(Ol,r,s)}}),Qf=Hd({expm1_:function(e){const t={x:Bd(e,"x","expm1")};return Ad.runKernel(Gl,t)}}),Jf=Hd({tile_:function(e,t){const n=Bd(e,"x","tile","string_or_numeric");Wi(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Ad.runKernel(Rc,r,s)}}),qf=Hd({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=qp([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Pm(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Jf(Yf(i,0),[n[0],1,1]);if(2===n.length)return Jf(Yf(Yf(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Jf(Yf(Yf(Yf(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),eg=Hd({floor_:function(e){const t={x:Bd(e,"x","floor","float32")};return Ad.runKernel(Vl,t)}}),tg=Hd({gather_:function(e,t,n=0,r=0){const s={x:Bd(e,"x","gather"),indices:Bd(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Ad.runKernel(Xl,s,a)}}),ng=Hd({greater_:function(e,t){let n=Bd(e,"a","greater","string_or_numeric"),r=Bd(t,"b","greater","string_or_numeric");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(Hl,s)}}),rg=Hd({greaterEqual_:function(e,t){let n=Bd(e,"a","greaterEqual","string_or_numeric"),r=Bd(t,"b","greaterEqual","string_or_numeric");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(Zl,s)}}),sg=Hd({imag_:function(e){const t={input:Bd(e,"input","imag")};return Ad.runKernel(Yl,t)}}),ag=Hd({isFinite_:function(e){const t={x:Bd(e,"x","isFinite")};return Ad.runKernel(Ql,t)}}),ig=Hd({isInf_:function(e){const t={x:Bd(e,"x","isInf")};return Ad.runKernel(Jl,t)}}),og=Hd({isNaN_:function(e){const t={x:Bd(e,"x","isNaN")};return Ad.runKernel(ql,t)}}),lg=Hd({leakyRelu_:function(e,t=.2){const n={x:Bd(e,"x","leakyRelu")},r={alpha:t};return Ad.runKernel(eu,n,r)}}),ug=Hd({less_:function(e,t){let n=Bd(e,"a","less","string_or_numeric"),r=Bd(t,"b","less","string_or_numeric");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(tu,s)}}),cg=Hd({lessEqual_:function(e,t){let n=Bd(e,"a","lessEqual","string_or_numeric"),r=Bd(t,"b","lessEqual","string_or_numeric");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(nu,s)}}),hg=Hd({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Bd(e,"x","localResponseNormalization");Wi(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Wi(Hi(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Pm(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Ad.runKernel(cu,l,u);return o?Pm(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),dg=Hd({log_:function(e){const t={x:Bd(e,"x","log","float32")};return Ad.runKernel(su,t)}}),pg=Hd({log1p_:function(e){const t={x:Bd(e,"x","log1p")};return Ad.runKernel(au,t)}});function mg(e,t){Wi(co(e),(()=>"The f passed in variableGrads(f) must be a function")),Wi(null==t||Array.isArray(t)&&t.every((e=>e instanceof hd)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Ad.registeredVariables)t.push(Ad.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),Wi(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Ad.gradients(e,t,null,!0);Wi(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Wi(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function fg(e){return Ad.customGrad(e)}function gg(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}const yg=Hd({neg_:function(e){const t={x:Bd(e,"x","neg")};return Ad.runKernel(Cu,t)}}),bg=Hd({softplus_:function(e){const t={x:Bd(e,"x","softplus")};return Ad.runKernel(cc,t)}}),xg=Hd({logSigmoid_:function(e){const t=Bd(e,"x","logSigmoid");return fg((e=>({value:yg(bg(yg(e))),gradFunc:t=>im(t,Fm(yg(e)))})))(t)}}),vg=Hd({sub_:function(e,t){let n=Bd(e,"a","sub"),r=Bd(t,"b","sub");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel(Ec,s)}}),wg=Hd({logSoftmax_:function(e,t=-1){const n=Bd(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return fg(((e,n)=>{const r=Ff(e,t,!0),s=vg(e,r),a=vg(em(s,"float32"),dg($f(jf(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=jf(r);return vg(e,im($f(e,t,!0),s))}}}))(n)}}),Sg=Hd({logSumExp_:function(e,t=null,n=!1){const r=Bd(e,"x","logSumExp"),s=Qi(t,r.shape),a=Ff(r,s,!0),i=vg(r,a),o=jf(i),l=$f(o,s),u=dg(l),c=rm(Pm(a,u.shape),u);if(n){const e=Pf(c.shape,s);return Pm(c,e)}return c}}),Tg=Hd({logicalAnd_:function(e,t){const n=Bd(e,"a","logicalAnd","bool"),r=Bd(t,"b","logicalAnd","bool");wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(iu,s)}}),_g=Hd({logicalNot_:function(e){const t={x:Bd(e,"x","logicalNot","bool")};return Ad.runKernel(ou,t)}}),Ig=Hd({logicalOr_:function(e,t){const n=Bd(e,"a","logicalOr","bool"),r=Bd(t,"b","logicalOr","bool");wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(lu,s)}}),Cg=Hd({logicalXor_:function(e,t){const n=Bd(e,"a","logicalXor","bool"),r=Bd(t,"b","logicalXor","bool");return wf(n.shape,r.shape),Tg(Ig(e,t),_g(Tg(e,t)))}}),Mg=Hd({maxPool_:function(e,t,n,r,s){const a=Bd(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Pm(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Wi(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Wi(km(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Am("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Ad.runKernel(mu,l,u);return o?Pm(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Eg=Hd({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Bd(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Pm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Wi(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Wi("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Am("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Ad.runKernel(gu,u,c);return l?Pm(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ng=Hd({maximum_:function(e,t){let n=Bd(e,"a","maximum"),r=Bd(t,"b","maximum");[n,r]=Td(n,r),"bool"===n.dtype&&(n=em(n,"int32"),r=em(r,"int32")),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(pu,s)}}),kg=Hd({mean_:function(e,t=null,n=!1){const r={x:Bd(e,"x","mean")},s={axis:t,keepDims:n};return Ad.runKernel(xu,r,s)}});function Rg(e,t="float32"){if(vo(e),"complex64"===t){const t=Rg(e,"float32"),n=Rg(e,"float32");return Zd(t,n)}const n=bo(Bi(e),t);return Ad.makeTensor(n,e,t)}function Lg(e,t="float32"){if(vo(e),"complex64"===t){const t=Lg(e,"float32"),n=Rg(e,"float32");return Zd(t,n)}const n=yo(Bi(e),t);return Ad.makeTensor(n,e,t)}const Ag=Hd({minimum_:function(e,t){let n=Bd(e,"a","minimum"),r=Bd(t,"b","minimum");[n,r]=Td(n,r),"bool"===n.dtype&&(n=em(n,"int32"),r=em(r,"int32")),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(wu,s)}}),Pg=Hd({mirrorPad_:function(e,t,n){Wi("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Bd(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Wi(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Wi(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wi(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Ad.runKernel(Su,i,a)}}),Dg=Hd({mod_:function(e,t){let n=Bd(e,"a","mod"),r=Bd(t,"b","mod");[n,r]=Td(n,r);const s={a:n,b:r};return Ad.runKernel(Tu,s)}}),Og=Hd({moments_:function(e,t=null,n=!1){const r=Qi(t,(e=Bd(e,"x","moments")).shape),s=kg(e,r,n);let a=s.shape;n||(a=Pf(s.shape,r));const i=Xf(vg(em(e,"float32"),Pm(s,a)));return{mean:s,variance:kg(i,r,n)}}}),Gg=Hd({notEqual_:function(e,t){let n=Bd(e,"a","notEqual","string_or_numeric"),r=Bd(t,"b","notEqual","string_or_numeric");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(Mu,s)}}),zg=Hd({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Bd(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return Ad.runKernel(Lu,a,i)}}),Fg=Hd({onesLike_:function(e){const t={x:Bd(e,"x","onesLike")};return Ad.runKernel(Ru,t)}}),Wg=Hd({pad_:function(e,t,n=0){const r=Bd(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Ad.runKernel(Pu,a,s)}}),Vg=Hd({spaceToBatchND_:function(e,t,n){const r=Bd(e,"x","spaceToBatchND");Wi(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Wi(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Wi(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Ad.runKernel(pc,s,a)}}),Ug=Hd({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Bd(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Pm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Wi(km(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=vm(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[m,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],h,d),g=p?r:"valid",y=p?l:Vg(l,h,m),b=("avg"===n?()=>Dm(y,t,a,g,i):()=>Mg(y,t,a,g,i))(),x=p?b:Um(b,h,f);return u?Pm(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Bg=Hd({prelu_:function(e,t){const n={x:Bd(e,"x","prelu"),alpha:Bd(t,"alpha","prelu")};return Ad.runKernel(Ou,n)}}),Xg=Hd({prod_:function(e,t=null,n=!1){let r=Bd(e,"x","prod");"bool"===r.dtype&&(r=em(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Ad.runKernel(Gu,s,a)}});var $g={exports:{}};!function(e){!function(e,t){function n(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var s=new n(e),a=t&&t.state,i=s.next;return i.int32=function(){return 4294967296*s.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&r(a,s),i.state=function(){return r(s,{})}),i}t&&t.exports?t.exports=s:this.alea=s}(0,e)}($g);var Hg=$g.exports,Zg={exports:{}};!function(e){!function(e,t){function n(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var s=new n(e),a=t&&t.state,i=function(){return(s.next()>>>0)/4294967296};return i.double=function(){do{var e=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=s.next,i.quick=i,a&&("object"==typeof a&&r(a,s),i.state=function(){return r(s,{})}),i}t&&t.exports?t.exports=s:this.xor128=s}(0,e)}(Zg);var Kg=Zg.exports,jg={exports:{}};!function(e){!function(e,t){function n(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var s=new n(e),a=t&&t.state,i=function(){return(s.next()>>>0)/4294967296};return i.double=function(){do{var e=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=s.next,i.quick=i,a&&("object"==typeof a&&r(a,s),i.state=function(){return r(s,{})}),i}t&&t.exports?t.exports=s:this.xorwow=s}(0,e)}(jg);var Yg=jg.exports,Qg={exports:{}};!function(e){!function(e,t){function n(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var s=new n(e),a=t&&t.state,i=function(){return(s.next()>>>0)/4294967296};return i.double=function(){do{var e=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=s.next,i.quick=i,a&&(a.x&&r(a,s),i.state=function(){return r(s,{})}),i}t&&t.exports?t.exports=s:this.xorshift7=s}(0,e)}(Qg);var Jg=Qg.exports,qg={exports:{}};!function(e){!function(e,t){function n(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var s=new n(e),a=t&&t.state,i=function(){return(s.next()>>>0)/4294967296};return i.double=function(){do{var e=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=s.next,i.quick=i,a&&(a.X&&r(a,s),i.state=function(){return r(s,{})}),i}t&&t.exports?t.exports=s:this.xor4096=s}(0,e)}(qg);var ey=qg.exports,ty={exports:{}};!function(e){!function(e,t){function n(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var s=new n(e),a=t&&t.state,i=function(){return(s.next()>>>0)/4294967296};return i.double=function(){do{var e=((s.next()>>>11)+(s.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=s.next,i.quick=i,a&&("object"==typeof a&&r(a,s),i.state=function(){return r(s,{})}),i}t&&t.exports?t.exports=s:this.tychei=s}(0,e)}(ty);var ny=ty.exports,ry={exports:{}};const sy=rh(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));!function(e){!function(t,n,r){var s,a=256,i="random",o=r.pow(a,6),l=r.pow(2,52),u=2*l,c=255;function h(e,c,h){var y=[],b=f(m((c=1==c?{entropy:!0}:c||{}).entropy?[e,g(n)]:e??function(){try{var e;return s&&(e=s.randomBytes)?e=e(a):(e=new Uint8Array(a),(t.crypto||t.msCrypto).getRandomValues(e)),g(e)}catch{var r=t.navigator,i=r&&r.plugins;return[+new Date,t,i,t.screen,g(n)]}}(),3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*a,t*=a,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,f(g(x.S),n),(c.pass||h||function(e,t,n,s){return s&&(s.S&&p(s,x),e.state=function(){return p(x,{})}),n?(r[i]=e,t):e})(v,b,"global"in c?c.global:this==r,c.state)}function d(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);s<a;)o[s]=s++;for(s=0;s<a;s++)o[s]=o[i=c&i+e[s%n]+(t=o[s])],o[i]=t;(r.g=function(e){for(var t,n=0,s=r.i,i=r.j,o=r.S;e--;)t=o[s=c&s+1],n=n*a+o[c&(o[s]=o[i=c&i+t])+(o[i]=t)];return r.i=s,r.j=i,n})(a)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch{}return r.length?r:"string"==s?e:e+"\0"}function f(e,t){for(var n,r=e+"",s=0;s<r.length;)t[c&s]=c&(n^=19*t[c&s])+r.charCodeAt(s++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(f(r.random(),n),e.exports){e.exports=h;try{s=sy}catch{}}else r["seed"+i]=h}(typeof self<"u"?self:th,[],Math)}(ry);var ay=Hg,iy=Kg,oy=Yg,ly=Jg,uy=ey,cy=ny,hy=ry.exports;hy.alea=ay,hy.xor128=iy,hy.xorwow=oy,hy.xorshift7=ly,hy.xor4096=uy,hy.tychei=cy;var dy=hy;class py{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=dy.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class my{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=dy.alea(s.toString()),this.randn=new py(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class fy{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dy.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const gy=Hd({randomNormal_:function(e,t=0,n=1,r,s){if(vo(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new py(t,n,r,!1,s),i=qp(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),yy=Hd({randomUniform_:function(e,t=0,n=1,r="float32",s){vo(e);const a=qp(e,r),i=new fy(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function by(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Ad.runKernel(Vu,{},s)}const xy=Hd({real_:function(e){const t={input:Bd(e,"input","real")};return Ad.runKernel(Uu,t)}}),vy=Hd({reciprocal_:function(e){const t={x:Bd(e,"x","reciprocal")};return Ad.runKernel(Bu,t)}}),wy=Hd({relu_:function(e){const t={x:Bd(e,"x","relu")};return Ad.runKernel(Xu,t)}}),Sy=Hd({relu6_:function(e){const t={x:Bd(e,"x","relu6")};return Ad.runKernel(Yu,t)}}),Ty=Hd({reverse_:function(e,t){const n={x:Bd(e,"x","reverse")},r={dims:t};return Ad.runKernel(Qu,n,r)}}),_y=Hd({round_:function(e){const t={x:Bd(e,"x","round")};return Ad.runKernel(Ju,t)}}),Iy=Hd({rsqrt_:function(e){const t={x:Bd(e,"x","rsqrt","float32")};return Ad.runKernel(qu,t)}}),Cy=Hd({selu_:function(e){const t={x:Bd(e,"x","selu")};return Ad.runKernel(sc,t)}}),My=Hd({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Bd(e,"x","separableConv2d"),l=Bd(t,"depthwiseFilter","separableConv2d"),u=Bd(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Pm(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Wi(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Wi(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Wi(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Wi(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Wi(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];Wi(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const m=yf(c,l,r,s,i,a),f=rf(m,u,1,"valid",i);return h?Pm(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ey=Hd({sign_:function(e){const t={x:Bd(e,"x","sign")};return Ad.runKernel(lc,t)}}),Ny=Hd({sin_:function(e){const t={x:Bd(e,"x","sin","float32")};return Ad.runKernel(ic,t)}}),ky=Hd({sinh_:function(e){const t={x:Bd(e,"x","sinh")};return Ad.runKernel(oc,t)}}),Ry=Hd({slice1d_:function(e,t,n){const r=Bd(e,"x","slice1d");return Wi(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Wm(r,[t],[n])}}),Ly=Hd({slice2d_:function(e,t,n){const r=Bd(e,"x","slice2d");return Wi(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Wm(r,t,n)}}),Ay=Hd({slice3d_:function(e,t,n){const r=Bd(e,"x","slice3d");return Wi(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Wm(r,t,n)}}),Py=Hd({slice4d_:function(e,t,n){const r=Bd(e,"x","slice4d");return Wi(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Wm(r,t,n)}}),Dy=Hd({softmax_:function(e,t=-1){const n=Bd(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Ad.runKernel(fc,r,s)}}),Oy=Hd({fft_:function(e){Wi("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ad.runKernel(zl,t)}}),Gy=Hd({ifft_:function(e){Wi("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ad.runKernel(jl,t)}}),zy=Hd({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Pm(e,[n,t]);r=Gy(s)}else{const s=[n,2*(t-1)],a=Pm(xy(e),[n,t]),i=Pm(sg(e),[n,t]),o=Ty(Wm(a,[0,1],[n,t-2]),1),l=im(Ty(Wm(i,[0,1],[n,t-2]),1),Uf(-1)),u=Gm([a,o],1),c=Gm([i,l],1),h=Pm(Zd(u,c),[s[0],s[1]]);r=Gy(h)}if(r=xy(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Pm(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Fy=Hd({split_:function(e,t,n=0){const r={x:Bd(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Ad.runKernel(mc,r,s)}}),Wy=Hd({rfft_:function(e,t){Wi("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Wm(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Gm([e,Rg(r)],e.shape.length-1),n=t}else s=e;const a=If(s),i=Pm(Zd(s,a),[r,n]),o=Oy(i),l=Math.floor(n/2)+1,u=xy(o),c=sg(o),h=Fy(u,[l,n-l],u.shape.length-1),d=Fy(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Pm(Zd(h[0],d[0]),p)}}),Vy=Hd({squaredDifference_:function(e,t){let n=Bd(e,"a","squaredDifference"),r=Bd(t,"b","squaredDifference");[n,r]=Td(n,r),wf(n.shape,r.shape);const s={a:n,b:r};return Ad.runKernel(wc,s,{})}}),Uy=Hd({squeeze_:function(e,t){const n=Bd(e,"x","squeeze","string_or_numeric");return Pm(n,Ji(n.shape,t).newShape)}}),By=Hd({stack_:function(e,t=0){const n=Xd(e,"tensors","stack","string_or_numeric");Wi(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Wi(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Ad.runKernel(Au,r,s)}}),Xy=Hd({step_:function(e,t=0){const n={x:Bd(e,"x","step")},r={alpha:t};return Ad.runKernel(Fc,n,r)}}),$y=Hd({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:Bd(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ad.runKernel(_c,u,c)}}),Hy=Hd({tan_:function(e){const t={x:Bd(e,"x","tan","float32")};return Ad.runKernel(Nc,t)}});function Zy(e,t){Ui(e);const n=Wd(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Kd(e,null,n,t)}function Ky(e,t,n){if(Ui(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Wd(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Kd(e,t,r,n)}function jy(e,t,n){if(Ui(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Wd(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Kd(e,t,r,n)}function Yy(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Qy(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Yy(n,t,e)}function Jy(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:Bi(t.shape)/o,sliceSize:i,strides:[...po(n.slice(0,s)),1],outputSize:Bi(n)}}const qy=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:Jy,validateInput:Qy,validateUpdateShape:Yy},Symbol.toStringTag,{value:"Module"})),eb=Hd({topk_:function(e,t=1,n=!0){const r=Bd(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Ad.runKernel(Lc,a,i);return{values:o,indices:l}}}),tb=Hd({truncatedNormal_:function(e,t=0,n=1,r,s){if(vo(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new py(t,n,r,!0,s),i=qp(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),nb=Hd({unique_:function(e,t=0){const n=Bd(e,"x","unique","string_or_numeric");Wi(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Ad.runKernel(Dc,r,s);return{values:a,indices:i}}}),rb=Hd({unsortedSegmentSum_:function(e,t,n){const r=Bd(e,"x","unsortedSegmentSum"),s=Bd(t,"segmentIds","unsortedSegmentSum","int32");Wi(Hi(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Ad.runKernel(Gc,a,i)}}),sb=Hd({unstack_:function(e,t=0){const n=Bd(e,"x","unstack","string_or_numeric");Wi(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Ad.runKernel(Oc,r,s)}});function ab(e,t=!0,n,r){return Ad.makeVariable(e,t,n,r)}function ib(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=qp(e,"int32"),s=qp([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const ob=Hd({transpose_:function(e,t,n){const r=Bd(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Wi(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Wi(e>=0&&e<r.rank,(()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?ep((()=>{let e=xy(r),t=sg(r);return e=Ad.runKernel(Pc,{x:e},a),t=Ad.runKernel(Pc,{x:t},a),n&&(t=yg(t)),Zd(e,t)})):Ad.runKernel(Pc,s,a)}}),lb=Hd({dropout_:function(e,t,n,r){const s=Bd(e,"x","dropout");if(Wi("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Wi(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ud?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if($i(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=am(eg(rm(yy(a,0,1,"float32",r),i)),i);return im(s,o)}});function ub(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function cb(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Zy(s,"float32")}const hb=Hd({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Pm(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Pm(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Wi(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Wi(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Wi(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];Wi(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Wi(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Am("conv2dDerFilter",s,i);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Ad.runKernel(ul,h,d)}});function db(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return im(e,Xy(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function pb(e,t){let n=t;const r=vf(e.shape,t.shape);return r.length>0&&(n=$f(n,r)),Pm(n,e.shape)}function mb(e,t,n,r){if("linear"===t)return e;if("relu"===t)return wy(e);if("elu"===t)return Nf(e);if("relu6"===t)return Sy(e);if("prelu"===t)return Bg(e,n);if("leakyrelu"===t)return lg(e,r);if("sigmoid"===t)return Fm(e);throw new Error(`Unknown fused activation ${t}.`)}const fb=(e,t)=>!(e>0)||"linear"===t,gb=Hd({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===fb(Ad.state.gradientDepth,l)){Wi("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=rf(e,t,n,r,s,a,i);return null!=o&&(h=rm(h,o)),mb(h,l,u,c)}const h=Bd(e,"x","conv2d","float32"),d=Bd(t,"filter","conv2d","float32");let p=h,m=!1;3===h.rank&&(m=!0,p=Pm(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Wi(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),Wi(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Am("fused conv2d",r,i);const f="NHWC"===s?p.shape[3]:p.shape[1];Wi(d.shape[2]===f,(()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${d.shape[2]}.`)),Wi(km(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=Sm(p.shape,d.shape,n,a,r,i);let y,b;if(null!=o&&(y=Bd(o,"bias","fused conv2d"),[y]=Td(y,h),"NHWC"===s?wf(g.outShape,y.shape):(Wi(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),Wi(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(Wi(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Wi(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{wf(e,g.outShape)}catch{const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(t)}b=Bd(u,"prelu weights","fused conv2d")}const x=(e,t)=>{Wi("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=db(e,u,l);Wi(Nm(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const d=[af(o.shape,h,i,n,r),hb(o,h,i.shape,n,r)];if(null!=c){const e=pb(c,h);d.push(e)}return d},v={x:p,filter:d,bias:y,preluActivationWeights:b},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?fg(((e,t,n)=>{let r=Ad.runKernel(Bc,v,w);return n([t,e,r]),m&&(r=Pm(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(p,d):fg(((e,t,n,r)=>{let s=Ad.runKernel(Bc,v,w);return r([t,e,s,n]),m&&(s=Pm(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}))(p,d,y)}}),yb=Hd({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Pm(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Pm(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Ad.runKernel(Sl,u,c)}}),bb=Hd({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Pm(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Ad.runKernel(Tl,u,c);return l?Pm(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),xb=Hd({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===fb(Ad.state.gradientDepth,a)){let l=zm(e,t,n,r);return null!=s&&(l=rm(l,s)),mb(l,a,i,o)}let l=Bd(e,"a","fused matMul"),u=Bd(t,"b","fused matMul");[l,u]=Td(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),f=u.shape.slice(0,-2),g=Bi(m),y=Bi(f);Wi(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=wf(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,p]),x=Pm(l,n?[g,c,d]:[g,d,c]),v=Pm(u,r?[y,p,h]:[y,h,p]);let w,S;null!=s&&(w=Bd(s,"bias","fused matMul"),[w]=Td(w,l),wf(b,w.shape)),null!=i&&(S=Bd(i,"prelu weights","fused matMul"));const T=(e,t)=>{const[i,o,l,u]=t,c=db(Pm(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=zm(c,o,!1,!1),d=zm(c,i,!0,!1)):n&&!r?(h=zm(o,c,!1,!0),d=zm(i,c,!1,!1)):(h=zm(o,c,!0,!0),d=zm(c,i,!0,!0)):(h=zm(c,o,!1,!0),d=zm(i,c,!0,!1)),null!=s?[h,d,pb(u,c)]:[h,d]},_={a:x,b:v,bias:w,preluActivationWeights:S},I={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?fg(((e,t,n)=>{const r=Ad.runKernel(Uc,_,I);return n([e,t,r]),{value:Pm(r,b),gradFunc:T}}))(x,v):fg(((e,t,n,r)=>{const s=Ad.runKernel(Uc,_,I);return r([e,t,s,n]),{value:Pm(s,b),gradFunc:T}}))(x,v,w)}}),vb=Hd({hammingWindow_:function(e){return cb(e,.54,.46)}}),wb=Hd({hannWindow_:function(e){return cb(e,.5,.5)}}),Sb=Hd({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Wm(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Gm([Wm(e,a,t-r),Qm([r],s)]);i.push(o),a+=n}return 0===i.length?Ky([],[0,t]):Pm(Gm(i),[i.length,t])}}),Tb=Hd({stft_:function(e,t,n,r,s=wb){null==r&&(r=ub(t));const a=Sb(e,t,n),i=im(a,s(t));return Wy(i,r)}}),_b=Hd({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Bd(e,"image","cropAndResize"),o=Bd(t,"boxes","cropAndResize","float32"),l=Bd(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Wi(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Wi(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Wi(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Wi(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Wi(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Wi("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Ad.runKernel(bl,c,h)}}),Ib=Hd({flipLeftRight_:function(e){const t=Bd(e,"image","flipLeftRight","float32");Wi(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ad.runKernel(Wl,n,{})}}),Cb=Hd({grayscaleToRGB_:function(e){const t=Bd(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Wi(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Wi(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Jf(t,s)}}),Mb=Hd({rgbToGrayscale_:function(e){const t=Bd(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];Wi(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),Wi(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=em(t,"float32"),i=Zy([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Ef("ij,j->i",a,i);break;case 3:o=Ef("ijk,k->ij",a,i);break;case 4:o=Ef("ijkl,l->ijk",a,i);break;case 5:o=Ef("ijklm,m->ijkl",a,i);break;case 6:o=Ef("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Yf(o,-1),em(o,s)}}),Eb=Hd({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Bd(e,"image","rotateWithOffset","float32");Wi(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Ad.runKernel(Vc,a,i)}});function Nb(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),Wi(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Wi(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Wi(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Wi(1===t.rank,(()=>"scores must be a 1D tensor")),Wi(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Wi(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const kb=Hd({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Bd(e,"boxes","nonMaxSuppression","float32"),i=Bd(t,"scores","nonMaxSuppression","float32"),o=Nb(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Ad.runKernel(Eu,{boxes:a,scores:i},l)}});function Rb(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Lb)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Lb(e,t){return e>t?1:e<t?-1:0}function Ab(e,t,n,r,s){return Ob(e,t,n,r,s,0)}function Pb(e,t,n,r,s,a){return Ob(e,t,n,r,s,0,!1,a,!0)}function Db(e,t,n,r,s,a){return Ob(e,t,n,r,s,a,!0)}function Ob(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Fb);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Gb(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*zb(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Rb(u,t,Fb))}const p=h.length,m=n-p;o&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const f={selectedIndices:h};return i&&(f.selectedScores=d),l&&(f.validOutputs=p),f}function Gb(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),m=(h-u)*(d-c);if(p<=0||m<=0)return 0;const f=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(p+m-x)}function zb(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Fb(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Wb=Hd({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Bd(e,"boxes","nonMaxSuppression"),o=Bd(t,"scores","nonMaxSuppression"),l=Nb(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Ad.runKernel(ku,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Vb=Hd({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Bd(e,"boxes","nonMaxSuppression"),o=Bd(t,"scores","nonMaxSuppression"),l=Nb(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Ad.runKernel(Nu,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Ub=Hd({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Bd(e,"images","resizeBilinear");Wi(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Wi(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Wi(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Pm(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ad.runKernel(Ku,o,l);return i?Pm(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Bb=Hd({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Bd(e,"images","resizeNearestNeighbor");Wi(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Wi(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Wi("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Wi(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Pm(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ad.runKernel(Hu,o,l);return i?Pm(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Xb=Hd({threshold_:function(e,t="binary",n=!1,r=.5){const s=Bd(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=im(Zy([r]),255);if(Wi(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),Wi(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),Wi("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),Wi("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Fy(s,[1,1,1],-1);const e=im(i,.2989),t=im(o,.587),n=im(l,.114);u=rm(rm(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=Zy([-1]),u=Zy([0]),c=Zy([0]);for(let h=0;h<e.size-1;h++){n=Wm(e,0,h+1),r=Wm(e,h+1),i=am($f(n),t),o=am($f(r),t);const d=$f(im(n,by(0,n.size)));s=am(d,$f(n));const p=Qm(r.shape,n.size),m=rm(by(0,r.size),p),f=im(r,m);a=am($f(f),$f(r));const g=vg(s,a),y=vg(s,a),b=im(i,o);c=im(im(b,g),y);const x=ng(c,u);u=_f(x,c,u),l=_f(x,Zy([h]),l)}return l}(Km(em(_y(u),"int32"),jd([]),256),a));const h=n?cg(u,c):ng(u,c);return em(im(h,255),"int32")}}),$b=Hd({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Bd(e,"image","transform","float32"),o=Bd(t,"transforms","transform","float32");Wi(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Wi(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Wi(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Ad.runKernel(Ac,l,u)}}),Hb=Hd({bandPart_:function(e,t,n){const r=Bd(e,"a","bandPart");Wi(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"==typeof t?(Wi(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Wi(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=Bd(t<0?a:t,"numLower","bandPart")):(Wi("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=_f(ug(t,0),a,Ag(t,a))),"number"==typeof n?(Wi(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),Wi(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=Bd(n<0?i:n,"numUpper","bandPart")):(Wi("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=_f(ug(n,0),i,Ag(n,i)));const u=Pm(by(0,a,1,"int32"),[-1,1]),c=by(0,i,1,"int32"),h=vg(u,c),d=Tg(cg(h,o),rg(h,yg(l))),p=Rg([a,i],r.dtype);return Pm(By(sb(Pm(r,[-1,a,i])).map((e=>_f(d,e,p)))),s)}}),Zb=Hd({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Wi(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Wi(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Fy(e,e.shape[0],0).map((e=>Uy(e,[0])));Wi(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ad.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=im($f(im(n[r],e)),n[r]);e=vg(e,t)}return am(e,Zf(e,"euclidean"))})));return t?By(n,0):n}});function Kb(e,t=!1){return Ad.tidy((()=>{Wi(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=qf(n),a=tm(e);const i=Ky([[1]],[1,1]);let o=tm(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Ad.tidy((()=>{const t=Wm(a,[e,e],[n-e,1]),l=Zf(t),u=Wm(a,[e,e],[1,1]),c=_f(ng(u,0),Ky([[-1]]),Ky([[1]])),h=vg(u,im(c,l)),d=am(t,h);o=1===d.shape[0]?tm(i):Gm([i,Wm(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=yg(am(zm(c,h),l)),m=Wm(a,[e,0],[n-e,r]),f=im(p,o),g=ob(o);if(0===e)a=vg(m,zm(f,zm(g,m)));else{const t=vg(m,zm(f,zm(g,m)));a=Gm([Wm(a,[0,0],[e,r]),t],0)}const y=ob(f),b=Wm(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=vg(b,zm(zm(b,o),y));else{const t=vg(b,zm(zm(b,o),y));s=Gm([Wm(s,[0,0],[n,e]),t],1)}return[o,a,s]})),tp([t,l,u])}return!t&&n>r&&(s=Wm(s,[0,0],[n,r]),a=Wm(a,[0,0],[r,r])),[s,a]}))}const jb=Hd({qr_:function(e,t=!1){if(Wi(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kb(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=sb(Pm(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Kb(e,t);s.push(n),a.push(r)})),[Pm(By(s,0),e.shape),Pm(By(a,0),e.shape)]}}});var Yb;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Yb||(Yb={}));const Qb=Hd({computeWeightedLoss_:function(e,t,n=Yb.SUM_BY_NONZERO_WEIGHTS){const r=Bd(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Bd(t,"weights","computeWeightedLoss"));const a=null==s?r:im(r,s);if(n===Yb.NONE)return a;if(n===Yb.SUM)return $f(a);if(n===Yb.MEAN){if(null==s)return kg(a);{const e=r.size/s.size,t=am($f(a),$f(s));return e>1?am(t,Uf(e)):t}}if(n===Yb.SUM_BY_NONZERO_WEIGHTS){if(null==s)return am($f(a),Uf(r.size));{const e=im(s,Lg(r.shape)),t=em($f(Gg(e,Uf(0))),"float32");return am($f(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),Jb=Hd({absoluteDifference_:function(e,t,n,r=Yb.SUM_BY_NONZERO_WEIGHTS){const s=Bd(e,"labels","absoluteDifference"),a=Bd(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Bd(n,"weights","absoluteDifference")),Vi(s.shape,a.shape,"Error in absoluteDifference: ");const o=om(vg(s,a));return Qb(o,i,r)}}),qb=Hd({cosineDistance_:function(e,t,n,r,s=Yb.SUM_BY_NONZERO_WEIGHTS){const a=Bd(e,"labels","cosineDistance"),i=Bd(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Bd(r,"weights","cosineDistance")),Vi(a.shape,i.shape,"Error in cosineDistance: ");const l=Uf(1),u=vg(l,$f(im(a,i),n,!0));return Qb(u,o,s)}}),ex=Hd({hingeLoss_:function(e,t,n,r=Yb.SUM_BY_NONZERO_WEIGHTS){let s=Bd(e,"labels","hingeLoss");const a=Bd(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Bd(n,"weights","hingeLoss")),Vi(s.shape,a.shape,"Error in hingeLoss: ");const o=Uf(1);s=vg(im(Uf(2),s),o);const l=wy(vg(o,im(s,a)));return Qb(l,i,r)}}),tx=Hd({huberLoss_:function(e,t,n,r=1,s=Yb.SUM_BY_NONZERO_WEIGHTS){const a=Bd(e,"labels","huberLoss"),i=Bd(t,"predictions","huberLoss");let o=null;null!=n&&(o=Bd(n,"weights","huberLoss")),Vi(a.shape,i.shape,"Error in huberLoss: ");const l=Uf(r),u=om(vg(i,a)),c=Ag(u,l),h=vg(u,c),d=rm(im(Uf(.5),Xf(c)),im(l,h));return Qb(d,o,s)}}),nx=Hd({logLoss_:function(e,t,n,r=1e-7,s=Yb.SUM_BY_NONZERO_WEIGHTS){const a=Bd(e,"labels","logLoss"),i=Bd(t,"predictions","logLoss");let o=null;null!=n&&(o=Bd(n,"weights","logLoss")),Vi(a.shape,i.shape,"Error in logLoss: ");const l=Uf(1),u=Uf(r),c=yg(im(a,dg(rm(i,u)))),h=im(vg(l,a),dg(rm(vg(l,i),u))),d=vg(c,h);return Qb(d,o,s)}}),rx=Hd({meanSquaredError_:function(e,t,n,r=Yb.SUM_BY_NONZERO_WEIGHTS){const s=Bd(e,"labels","meanSquaredError"),a=Bd(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Bd(n,"weights","meanSquaredError")),Vi(s.shape,a.shape,"Error in meanSquaredError: ");const o=Vy(s,a);return Qb(o,i,r)}}),sx=Hd({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Yb.SUM_BY_NONZERO_WEIGHTS){let a=Bd(e,"multiClassLabels","sigmoidCrossEntropy");const i=Bd(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Bd(n,"weights","sigmoidCrossEntropy")),Vi(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Uf(r),t=Uf(1),n=Uf(.5);a=rm(im(a,vg(t,e)),im(n,e))}const l=function(e,t){const n=Bd(e,"labels","sigmoidCrossEntropyWithLogits"),r=Bd(t,"logits","sigmoidCrossEntropyWithLogits");Vi(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=wy(r),a=im(r,n),i=pg(jf(yg(om(r))));return rm(vg(s,a),i)}(a,i);return Qb(l,o,s)}}),ax=Hd({softmaxCrossEntropy_:function(e,t,n,r=0,s=Yb.SUM_BY_NONZERO_WEIGHTS){let a=Bd(e,"onehotLabels","softmaxCrossEntropy");const i=Bd(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Bd(n,"weights","softmaxCrossEntropy")),Vi(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Uf(r),t=Uf(1),n=Uf(a.shape[1]);a=rm(im(a,vg(t,e)),am(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return fg(((e,t,r)=>{const s=Sg(t,[n],!0),a=vg(em(t,"float32"),s);r([e,a]);const i=yg(im(a,e));return{value:$f(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Pf(e.shape,[n]);return[im(Pm(e,a),vg(em(r,"float32"),jf(s))),im(Pm(e,a),vg(jf(s),em(r,"float32")))]}}}))(e,t)}(a,i);return Qb(l,o,s)}}),ix=Hd({sparseFillEmptyRows_:function(e,t,n,r){const s=Bd(e,"indices","sparseFillEmptyRows","int32"),a=Bd(t,"values","sparseFillEmptyRows"),i=Bd(n,"denseShape","sparseFillEmptyRows","int32"),o=Bd(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=Ad.runKernel(gc,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),ox=Hd({sparseReshape_:function(e,t,n){const r=Bd(e,"inputIndices","sparseReshape","int32"),s=Bd(t,"inputShape","sparseReshape","int32"),a=Bd(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Ad.runKernel(yc,i);return{outputIndices:o[0],outputShape:o[1]}}}),lx=Hd({sparseSegmentMean_:function(e,t,n){const r=Bd(e,"data","sparseSegmentMean"),s=Bd(t,"indices","sparseSegmentMean","int32"),a=Bd(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Ad.runKernel(bc,i)}}),ux=Hd({sparseSegmentSum_:function(e,t,n){const r=Bd(e,"data","sparseSegmentSum"),s=Bd(t,"indices","sparseSegmentSum","int32"),a=Bd(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return Ad.runKernel(xc,i)}}),cx=Hd({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=Bd(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Bd(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=Ad.runKernel(Ic,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),hx=Hd({stringSplit_:function(e,t,n=!0){const r=Bd(e,"input","stringSplit","string"),s=Bd(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=Ad.runKernel(Cc,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),dx=Hd({stringToHashBucketFast_:function(e,t){const n=Bd(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Ad.runKernel(Mc,s,r)}}),px=Hd({staticRegexReplace_:function(e,t,n,r=!0){const s=Bd(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return Ad.runKernel(Tc,{x:s},a)}}),mx={fft:Oy,ifft:Gy,rfft:Wy,irfft:zy},fx={hammingWindow:vb,hannWindow:wb,frame:Sb,stft:Tb},gx={flipLeftRight:Ib,grayscaleToRGB:Cb,resizeNearestNeighbor:Bb,resizeBilinear:Ub,rgbToGrayscale:Mb,rotateWithOffset:Eb,cropAndResize:_b,nonMaxSuppression:kb,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Bd(e,"boxes","nonMaxSuppressionAsync"),i=Bd(t,"scores","nonMaxSuppressionAsync"),o=Nb(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Ab(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Zy(h,"int32")},nonMaxSuppressionWithScore:Wb,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Bd(e,"boxes","nonMaxSuppressionAsync"),o=Bd(t,"scores","nonMaxSuppressionAsync"),l=Nb(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Db(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Zy(d,"int32"),selectedScores:Zy(p)}},nonMaxSuppressionPadded:Vb,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Bd(e,"boxes","nonMaxSuppressionAsync"),o=Bd(t,"scores","nonMaxSuppressionAsync"),l=Nb(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=Pb(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Zy(m,"int32"),validOutputs:Uf(f,"int32")}},threshold:Xb,transform:$b},yx={bandPart:Hb,gramSchmidt:Zb,qr:jb},bx={absoluteDifference:Jb,computeWeightedLoss:Qb,cosineDistance:qb,hingeLoss:ex,huberLoss:tx,logLoss:nx,meanSquaredError:rx,sigmoidCrossEntropy:sx,softmaxCrossEntropy:ax},xx={sparseFillEmptyRows:ix,sparseReshape:ox,sparseSegmentMean:lx,sparseSegmentSum:ux},vx={stringNGrams:cx,stringSplit:hx,stringToHashBucketFast:dx,staticRegexReplace:px},wx=new Map,Sx=new Map;class Tx{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class _x{constructor(){this.classNameMap={}}static getMap(){return null==_x.instance&&(_x.instance=new _x),_x.instance}static register(e){_x.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ix(e,t,n){Wi(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Wi("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Wi(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),typeof t>"u"&&(t="Custom"),typeof n>"u"&&(n=e.className);const r=t+">"+n;return _x.register(e),wx.set(r,e),Sx.set(e,r),e}const Cx=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Tx,SerializationMap:_x,getRegisteredName:function(e){return Sx.has(e)?Sx.get(e):e.className},registerClass:Ix},Symbol.toStringTag,{value:"Module"}));class Mx extends Tx{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return tp(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return mg(e,t)}dispose(){null!=this.iterations_&&tp(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Uf(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Mx,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ex extends Mx{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ad.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ad.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ep((()=>If(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ep((()=>If(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;ep((()=>{const e=rm(im(i,this.rho),im(Xf(a),1-this.rho)),t=im(am(Bf(rm(o,this.epsilon)),Bf(rm(i,this.epsilon))),a),n=rm(im(o,this.rho),im(Xf(t),1-this.rho));i.assign(e),o.assign(n);const s=rm(im(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(tp(this.accumulatedGrads.map((e=>e.variable))),tp(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}class Nx extends Mx{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ad.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ep((()=>Qm(r.shape,this.initialAccumulatorValue).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;ep((()=>{const e=rm(a,Xf(s));a.assign(e);const t=rm(im(am(s,Bf(rm(e,Ad.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&tp(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}class kx extends Mx{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ep((()=>{this.accBeta1=Uf(t).variable(),this.accBeta2=Uf(n).variable()})),null==r&&(this.epsilon=Ad.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ep((()=>{const n=vg(1,this.accBeta1),r=vg(1,this.accBeta2);t.forEach(((t,s)=>{const a=Ad.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ep((()=>If(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:ep((()=>If(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=rm(im(l,this.beta1),im(o,1-this.beta1)),h=rm(im(u,this.beta2),im(Xf(o),1-this.beta2)),d=am(c,n),p=am(h,r);l.assign(c),u.assign(h);const m=rm(im(am(d,rm(Bf(p),this.epsilon)),-this.learningRate),a);a.assign(m)})),this.accBeta1.assign(im(this.accBeta1,this.beta1)),this.accBeta2.assign(im(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&tp(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&tp(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ep((()=>{this.accBeta1.assign(Vf(this.beta1,this.iterations_+1)),this.accBeta2.assign(Vf(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}class Rx extends Mx{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ep((()=>{this.iteration=Uf(0).variable(),this.accBeta1=Uf(t).variable()})),null==r&&(this.epsilon=Ad.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ep((()=>{const n=vg(1,this.accBeta1),r=am(-this.learningRate,rm(im(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Ad.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:If(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:If(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=rm(im(l,this.beta1),im(o,1-this.beta1)),h=im(u,this.beta2),d=om(o),p=Ng(h,d);l.assign(c),u.assign(p);const m=rm(im(am(r,n),am(c,rm(p,this.epsilon))),a);a.assign(m)})),this.iteration.assign(rm(this.iteration,1)),this.accBeta1.assign(im(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&tp(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&tp(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Lx extends Mx{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Ad.registeredVariables[t];ep((()=>{const e=rm(im(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=np(Uf(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ax extends Lx{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Uf(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ad.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:ep((()=>If(r).variable(!1)))});const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&ep((()=>{let e;const t=rm(im(this.m,s),a);e=this.useNesterov?rm(im(this.c,rm(a,im(t,this.m))),r):rm(im(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&tp(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Px extends Mx{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Ad.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ad.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ep((()=>If(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ep((()=>If(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ep((()=>If(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ep((()=>{const e=rm(im(i,this.decay),im(Xf(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=rm(im(t,this.decay),im(a,1-this.decay)),l=am(im(a,this.learningRate),Bf(vg(e,rm(Xf(s),this.epsilon)))),u=rm(im(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=vg(r,u);r.assign(c)}else{const e=rm(im(i,this.decay),im(Xf(a),1-this.decay)),t=rm(im(o,this.momentum),am(im(a,this.learningRate),Bf(rm(e,this.epsilon))));i.assign(e),o.assign(t);const n=vg(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&tp(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&tp(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&tp(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Dx=[Ex,Nx,kx,Rx,Ax,Px,Lx];function Ox(e,t,n,r){var s;Wi(null!=(s=e)&&Array.isArray(s)&&s.length>0,(()=>"promises must be a none empty array")),function(e,t){Wi(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Wi(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Wi(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=n??0,r=r??1);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Gx(e,t){null==t&&(t={});const n=null==t.fetchFunc?Mo().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Ox(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Ox(s,t.onProgress,.5,1)}async function zx(e,t="",n,r){return Fx((e=>Gx(e,{requestInit:r})))(e,t,n)}function Fx(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Yd[l]*Bi(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length,r=new Qd(c.slice(d,d+n));a[e].forEach((e=>{const t=op(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}class Wx{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Wi("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Mo().platform.fetch,Wi(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Wi(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=bp(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Qd.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:wp(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():vp(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Sp(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?Mo().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){s||(s=(await r(e[a],t.requestInit,{isBinary:!0})).body.getReader());const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[Sp(e),await Gx(t,this.loadOptions)]}}function Vx(e){return null!=e.match(Wx.URL_SCHEME_REGEX)}Wx.URL_SCHEME_REGEX=/^https?:\/\//;const Ux=(e,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Vx(e))):Vx(e),n)return Bx(e,t)}return null};function Bx(e,t){return new Wx(e,t)}function Xx(e,t){return Bx(e,t)}Tp.registerSaveRouter(Ux),Tp.registerLoadRouter(Ux);let $x,Hx=!1;function Zx(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Kc(Wc,Ad.backendName)){const n={pixels:e},r={numChannels:t};return Ad.runKernel(Wc,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==$x)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");$x=new OffscreenCanvas(1,1).getContext("2d")}else $x=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});$x.canvas.width=l,$x.canvas.height=u,$x.drawImage(e,0,0,l,u),c=$x.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return jy(h,[u,l,t],"int32")}function Kx(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}const jx=Hd({fromPixels_:Zx}),Yx=Object.freeze(Object.defineProperty({__proto__:null,draw:function(e,t,n){let r=Bd(e,"img","draw");if(!(e instanceof ud)){const e=r;r=em(e,"int32"),e.dispose()}Kx(r),function(e){const t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);const s={image:r},a={canvas:t,options:n};Ad.runKernel(El,s,a)},fromPixels:jx,fromPixelsAsync:async function(e,t=3){let n=null;if(Mo().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Zx(n,t)},toPixels:async function(e,t){let n=Bd(e,"img","toPixels");if(!(e instanceof ud)){const e=n;n=em(e,"int32"),e.dispose()}Kx(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){Hx||null!=Kc(El,Ad.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Hx=!0),t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}},Symbol.toStringTag,{value:"Module"}));function Qx(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Bi(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...po(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}const Jx=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Qx},Symbol.toStringTag,{value:"Module"}));function qx(e,t,n){const r=e.shape.length;Wi(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Wi(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Wi(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function ev(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function tv(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function nv(e,t,n){return n<=e?n:n-(t-1)}function rv(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function sv(e,t,n,r,s){const a=[...s],i=rv(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=nv(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function av(e,t,n,r,s){const a=[...s],i=rv(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=nv(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=Oi(0,a[e],s[e])}return a}function iv(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ov(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=Oi(0,i,l-1),i}function lv(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?Oi(0,i,l):Oi(-1,i,l-1),i}function uv(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function cv(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function hv(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Wi(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Wi(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function dv(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,m=!0,f=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=pv(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=pv(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,m=m&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,m=m&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==d.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:m,isSimpleSlice:f,begin:d.begin,end:d.end,strides:d.strides}}function pv(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const mv=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:qx,computeFlatOffset:cv,computeOutShape:ev,getNormalizedAxes:function(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=sv(i,l,u,r,e),h=av(o,l,u,s,e),d=tv(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=ov(i,r,a,e,t,l),h[t]=lv(o,s,a,e,t,l),d[t]=iv(a,t,l);return{begin:c,end:h,strides:d}},isSliceContinous:uv,maskToAxes:function(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t},parseSliceParams:hv,sliceInfo:dv,startForAxis:ov,startIndicesWithElidedDims:sv,stopForAxis:lv,stopIndicesWithElidedDims:av,stridesForAxis:iv,stridesWithElidedDims:tv},Symbol.toStringTag,{value:"Module"}));class fv{static sgd(e){return new Lx(e)}static momentum(e,t,n=!1){return new Ax(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Px(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new kx(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ex(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Rx(e,t,n,r,s)}static adagrad(e,t=.1){return new Nx(e,t)}}const gv=fv,yv=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function bv(){return new Promise((e=>yv((()=>e()))))}function xv(e,t){const n=e[0].length;e.forEach(((e,t)=>{Wi(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Wi(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)Wi(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function vv(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var wv;function Sv(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Tv(e){const t={FIRST_DIM_SIZE:wv.FIRST_DIM_SIZE,VALUE_ROWIDS:wv.VALUE_ROWIDS,ROW_LENGTHS:wv.ROW_LENGTHS,ROW_SPLITS:wv.ROW_SPLITS,ROW_LIMITS:wv.ROW_LIMITS,ROW_STARTS:wv.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function _v(e){return 0===e.length?0:e[0]===wv.FIRST_DIM_SIZE?e.length-1:e.length}function Iv(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}function Cv(e){return e<=30?e:ho(e,Math.floor(Math.sqrt(e)))}function Mv(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ev(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Nv(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function kv(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Rv(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Lv(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(wv||(wv={}));const Av=1.7580993408473768,Pv=1.0507009873554805,Dv=.3275911,Ov=.254829592,Gv=-.284496736,zv=1.421413741,Fv=-1.453152027,Wv=1.061405429;function Vv(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Uv(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Bv(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Xv(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function $v(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Hv(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Zv(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Kv(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const jv=/->/g;function Yv(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(jv,"").length)/2;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");Wi(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Qv(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Jv(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:Wi(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function qv(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=tw(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function ew(e){return e.every(((e,t)=>e===t))}function tw(e,t){const n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function nw(e,t,n=0){let r=[];if("number"==typeof t)Wi(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Wi(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Wi(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function rw(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function sw(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function aw(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function iw(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function ow(e,t){return`size ${e} must be non-negative, not ${t}`}function lw(e,t){return`Input to reshape is a SparseTensor with ${Bi(e)}\n  dense values, but the requested shape requires a multiple of ${Bi(t)}. inputShape=${e} outputShape= ${t}`}function uw(e,t){return`Input to reshape is a tensor with ${Bi(e)} dense values, but the requested shape has ${Bi(t)}. inputShape=${e} outputShape=${t}`}function cw(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function hw(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function dw(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=ho(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ho(e,n+1);return n}function pw(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function mw(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}const fw=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:mw,computeOutShape:pw,segOpComputeOptimalWindowSize:dw},Symbol.toStringTag,{value:"Module"}));function gw(e){try{return e.map((e=>Kh(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function yw(e){return e.map((e=>Zh(e)))}const bw=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Ov,ERF_A2:Gv,ERF_A3:zv,ERF_A4:Fv,ERF_A5:Wv,ERF_P:Dv,PARALLELIZE_THRESHOLD:30,get RowPartitionType(){return wv},SELU_SCALE:Pv,SELU_SCALEALPHA:Av,applyActivation:mb,assertAndGetBroadcastShape:wf,assertAxesAreInnerMostDims:Df,assertParamsConsistent:xv,assignToTypedArray:Hv,axesAreInnerMostDims:Rf,calculateShapes:Jy,checkEinsumDimSizes:Jv,checkPadOnDimRoundingMode:Am,combineLocations:Lf,combineRaggedTensorToTensorShapes:Sv,complexWithEvenIndex:Bv,complexWithOddIndex:Xv,computeConv2DInfo:Sm,computeConv3DInfo:Tm,computeDefaultPad:_m,computeDilation2DInfo:xm,computeOptimalWindowSize:Cv,computeOutAndReduceShapes:Af,computeOutShape:vv,computePool2DInfo:vm,computePool3DInfo:wm,convertConv2DDataFormat:Lm,decodeEinsumEquation:Yv,eitherStridesOrDilationsAreOne:km,expandShapeToKeepDim:Pf,exponent:Kv,exponents:Zv,fromStringArrayToUint8:yw,fromUint8ToStringArray:gw,getAxesPermutation:Of,getBroadcastDims:xf,getComplexWithIndex:$v,getEinsumComputePath:qv,getEinsumPermutation:Qv,getFusedBiasGradient:pb,getFusedDyActivation:db,getImageCenter:Mv,getInnerMostAxes:zf,getPermuted:Nv,getRaggedRank:_v,getReductionAxes:vf,getReshaped:Ev,getReshapedPermuted:kv,getRowPartitionTypesHelper:Tv,getSliceBeginCoords:Rv,getSliceSize:Lv,getSparseFillEmptyRowsIndicesDenseShapeMismatch:rw,getSparseFillEmptyRowsNegativeIndexErrorMessage:sw,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:aw,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"},getSparseReshapeInputOutputMismatchErrorMessage:uw,getSparseReshapeInputOutputMultipleErrorMessage:lw,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:iw,getSparseReshapeNegativeOutputDimErrorMessage:ow,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:hw,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return"segment ids must be >= 0"},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return"segment ids are not increasing"},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:cw,getUndoAxesPermutation:Gf,isIdentityPermutation:ew,log:function(...e){Mo().getBool("IS_TEST")||Mo().getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:Vv,prepareAndValidate:Qx,prepareSplitSize:nw,segment_util:fw,shouldFuse:fb,slice_util:mv,splitRealAndImagArrays:Uv,stridesOrDilationsArePositive:Rm,tupleValuesAreOne:Nm,upcastType:xd,validateDefaultValueShape:Iv,validateInput:Qy,validateUpdateShape:Yy,warn:$c},Symbol.toStringTag,{value:"Module"}));!function(){for(const e of Dx)Ix(e)}();const xw={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,Xy(em(n,"float32"),-1))}}},vw={kernelName:Ao,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Xf(em(n,"float32")),r=Bf(vg(Uf(1),t));return yg(am(e,r))}}}},ww={kernelName:Po,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bf(vg(Xf(em(n,"float32")),1));return am(e,t)}}}},Sw={kernelName:Do,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{let t=e;const r=vf(n.shape,s);return r.length>0&&(t=$f(t,r)),Pm(t,n.shape)},b:()=>{let t=e;const n=vf(r.shape,s);return n.length>0&&(t=$f(t,n)),Pm(t,r.shape)}}}},Tw={kernelName:Oo,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},_w={kernelName:Fo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>If(n)}}},Iw={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>If(n)}}},Cw={kernelName:Vo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,Bf(vg(Uf(1),Xf(em(n,"float32")))))}}},Mw={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bf(rm(Uf(1),Xf(em(n,"float32"))));return am(e,t)}}}},Ew={kernelName:$o,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{const t=rm(Xf(n),Xf(r));let a=im(e,am(r,t));const i=vf(n.shape,s);return i.length>0&&(a=$f(a,i)),Pm(a,n.shape)},b:()=>{const t=rm(Xf(n),Xf(r));let a=yg(im(e,am(n,t)));const i=vf(r.shape,s);return i.length>0&&(a=$f(a,i)),Pm(a,r.shape)}}}},Nw={kernelName:Bo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,rm(Xf(em(n,"float32")),1))}}},kw={kernelName:Xo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,vg(Uf(1),Xf(em(n,"float32"))))}}},Rw=Hd({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Bd(e,"dy","avgPool3dGrad"),o=Bd(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Pm(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Pm(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Wi(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Wi(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Am("avgPool3dGrad",s,a);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Ad.runKernel(jo,h,d);return c?Pm(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Lw={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Rw(e,r,s,a,i,o)}}},Aw=Hd({avgPoolGrad_:function(e,t,n,r,s){const a=Bd(e,"dy","avgPoolGrad"),i=Bd(t,"input","avgPoolGrad");Wi(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Pm(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Pm(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Wi(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Wi(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Ad.runKernel(Zo,c,h);return u?Pm(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Pw={kernelName:Ho,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Aw(e,r,s,a,i)}}},Dw={kernelName:Yo,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>zm(e,s,!1,!1),b:()=>zm(e,r,!0,!1)}:a&&!i?{a:()=>zm(s,e,!1,!0),b:()=>zm(r,e,!1,!1)}:{a:()=>zm(s,e,!0,!0),b:()=>zm(e,r,!0,!0)}:{a:()=>zm(e,s,!1,!0),b:()=>zm(r,e,!0,!1)}}},Ow={kernelName:Qo,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Vg(e,r,s)}}},Gw={kernelName:el,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>$f(e,o,!0)}}},zw={kernelName:nl,gradFunc:e=>({x:()=>e.clone()})},Fw={kernelName:rl,gradFunc:e=>({x:()=>If(e)})},Ww={kernelName:sl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>_f(Tg(rg(r,s),cg(r,a)),e,If(e))}}},Vw={kernelName:il,inputsToSave:["x"],gradFunc:xw.gradFunc},Uw={kernelName:ol,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=Qi(s,t[0].shape)[0],i=r.map((e=>e[a]));return Fy(e,i,a).map((e=>()=>e))}},Bw={kernelName:ll,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return Wi(Nm(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>af(r.shape,e,s,i,o,l),filter:()=>hb(r,e,s.shape,i,o,l)}}},Xw={kernelName:cl,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>rf(e,s,a,i,o,1,l),filter:()=>hb(e,r,s.shape,a,i,o,l)}}},$w=Hd({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Pm(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Pm(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Wi(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Wi(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Wi(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Wi(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Wi(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Ad.runKernel(dl,o,l)}}),Hw={kernelName:hl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;Wi(Nm(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>uf(i.shape,e,o,s,a),filter:()=>$w(i,e,o.shape,s,a)}}},Zw={kernelName:ml,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(yg(Ny(em(n,"float32"))),e)}}},Kw={kernelName:fl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(ky(em(n,"float32")),e)}}},jw={kernelName:yl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Of([s],r.rank);let n=mf(e,s,a,!i);return null!=t&&(n=ob(n,t)),n}}}},Yw={kernelName:wl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=r??[1,1];Wi(Nm(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return Wi(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Wi(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Wi(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Wi(km(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Am("depthwiseConv2d",a,i),{x:()=>bb(l.shape,e,u,s,a,o,i),filter:()=>yb(l,e,u.shape,s,a,o,i)}}},Qw={kernelName:Il,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Ad.runKernel(Cl,a,n),filter:()=>Ad.runKernel(Ml,i,n)}}},Jw={kernelName:Rl,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Ad.runKernel(Ll,r)}}},qw={kernelName:Al,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=im(jf(yg(Xf(n))),2/Math.sqrt(Math.PI));return{x:()=>im(e,r)}}},eS={kernelName:Dl,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,n)}}},tS={kernelName:Ol,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Pm(e,n.shape)}}},nS={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,jf(n))}}},rS={kernelName:Vl,gradFunc:e=>({x:()=>If(e)})},sS={kernelName:Ul,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{const t=am(e,em(r,"float32")),a=vf(n.shape,s);return a.length>0?Pm($f(t,a),n.shape):t},b:()=>{let t=im(e,em(n,"float32"));const a=vf(r.shape,s);a.length>0&&(t=Pm($f(t,a),r.shape));const i=Xf(r);return yg(am(t,em(i,"float32")))}}}},aS={kernelName:Bl,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=o??Uf(1),u=vf(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=vg(s,a),d=im(e,l),p=Iy(rm(i,Uf(r))),m=im(im(im(p,p),p),Uf(-.5));return{x:()=>1===a.rank?Pm(im(im(e,Jf(Pm(p,[1,1,1,a.shape[0]]),c)),l),s.shape):Pm(im(im(e,p),l),s.shape),mean:()=>{let e=im(im(p,Uf(-1)),d);return 1===a.rank&&(e=$f(e,u)),Pm(e,a.shape)},variance:()=>{let e=im(im(m,h),d);return 1===a.rank&&(e=$f(e,u)),Pm(e,a.shape)},scale:()=>{const t=im(h,p);let n=im(e,t);return 1===a.rank&&(n=$f(n,u)),Pm(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=$f(t,u)),Pm(t,a.shape)}}}},iS={kernelName:Xl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=Qi(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,h=oS(0,l),d=oS(l+1,l+1+c),p=lS([i,[s],u]),m=Pm(n,p),f=Pm(t,[s]),g=lS([[l],h,d]),y=ob(m,g);let b=rb(y,f,e.shape[o]);const x=Gf(g);return b=ob(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>By(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))()))).reshape(r.shape),indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function oS(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function lS(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const uS={kernelName:Zl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>If(n),b:()=>If(r)}}},cS={kernelName:Kl,gradFunc:e=>({x:()=>em(e,"float32")})},hS={kernelName:Ql,gradFunc:e=>({x:()=>If(e)})},dS={kernelName:Jl,gradFunc:e=>({x:()=>If(e)})},pS={kernelName:ql,gradFunc:e=>({x:()=>If(e)})},mS={kernelName:eu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ng(r,0);return{x:()=>_f(a,e,im(e,s))}}},fS={kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,rm(n,1))}}},gS={kernelName:su,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,em(n,"float32"))}}},yS={kernelName:uu,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=jf(r);return vg(e,im($f(e,s,!0),t))}}}},bS=Hd({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return Ad.runKernel(hu,o,l)}}),xS={kernelName:cu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>bS(r,s,e,a,i,o,l)}}};function vS(e,t,n,r){return t.rank<n.rank&&(t=Pm(t,Pf(t.shape,r))),e.rank<n.rank&&(e=Pm(e,Pf(e.shape,r))),{x:()=>im(e,em(Tf(n,t),e.dtype))}}const wS={kernelName:du,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=vS(e,t[1],a,Qi(s,a.shape));return{x:()=>i.x()}}},SS={kernelName:pu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>im(e,em(rg(n,r),"float32")),b:()=>im(e,em(ug(n,r),"float32"))}}},TS=Hd({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Bd(e,"dy","maxPool3dGrad"),l=Bd(t,"input","maxPool3dGrad"),u=Bd(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Pm(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Pm(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Pm(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Wi(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Wi(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Wi(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Am("maxPool3dGrad",a,i);const m={dy:c,input:h,output:d},f={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=Ad.runKernel(yu,m,f);return p?Pm(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),_S={kernelName:gu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>TS(e,r,s,a,i,o,l)}}},IS=Hd({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Bd(e,"dy","maxPoolGrad"),l=Bd(t,"input","maxPoolGrad"),u=Bd(n,"output","maxPoolGrad");Wi(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Wi(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Wi(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Am("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Ad.runKernel(fu,c,h)}}),CS={kernelName:mu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>IS(e,r,s,a,i,o)}}},MS={kernelName:xu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=Qi(s,r.shape),i=Bi(Af(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Pm(e,t);return am(im(n,Lg(r.shape,"float32")),i)}}}},ES={kernelName:vu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=vS(e,i,a,Qi(s,a.shape));return{x:()=>o.x()}}},NS={kernelName:wu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>im(e,em(cg(n,r),"float32")),b:()=>im(e,em(ng(n,r),"float32"))}}},kS={kernelName:Su,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Wm(e,a,r.shape)}}},RS={kernelName:Tu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{const t=vf(n.shape,s);return t.length>0?Pm($f(e,t),n.shape):e},b:()=>{const t=im(e,yg(eg(am(n,r)))),a=vf(r.shape,s);return a.length>0?Pm($f(t,a),r.shape):t}}}},LS={kernelName:Iu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{const t=im(e,em(r,"float32")),a=vf(n.shape,s);return a.length>0?Pm($f(t,a),n.shape):t},b:()=>{const t=im(e,em(n,"float32")),a=vf(r.shape,s);return a.length>0?Pm($f(t,a),r.shape):t}}}},AS={kernelName:Cu,gradFunc:e=>({x:()=>yg(e)})},PS={kernelName:Ru,gradFunc:e=>({x:()=>If(e)})},DS={kernelName:Au,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return sb(e,r).map((e=>()=>e))}},OS={kernelName:Pu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Wm(e,a,r.shape)}}},GS={kernelName:Du,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=wf(a.shape,i.shape);return{a:()=>{const t=em(i,"float32");let n=im(e,im(t,Vf(a,vg(t,Uf(1)))));const r=vf(a.shape,o);return r.length>0&&(n=$f(n,r)),Pm(n,a.shape)},b:()=>{const t=ng(a,0),n=_f(t,dg(a),If(a));let r=im(e,im(s,n));const l=vf(i.shape,o);return l.length>0&&(r=$f(r,l)),Pm(r,i.shape)}}}},zS={kernelName:Ou,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ng(n,0);return{x:()=>_f(s,e,im(e,r)),alpha:()=>{let t=_f(s,If(e),im(e,n));const a=vf(r.shape,e.shape);return a.length>0&&(t=$f(t,a)),Pm(t,r.shape)}}}};const FS={kernelName:Gu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=Of(n,r);let i=e;null!=a&&(i=ob(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Pm(t,r),a=pf(e,n,!0,!1),i=pf(e,n,!0,!0),o=im(a,i);return im(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=Gf(a);u=ob(u,e)}return u}(r,e,a)}}},WS={kernelName:Nl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{const t=am(e,em(r,"float32")),a=vf(n.shape,s);return a.length>0?Pm($f(t,a),n.shape):t},b:()=>{let t=im(e,em(n,"float32"));const a=vf(r.shape,s);a.length>0&&(t=Pm($f(t,a),r.shape));const i=Xf(r);return yg(am(t,em(i,"float32")))}}}},VS={kernelName:Bu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,yg(Xf(n)))}}},US={kernelName:Yu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=im(cg(n,6),Xy(n));return{x:()=>im(e,em(r,"float32"))}}},BS={kernelName:Xu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,em(Xy(n),"float32"))}}},XS={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pm(e,n.shape)}}},$S={kernelName:Ku,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Ad.runKernel(ju,s,n)}}},HS={kernelName:Hu,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Ad.runKernel(Zu,s,n)}}},ZS={kernelName:Qu,gradFunc:(e,t,n)=>{const{dims:r}=n,s=Qi(r,e.shape);return{x:()=>Ty(e,s)}}},KS={kernelName:Ju,gradFunc:e=>({x:()=>If(e)})},jS={kernelName:qu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yg(am(e,im(Vf(n,1.5),2)))}}},YS={kernelName:rc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>em(If(n),"float32"),t:()=>im(e,em(n,e.dtype)),e:()=>im(e,em(_g(n),e.dtype))}}},QS={kernelName:sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ng(n,Uf(0)),r=Uf(Av),s=Uf(Pv),a=im(e,s),i=im(im(e,r),jf(em(n,"float32")));return _f(t,a,i)}}}},JS={kernelName:uc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,im(n,vg(Uf(1),n)))}}},qS={kernelName:lc,gradFunc:e=>({x:()=>If(e)})},eT={kernelName:ic,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(hf(em(n,"float32")),e)}}},tT={kernelName:oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(df(em(n,"float32")),e)}}},nT={kernelName:ac,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=hv(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Wg(e,u)}}},rT={kernelName:fc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=im(e,r);return{logits:()=>vg(a,im($f(a,[s],!0),r))}}},sT={kernelName:cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,Fm(n))}}},aT={kernelName:pc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Um(e,r,s)}}},iT={kernelName:mc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Gm(e,r)}}},oT={kernelName:hc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,im(Bf(em(n,"float32")),2))}}},lT={kernelName:Sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(e,im(em(n,"float32"),2))}}},uT={kernelName:wc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Uf(2);return{a:()=>im(e,im(s,vg(n,r))),b:()=>im(e,im(s,vg(r,n)))}}},cT={kernelName:Fc,gradFunc:e=>({x:()=>If(e)})},hT={kernelName:Ec,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=wf(n.shape,r.shape);return{a:()=>{let t=e;const r=vf(n.shape,s);return r.length>0&&(t=$f(t,r)),Pm(t,n.shape)},b:()=>{let t=e;const n=vf(r.shape,s);return n.length>0&&(t=$f(t,n)),Pm(yg(t),r.shape)}}}},dT={kernelName:dc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;Qi(a,r.shape).forEach((e=>{s[e]=1}));const i=Pm(e,s),o=im(i,Lg(r.shape,"float32"));return{x:()=>o}}},pT={kernelName:Nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>am(e,Xf(hf(n)))}}},mT={kernelName:kc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>im(vg(Uf(1),Xf(n)),e)}}},fT={kernelName:Rc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=If(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=rm(t,Wm(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=rm(t,Wm(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=rm(t,Wm(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=rm(t,Wm(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},gT={kernelName:Pc,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Gf(s);return{x:()=>ob(e,a)}}},yT={kernelName:Oc,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>By(e,s)}}},bT={kernelName:Gc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Ng(t,If(t)),r=tg(e,n);let s=rg(t,Uf(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Yf(s,e+1);s=Tg(s,Lg(r.shape,"bool"));const i=If(r);return _f(s,r,i)}(e,n)}}},xT={kernelName:zc,gradFunc:e=>({x:()=>If(e)})},vT=[xw,vw,ww,Sw,Tw,_w,Iw,Cw,Mw,Ew,Nw,kw,Lw,Pw,Dw,Ow,Gw,zw,Fw,Ww,Vw,Uw,Xw,Bw,Hw,Zw,Kw,jw,Yw,Qw,WS,Jw,qw,eS,tS,nS,sS,rS,aS,iS,uS,cS,hS,dS,pS,mS,fS,gS,yS,xS,wS,wS,SS,_S,CS,MS,ES,NS,kS,RS,LS,AS,{kernelName:Lu,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Rg(n.shape,"float32")}}},PS,DS,OS,OS,GS,zS,FS,VS,US,BS,XS,$S,HS,ZS,KS,jS,YS,QS,JS,qS,eT,tT,nT,rT,sT,aT,aT,iT,iT,oT,uT,lT,cT,hT,dT,pT,mT,fT,gT,yT,bT,xT];for(const e of vT)Jc(e);cd().prototype.abs=function(){return this.throwIfDisposed(),om(this)},cd().prototype.acos=function(){return this.throwIfDisposed(),lm(this)},cd().prototype.acosh=function(){return this.throwIfDisposed(),um(this)},cd().prototype.add=function(e){return this.throwIfDisposed(),rm(this,e)},cd().prototype.all=function(e,t){return this.throwIfDisposed(),cm(this,e,t)},cd().prototype.any=function(e,t){return this.throwIfDisposed(),hm(this,e,t)},cd().prototype.argMax=function(e){return this.throwIfDisposed(),dm(this,e)},cd().prototype.argMin=function(e){return this.throwIfDisposed(),pm(this,e)},cd().prototype.asScalar=function(){return this.throwIfDisposed(),Wi(1===this.size,(()=>"The array must have only 1 element.")),Pm(this,[])},cd().prototype.asType=function(e){return this.throwIfDisposed(),em(this,e)},cd().prototype.as1D=function(){return this.throwIfDisposed(),Pm(this,[this.size])},cd().prototype.as2D=function(e,t){return this.throwIfDisposed(),Pm(this,[e,t])},cd().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Pm(this,[e,t,n])},cd().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Pm(this,[e,t,n,r])},cd().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Pm(this,[e,t,n,r,s])},cd().prototype.asin=function(){return this.throwIfDisposed(),mm(this)},cd().prototype.asinh=function(){return this.throwIfDisposed(),fm(this)},cd().prototype.atan=function(){return this.throwIfDisposed(),gm(this)},cd().prototype.atan2=function(e){return this.throwIfDisposed(),ym(this,e)},cd().prototype.atanh=function(){return this.throwIfDisposed(),bm(this)},cd().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Dm(this,e,t,n,r)},cd().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Um(this,e,t)},cd().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Xm(this,e,t,n,r,s)},cd().prototype.broadcastTo=function(e){return this.throwIfDisposed(),jm(this,e)},cd().prototype.cast=function(e){return this.throwIfDisposed(),em(this,e)},cd().prototype.ceil=function(){return this.throwIfDisposed(),Ym(this)},cd().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Jm(this,e,t)},cd().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ud&&(e=[e]),Gm([this,...e],t)},cd().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),sf(this,e,t,n,r,s,a)},cd().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),of(this,e,t,n,r,s)},cd().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),rf(this,e,t,n,r,s,a)},cd().prototype.cos=function(){return this.throwIfDisposed(),hf(this)},cd().prototype.cosh=function(){return this.throwIfDisposed(),df(this)},cd().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),pf(this,e,t,n)},cd().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),mf(this,e,t,n)},cd().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),gf(this,e,t)},cd().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),yf(this,e,t,n,r,s,a)},cd().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),bf(this,e,t,n,r,s)},cd().prototype.divNoNan=function(e){return this.throwIfDisposed(),Cf(this,e)},cd().prototype.div=function(e){return this.throwIfDisposed(),am(this,e)},cd().prototype.dot=function(e){return this.throwIfDisposed(),Mf(this,e)},cd().prototype.elu=function(){return this.throwIfDisposed(),Nf(this)},cd().prototype.equal=function(e){return this.throwIfDisposed(),Tf(this,e)},cd().prototype.erf=function(){return this.throwIfDisposed(),kf(this)},cd().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Kf(this,e,t)},cd().prototype.exp=function(){return this.throwIfDisposed(),jf(this)},cd().prototype.expandDims=function(e){return this.throwIfDisposed(),Yf(this,e)},cd().prototype.expm1=function(){return this.throwIfDisposed(),Qf(this)},cd().prototype.fft=function(){return this.throwIfDisposed(),Oy(this)},cd().prototype.flatten=function(){return this.throwIfDisposed(),Pm(this,[this.size])},cd().prototype.floor=function(){return this.throwIfDisposed(),eg(this)},cd().prototype.floorDiv=function(e){return this.throwIfDisposed(),sm(this,e)},cd().prototype.gather=function(e,t,n){return this.throwIfDisposed(),tg(this,e,t,n)},cd().prototype.greaterEqual=function(e){return this.throwIfDisposed(),rg(this,e)},cd().prototype.greater=function(e){return this.throwIfDisposed(),ng(this,e)},cd().prototype.ifft=function(){return this.throwIfDisposed(),Gy(this)},cd().prototype.irfft=function(){return this.throwIfDisposed(),zy(this)},cd().prototype.isFinite=function(){return this.throwIfDisposed(),ag(this)},cd().prototype.isInf=function(){return this.throwIfDisposed(),ig(this)},cd().prototype.isNaN=function(){return this.throwIfDisposed(),og(this)},cd().prototype.leakyRelu=function(e){return this.throwIfDisposed(),lg(this,e)},cd().prototype.lessEqual=function(e){return this.throwIfDisposed(),cg(this,e)},cd().prototype.less=function(e){return this.throwIfDisposed(),ug(this,e)},cd().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),hg(this,e,t,n,r)},cd().prototype.logSigmoid=function(){return this.throwIfDisposed(),xg(this)},cd().prototype.logSoftmax=function(e){return this.throwIfDisposed(),wg(this,e)},cd().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Sg(this,e,t)},cd().prototype.log=function(){return this.throwIfDisposed(),dg(this)},cd().prototype.log1p=function(){return this.throwIfDisposed(),pg(this)},cd().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Tg(this,e)},cd().prototype.logicalNot=function(){return this.throwIfDisposed(),_g(this)},cd().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ig(this,e)},cd().prototype.logicalXor=function(e){return this.throwIfDisposed(),Cg(this,e)},cd().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),zm(this,e,t,n)},cd().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Mg(this,e,t,n,r)},cd().prototype.max=function(e,t){return this.throwIfDisposed(),Ff(this,e,t)},cd().prototype.maximum=function(e){return this.throwIfDisposed(),Ng(this,e)},cd().prototype.mean=function(e,t){return this.throwIfDisposed(),kg(this,e,t)},cd().prototype.min=function(e,t){return this.throwIfDisposed(),Wf(this,e,t)},cd().prototype.minimum=function(e){return this.throwIfDisposed(),Ag(this,e)},cd().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Pg(this,e,t)},cd().prototype.mod=function(e){return this.throwIfDisposed(),Dg(this,e)},cd().prototype.mul=function(e){return this.throwIfDisposed(),im(this,e)},cd().prototype.neg=function(){return this.throwIfDisposed(),yg(this)},cd().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Zf(this,e,t,n)},cd().prototype.notEqual=function(e){return this.throwIfDisposed(),Gg(this,e)},cd().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),zg(this,e,t,n)},cd().prototype.onesLike=function(){return this.throwIfDisposed(),Fg(this)},cd().prototype.pad=function(e,t){return this.throwIfDisposed(),Wg(this,e,t)},cd().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ug(this,e,t,n,r,s,a)},cd().prototype.pow=function(e){return this.throwIfDisposed(),Vf(this,e)},cd().prototype.prelu=function(e){return this.throwIfDisposed(),Bg(this,e)},cd().prototype.prod=function(e,t){return this.throwIfDisposed(),Xg(this,e,t)},cd().prototype.reciprocal=function(){return this.throwIfDisposed(),vy(this)},cd().prototype.relu=function(){return this.throwIfDisposed(),wy(this)},cd().prototype.relu6=function(){return this.throwIfDisposed(),Sy(this)},cd().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Pm(this,e.shape)},cd().prototype.reshape=function(e){return this.throwIfDisposed(),Pm(this,e)},cd().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Ub(this,e,t,n)},cd().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Bb(this,e,t,n)},cd().prototype.reverse=function(e){return this.throwIfDisposed(),Ty(this,e)},cd().prototype.rfft=function(){return this.throwIfDisposed(),Wy(this)},cd().prototype.round=function(){return this.throwIfDisposed(),_y(this)},cd().prototype.rsqrt=function(){return this.throwIfDisposed(),Iy(this)},cd().prototype.selu=function(){return this.throwIfDisposed(),Cy(this)},cd().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),My(this,e,t,n,r,s,a)},cd().prototype.sigmoid=function(){return this.throwIfDisposed(),Fm(this)},cd().prototype.sign=function(){return this.throwIfDisposed(),Ey(this)},cd().prototype.sin=function(){return this.throwIfDisposed(),Ny(this)},cd().prototype.sinh=function(){return this.throwIfDisposed(),ky(this)},cd().prototype.slice=function(e,t){return this.throwIfDisposed(),Wm(this,e,t)},cd().prototype.softmax=function(e){return this.throwIfDisposed(),Dy(this,e)},cd().prototype.softplus=function(){return this.throwIfDisposed(),bg(this)},cd().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Vg(this,e,t)},cd().prototype.split=function(e,t){return this.throwIfDisposed(),Fy(this,e,t)},cd().prototype.sqrt=function(){return this.throwIfDisposed(),Bf(this)},cd().prototype.square=function(){return this.throwIfDisposed(),Xf(this)},cd().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Vy(this,e)},cd().prototype.squeeze=function(e){return this.throwIfDisposed(),Uy(this,e)},cd().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ud?[this,e]:[this,...e];return By(n,t)},cd().prototype.step=function(e){return this.throwIfDisposed(),Xy(this,e)},cd().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),$y(this,e,t,n,r,s,a,i,o)},cd().prototype.sub=function(e){return this.throwIfDisposed(),vg(this,e)},cd().prototype.sum=function(e,t){return this.throwIfDisposed(),$f(this,e,t)},cd().prototype.tan=function(){return this.throwIfDisposed(),Hy(this)},cd().prototype.tanh=function(){return this.throwIfDisposed(),Vm(this)},cd().prototype.tile=function(e){return this.throwIfDisposed(),Jf(this,e)},cd().prototype.toBool=function(){return this.throwIfDisposed(),em(this,"bool")},cd().prototype.toFloat=function(){return this.throwIfDisposed(),em(this,"float32")},cd().prototype.toInt=function(){return this.throwIfDisposed(),em(this,"int32")},cd().prototype.topk=function(e,t){return this.throwIfDisposed(),eb(this,e,t)},cd().prototype.transpose=function(e){return this.throwIfDisposed(),ob(this,e)},cd().prototype.unique=function(e){return this.throwIfDisposed(),nb(this,e)},cd().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),rb(this,e,t)},cd().prototype.unstack=function(e){return this.throwIfDisposed(),sb(this,e)},cd().prototype.where=function(e,t){return this.throwIfDisposed(),_f(e,this,t)},cd().prototype.zerosLike=function(){return this.throwIfDisposed(),If(this)};class wT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wT.prototype)}}class ST extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ST.prototype)}}class TT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,TT.prototype)}}class _T extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_T.prototype)}}class IT extends Error{constructor(e){super(e),Object.setPrototypeOf(this,IT.prototype)}}class CT{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function MT(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ET(e,t){if(!e)throw new IT(t)}function NT(e,t){let n=0;for(const r of e)r===t&&n++;return n}function kT(e){return 1===e.length?e[0]:e}function RT(e){return Array.isArray(e)?e:[e]}function LT(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function AT(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let PT={};function DT(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function OT(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>OT(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?OT(t):e[n]=t.value)}}}function GT(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in PT)a=PT[s];else if(a=t[s],null==a)throw new TT(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new TT(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in PT?[o,l]=PT.className:i in t&&([o,l]=t[i]),null==o)throw new TT(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(PT))e[t]=PT[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},PT);for(const e of Object.keys(n))PT[e]=n[e];OT(a.config);const r=l(o,a.config,n,s);return PT=Object.assign({},t),r}{const e=Object.assign({},PT);for(const e of Object.keys(n))PT[e]=n[e];const t=new o(a.config);return PT=Object.assign({},e),t}}}function zT(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function FT(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function WT(e){if(null==e)throw new TT(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function VT(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new TT(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function UT(e,t,n=0,r=1/0){return ET(n>=0),ET(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function BT(e,t){Array.isArray(e)?(Wi(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>BT(e,`element ${n+1} of ${t}`)))):Wi(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${XT(e)}.`))}function XT(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>XT(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function $T(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let HT=0;function ZT(){return HT++}const KT={};function jT(e=""){return e in KT||(KT[e]=0),KT[e]+=1,e+KT[e].toString()}const YT=["channelsFirst","channelsLast"],QT=["nearest","bilinear"],JT=["valid","same","causal"],qT=["max","avg"],e_=["sum","mul","concat","ave"],t_=new Map;function n_(e){VT(YT,"DataFormat",e)}function r_(e){VT(JT,"PaddingMode",e)}function s_(e){VT(qT,"PoolMode",e)}const a_=[];function i_(e,t){a_.push(e);try{const e=t();return a_.pop(),e}catch(e){throw a_.pop(),e}}function o_(e){if(!c_(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===a_.length?"":a_.join("/")+"/")+e}function l_(e){if(!c_(e))throw new Error("Not a valid tensor name: '"+e+"'");t_.has(e)||t_.set(e,0);const t=t_.get(e);if(t_.set(e,t_.get(e)+1),t>0){const n=`${e}_${t}`;return t_.set(n,1),n}return e}const u_=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function c_(e){return!!e.match(u_)}function h_(e){return e===parseInt(e.toString(),10)}function d_(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function p_(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function m_(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function f_(e,t){if(t<e)throw new TT(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let g_;function y_(){return null==g_&&(g_=ap().epsilon()),g_}function b_(e,t){return em(e,t)}function x_(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Pm(e,n)}function v_(e,t,n){return ep((()=>{switch(e.rank){case 1:return Ry(e,t,n);case 2:return Ly(e,[t,0],[n,e.shape[1]]);case 3:return Ay(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Py(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Wm(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Wm(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new TT(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function w_(e,t,n){return ep((()=>{switch(e.rank){case 1:return Ry(e,t,n);case 2:return Ly(e,[0,t],[e.shape[0],n]);case 3:return Ay(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Py(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new TT(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function S_(e,t,n,r){return ep((()=>{switch(e.rank){case 1:return Ry(e,t,n);case 2:switch(r){case 1:return v_(e,t,n);case 2:return w_(e,t,n);default:throw new TT(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return v_(e,t,n);case 2:return Ay(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return w_(e,t,n);default:throw new TT(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return v_(e,t,n);case 2:return Py(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Py(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return w_(e,t,n);default:throw new TT(`The axis is not within the rank of the tensor ${r}`)}default:throw new TT(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function T_(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Gm(e,t)}function __(e,t){switch(e.rank){case 1:return qm([e,t]);case 2:return ef([e,t],0);case 3:return tf([e,t],0);case 4:return nf([e,t],0);default:throw new TT(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function I_(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new TT(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Jf(e,t)}function C_(e,t=0,n=1,r,s){return gy(e,t,n,r,s)}function M_(e,t,n,r){if(e.rank<2||t.rank<2)throw new _T(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new _T(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return xb({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?k_(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=Pm(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Pm(ob(t,c),[l,-1]);const h=[...s,...u];return Pm(xb({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?k_(e.rank,r,"channelsLast"):null,activation:n}),h)}}function E_(e,t,n){return ep((()=>(t=Array.isArray(t)?Zy(t,"int32"):em(t,"int32"),tg(e,t,n))))}function N_(e){return im(e,e)}function k_(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new TT(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Pm(t,[1,r[0],1,1,1]):Pm(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Pm(t,[1,1,1,1,r[0]]):Pm(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Pm(t,[1,r[0],1,1]):Pm(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Pm(t,[1,1,1,r[0]]):Pm(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Pm(t,[1,r[0],1]):Pm(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Pm(t,[1,1,r[0]]):Pm(t,[1].concat(r))}else if(e<3)return t;throw new TT(`Unsupported input rank by biasAdd: ${t.rank}`)}function R_(e,t,n){return ep((()=>(null==n&&(n="channelsLast"),n_(n),rm(e,k_(e.rank,t,n)))))}function L_(e,t,n,r){return ep((()=>lb(e,t,n,r)))}function A_(e,t,n=!1){return n?e():t()}const P_=["fanIn","fanOut","fanAvg"],D_=["normal","uniform","truncatedNormal"];class O_ extends Tx{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class G_ extends O_{apply(e,t){return Rg(e,t)}}G_.className="Zeros",Ix(G_);class z_ extends O_{apply(e,t){return Lg(e,t)}}z_.className="Ones",Ix(z_);class F_ extends O_{constructor(e){if(super(),"object"!=typeof e)throw new TT(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new TT(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ep((()=>im(Uf(this.value),Lg(e,t))))}getConfig(){return{value:this.value}}}F_.className="Constant",Ix(F_);class W_ extends O_{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return yy(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}W_.className="RandomUniform",Ix(W_);class V_ extends O_{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _T(`randomNormal does not support dType ${t}.`);return C_(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}V_.className="RandomNormal",Ix(V_);class U_ extends O_{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _T(`truncatedNormal does not support dType ${t}.`);return tb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}U_.className="TruncatedNormal",Ix(U_);class B_ extends O_{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ep((()=>{if(2!==e.length||e[0]!==e[1])throw new TT("Identity matrix initializer can only be used for 2D square matrices.");return im(this.gain,qf(e[0]))}))}getConfig(){return{gain:this.gain}}}B_.className="Identity",Ix(B_);class X_ extends O_{constructor(e){if(super(),e.scale<0)throw new TT(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){VT(P_,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){VT(D_,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(n_(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=d_(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=d_(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=d_(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _T(`${this.getClassName()} does not support dType ${t}.`);return tb(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return yy(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}X_.className="VarianceScaling",Ix(X_);class $_ extends X_{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return X_.className}}$_.className="GlorotUniform",Ix($_);class H_ extends X_{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return X_.className}}H_.className="GlorotNormal",Ix(H_);class Z_ extends X_{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return X_.className}}Z_.className="HeNormal",Ix(Z_);class K_ extends X_{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return X_.className}}K_.className="HeUniform",Ix(K_);class j_ extends X_{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return X_.className}}j_.className="LeCunNormal",Ix(j_);class Y_ extends X_{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return X_.className}}Y_.className="LeCunUniform",Ix(Y_);class Q_ extends O_{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ep((()=>{if(e.length<2)throw new _T("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=Bi(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=C_([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=yx.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=im(o,l.sign()),n<r&&(o=o.transpose()),im(Uf(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Q_.className="Orthogonal",Ix(Q_);const J_={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function q_(e,t={}){return GT(e,_x.getMap().classNameMap,t,"initializer")}function eI(e){return DT(e)}function tI(e){if("string"==typeof e){const t=e in J_?J_[e]:e;if("GlorotNormal"===t)return new H_;if("GlorotUniform"===t)return new $_;if("HeNormal"===t)return new Z_;if("HeUniform"===t)return new K_;if("LeCunNormal"===t)return new j_;if("LeCunUniform"===t)return new Y_;{const e={};return e.className=t,e.config={},q_(e)}}return e instanceof O_?e:q_(e)}function nI(e){return Array.isArray(e)&&Array.isArray(e[0])}function rI(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function sI(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new TT(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function aI(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new TT(`Expected exactly 1 Shape; got ${e.length}`)}return e}function iI(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const oI="Variable";class lI{constructor(e,t="float32",n=oI,r=!0,s=null){this.dtype=t??"float32",this.shape=e.shape,this.id=ZT(),n=n??oI,this.originalName=o_(n),this.name=l_(this.originalName),this.trainable_=r,this.constraint=s,this.val=ab(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function uI(e){return e.map((e=>e.read()))}function cI(e){e.forEach((e=>{e[0].write(e[1])}))}class hI{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class dI{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=ZT(),null!=a&&(this.originalName=o_(a),this.name=l_(this.originalName)),this.rank=t.length}}let pI=0;class mI{constructor(e,t){this.callArgs=t,this.id=pI++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fI=0;class gI extends Tx{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fI++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=LT(e)+"_"+jT(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ST(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new TT(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return kT(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return kT(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new wT(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new wT(`Layer ${this.name} is not connected, no input to return.`);return kT(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new wT(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new wT(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return kT(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=RT(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=RT(this.inputSpec);if(t.length!==n.length)throw new TT(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new TT(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new TT(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new TT(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new TT(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new TT(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new TT(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=RT(e),r=function(e){let t=!0;for(const n of RT(e))if(!(n instanceof dI)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of RT(e))if(n instanceof dI){t=!1;break}return t}(e);if(r===s)throw new TT("Arguments to apply() must be all SymbolicTensors or all Tensors");return i_(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of RT(e))t.push(n.shape);this.build(kT(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=RT(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=kT(a),null!=this.activityRegularizer)throw new _T("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=RT(e);const t=[];for(const n of e)t.push(n.shape);return kT(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new dI(a,n,this,RT(e),t,this.name,r))):new dI(a,r,this,RT(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new _T("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new wT(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new wT(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ST(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return iI(this.weights)}build(e){this.built=!0}getWeights(e=!1){return uI(e?this.trainableWeights:this.weights)}setWeights(e){ep((()=>{const t=this.weights;if(t.length!==e.length)throw new TT(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=uI(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!$i(a.shape,o.shape))throw new TT(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}cI(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new TT(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():tI("zeros"));const l=r.apply(t,n),u=new lI(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=RT(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=RT(t),a=RT(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=RT(e);t=RT(t),n=RT(n),r=RT(r),s=rI(s),a=rI(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new mI({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function yI(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=yI(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class bI extends gI{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:jT("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new TT("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new TT("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new TT("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new dI(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new mI({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new TT(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function xI(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new TT("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new bI({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}bI.className="InputLayer",Ix(bI);class vI{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof vI)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new TT(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return em(t,e.dtype)}catch{throw new TT(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof dI){if(null==this.id2Value[e.id])throw new TT(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new TT(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof dI){if(null==this.id2Value[e.id])throw new TT(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new TT(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&tp(this.id2Mask)}}const wI=new CT,SI=new CT;function TI(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=wI.get(c);if(null==d){const e=function(e,t){Wi(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=II(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=II(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:_I(r)}}(i,t);d=e.sorted,h=e.recipientCounts,wI.put(c,d),SI.put(c,h)}h={},s||Object.assign(h,SI.get(c));const p=new vI(t);for(let e=0;e<d.length;++e){if(null!=r){const e=qd().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=d[e],i=a.sourceLayer;if(i instanceof bI)continue;const u=[],c=[],m=[];let f=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(f=!0),s||(h[e.name]--,0===h[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&m.push(n))}f&&((n=n||{}).mask=c[0]);const g=RT(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=CI(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||tp(m)}return p.disposeMasks(),a?l:l[0]}function _I(e){const t={};for(const n in e)t[n]=e[n].size;return t}function II(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),!n.has(t.name)&&a.push(t)}}return{sorted:r,recipientMap:s}}function CI(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function MI(e,t){return ep((()=>Bf($f(im(e,e),t,!0))))}Mo().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=wI&&wI.setMaxEntries(e),null!=SI&&SI.setMaxEntries(e)}));class EI extends Tx{getConfig(){return{}}}class NI extends EI{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ep((()=>{const t=MI(e,this.axis),n=Jm(t,0,this.maxValue);return im(e,am(n,rm(y_(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}NI.className="MaxNorm",Ix(NI);class kI extends EI{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ep((()=>am(e,rm(y_(),MI(e,this.axis)))))}getConfig(){return{axis:this.axis}}}kI.className="UnitNorm",Ix(kI);class RI extends EI{apply(e){return wy(e)}}RI.className="NonNeg",Ix(RI);class LI extends EI{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ep((()=>{const t=MI(e,this.axis),n=rm(im(this.rate,Jm(t,this.minValue,this.maxValue)),im(1-this.rate,t));return im(e,am(n,rm(y_(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}LI.className="MinMaxNorm",Ix(LI);const AI={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function PI(e){return DT(e)}function DI(e,t={}){return GT(e,_x.getMap().classNameMap,t,"constraint")}function OI(e){return null==e?null:"string"==typeof e?DI({className:e in AI?AI[e]:e,config:{}}):e instanceof EI?e:DI(e)}async function GI(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];tp(r)}}function zI(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var FI;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(FI||(FI={}));class WI{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class VI{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class UI extends WI{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=ep((()=>rm(this.totals[e],im(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ep((()=>{const n=im(am(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),np(t[e])})))}}class BI extends WI{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class XI extends WI{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||bv,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");lo(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():$h();return(...a)=>{const i=null!=n?n():$h();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await GI(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await GI(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await GI(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await GI(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await GI(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):lo(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await GI(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await GI(e),await this.trainEnd(e))}}function $I(e,t){return null==e&&(e={}),e instanceof WI?[e]:Array.isArray(e)&&e[0]instanceof WI?e:RT(e).map((e=>new XI(e,t)))}class HI{constructor(){}static registerCallbackConstructor(e,t){Wi(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),HI.checkForDuplicate(t),null==HI.constructors[e]&&(HI.constructors[e]=[]),HI.constructors[e].push(t)}static checkForDuplicate(e){for(const t in HI.constructors)HI.constructors[+t].forEach((t=>{if(t===e)throw new TT("Duplicate callback constructor.")}))}static clear(){HI.constructors={}}static createCallbacks(e){const t=[];for(const n in HI.constructors){const r=+n;e>=r&&t.push(...HI.constructors[r])}return t.map((e=>new e))}}function ZI(e,t,n,r,s,a,i,o,l){const u=new BI,c=[new UI,...HI.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new VI(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function KI(e,t={},n=!1){return GT(e,_x.getMap().classNameMap,t,"layer",n)}function jI(e,t){return ep((()=>{"float32"!==e.dtype&&(e=em(e,"float32"));const n=$f(N_(e),t,!0),r=Qm(n.shape,y_()),s=Bf(Ng(n,r));return am(e,s)}))}function YI(e,t){return ep((()=>kg(N_(vg(t,e)),-1)))}function QI(e,t){return ep((()=>kg(om(vg(t,e)),-1)))}function JI(e,t){return ep((()=>{const n=vg(e,t),r=Jm(om(e),y_(),Number.MAX_VALUE),s=om(am(n,r));return im(100,kg(s,-1))}))}function qI(e,t,n=!1){return ep((()=>{if(n)t=Dy(t);else{const e=$f(t,t.shape.length-1,!0);t=am(t,e)}return t=Jm(t,y_(),1-y_()),yg($f(im(em(e,"float32"),dg(t)),t.shape.length-1))}))}function eC(e,t,n=!1){return ep((()=>{const r=em(eg(function(e){const t=[d_(e.shape)];return Pm(e,t)}(e)),"int32"),s=(t=Jm(t,y_(),1-y_())).shape;return qI(Pm(zg(r,s[s.length-1]),s),t,n)}))}function tC(e,t){return ep((()=>{let n;return n=Jm(t,y_(),1-y_()),n=dg(am(n,vg(1,n))),kg(function(e,t){if(!$i(e.shape,t.shape))throw new TT(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ep((()=>{const n=wy(t),r=yg(om(t));return rm(vg(n,im(t,e)),pg(jf(r)))}))}(e,n),-1)}))}function nC(e,t){return ep((()=>{const n=jI(e,-1),r=jI(t,-1),s=im(n,r);return yg($f(s,-1))}))}HI.constructors={};const rC={meanSquaredError:YI,meanAbsoluteError:QI,meanAbsolutePercentageError:JI,meanSquaredLogarithmicError:function(e,t){return ep((()=>{const n=Jm(t,y_(),Number.MAX_VALUE),r=dg(rm(1,n)),s=Jm(e,y_(),Number.MAX_VALUE),a=dg(rm(1,s));return kg(N_(vg(r,a)),-1)}))},squaredHinge:function(e,t){return ep((()=>{const n=Ng(0,vg(1,im(e,t)));return kg(N_(n),-1)}))},hinge:function(e,t){return ep((()=>{const n=Ng(0,vg(1,im(e,t)));return kg(n,-1)}))},categoricalHinge:function(e,t){return ep((()=>{const n=$f(im(e,t),-1),r=Ff(im(vg(1,e),t),-1);return Ng(0,rm(1,vg(r,n)))}))},logcosh:function(e,t){return ep((()=>{const n=Math.log(2),r=vg(t,e),s=vg(rm(r,bg(im(-2,r))),n);return kg(s,-1)}))},categoricalCrossentropy:qI,sparseCategoricalCrossentropy:eC,binaryCrossentropy:tC,kullbackLeiblerDivergence:function(e,t){return ep((()=>{const n=Jm(e,y_(),1),r=Jm(t,y_(),1);return $f(im(e,dg(am(n,r))),-1)}))},poisson:function(e,t){return ep((()=>{const n=dg(rm(y_(),t));return kg(vg(t,im(e,n)),-1)}))},cosineProximity:nC};function sC(e){if("string"==typeof e){if(e in rC)return rC[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new TT(t)}return e}function aC(e,t){return ep((()=>{const n=im(.5,Fg(t)),r=b_(ng(t,n),e.dtype);return kg(Tf(e,r),-1)}))}function iC(e,t){return ep((()=>b_(Tf(dm(e,-1),dm(t,-1)),"float32")))}function oC(e,t){return ep((()=>em($f(Tg(Tf(e,1),Tf(t,1))),"float32")))}function lC(e,t){return ep((()=>{const n=oC(e,t),r=function(e,t){return ep((()=>em($f(Tg(Tf(e,0),Tf(t,1))),"float32")))}(e,t),s=rm(n,r);return em(_f(ng(s,0),am(n,s),0),"float32")}))}function uC(e,t){return tC(e,t)}function cC(e,t){return e.rank===t.rank&&(e=Uy(e,[e.rank-1])),(t=dm(t,-1)).dtype!==e.dtype&&(t=em(t,e.dtype)),em(Tf(e,t),"float32")}const hC=qI,dC=eC,pC={binaryAccuracy:aC,categoricalAccuracy:iC,precision:lC,categoricalCrossentropy:hC,sparseCategoricalCrossentropy:dC,mse:YI,MSE:YI,mae:QI,MAE:QI,mape:JI,MAPE:JI,cosine:nC};function mC(e){if("string"==typeof e&&e in pC)return pC[e];if("string"!=typeof e&&null!=e)return e;throw new TT(`Unknown metric ${e}`)}function fC(e){if(ET(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(rC))if(rC[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(pC))if(pC[n]===e){t=n;break}return void 0!==t?t:e.name}}const gC=1048576;function yC(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!bC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>gC&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${gC}.`)}}function bC(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t)if("string"!=typeof n||!bC(e[n]))return!1;return!0}if(Array.isArray(e)){for(const t of e)if(!bC(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xC(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function vC(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch{s="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}xC([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function wC(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch{a="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];xC([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)xC(["","","","",i[e]],t,r)}function SC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function TC(e,t){if(null===e)return null;if("string"==typeof e)return AT(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];SC(t,s,r)?n.push(r):n.push(TC(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=AT(n);t[e]=TC(r,e)}}return t}}function _C(e,t){if(null==e)return null;if("string"==typeof e)return LT(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];SC(t,s,r)?n.push(r):n.push(_C(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[LT(n)]="name"!==n&&"className"!==n||"string"!=typeof r?_C(r,n):r}return t}}const IC="4.16.0";class CC extends gI{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=jT(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],FT(this.inputs).length!==this.inputs.length)throw new TT(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);FT(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ET(0===n,"input layer has >1 nodes"),ET(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof bI))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{(null==r||null==s||null==l)&&(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new ST(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(CC.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(zT);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof CC&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(zT);const m=this.inputs.slice(),f=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===m.indexOf(n))throw new ST(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${f}`);for(const e of t.outputTensors)m.push(e);f.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new ST(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new mI({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new TT("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new TT(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new TT(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new TT(`${e.length} of ${r} weights are not set: ${e}`)}cI(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${IC}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=_C(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ep((()=>{e=RT(e);const n=new vI;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return TI(this.outputs,n,t)}))}computeMask(e,t){return ep((()=>{let n;return e=RT(e),n=null==t?MT(null,e.length):RT(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=rI(e);if(t.length!==this.inputLayers.length)throw new TT(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(zT);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=rI(t.computeOutputShape(kT(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];ET(t in n),s.push(n[t])}return kT(s)}runInternalGraph(e,t){null==t&&(t=MT(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(zT);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=RT(t.call(e,u)),l=RT(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=RT(t.call(r,u)),l=RT(t.computeMask(r,i));if(t.activityRegularizer)throw new _T("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){ET(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof CC?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=CC.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new TT("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new TT(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new TT(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ep((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=CC.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=CC.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch{console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[CC.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=CC.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=CC.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(kT(n),r)}function l(e){const n=e.name,a=KI(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new TT(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!WT(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];ET(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const m=t.outputLayers;for(const e of m){const t=e[0],n=e[1],r=e[2];ET(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new TT("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ep((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function MC(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function EC(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ep((()=>{if(1===e.shape.length)return tm(e);if(2===e.shape.length){if(e.shape[1]>1)return dm(e,1);if(1===e.shape[1])return Pm(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());tp(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Zy(s,"float32")}return null}function NC(e,t){return im(e,t)}function kC(e,t){let n,r;const s=t;n=s.xs,r=s.ys,Wi(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=RC("input",e.inputNames,n),i=RC("output",e.outputNames,r),o=a[0].shape[0];Wi(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Wi(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)Wi(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)Wi(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function RC(e,t,n){if(n instanceof ud)return[n];if(Array.isArray(n))return Wi(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new TT(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function LC(e){return"function"==typeof e.iterator}function AC(e){Wi(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function PC(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>v_(e,t,n-t))):v_(e,t,n-t)}function DC(e,t){return ep((()=>null==e?null:Array.isArray(e)?e.map((e=>DC(e,t))):E_(e,"int32"===t.dtype?t:em(t,"int32"))))}function OC(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function GC(e){const t=[];e instanceof ud&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(x_(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function zC(e,t){if(null==e)return;const n=[];if(t instanceof ud)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ud)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function FC(e){return Array.isArray(e)}function WC(e){return!function(e){return e instanceof ud}(e)&&!FC(e)}function VC(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(FC(e)&&e.length>0)t=!0;else if(WC(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new TT(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(WC(e)){a=[];for(const n of t){if(null==e[n])throw new TT(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(FC(e)){if(e.length!==t.length)throw new TT(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new TT(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=GC(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new TT(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new TT(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function UC(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new TT(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new TT(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new TT(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new TT(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class BC extends CC{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new TT("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),xC(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?vC(o[e],n,r):wC(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?iI(e.collectedTrainableWeights):iI(e.trainableWeights),t}(e),u=iI(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>gv.adagrad(.01),Adadelta:()=>gv.adadelta(1,.95,y_()),Adam:()=>gv.adam(.001,.9,.999,y_()),Adamax:()=>gv.adamax(.002,.9,.999,y_(),0),RMSProp:()=>gv.rmsprop(.001,.9,0,y_()),SGD:()=>gv.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new TT(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Mx))throw new TT("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new TT(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>sC(e)))}else{const n=sC(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new TT(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(sC(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],i_("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};i_("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===tC?-1!==["accuracy","acc"].indexOf(i)?r=aC:-1!==["crossentropy","ce"].indexOf(i)&&(r=uC):this.lossFunctions[e]===eC?-1!==["accuracy","acc"].indexOf(i)?r=cC:-1!==["crossentropy","ce"].indexOf(i)&&(r=dC):-1!==["accuracy","acc"].indexOf(i)?r=iC:-1!==["crossentropy","ce"].indexOf(i)&&(r=hC),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else a=mC(i),n=""+fC(i);let t;i_(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;AC(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return kT(this.testLoop(t,e,r,n.verbose,n.steps))}finally{zC(s[0],e),zC(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new _T("Verbose mode is not implemented yet.");Wi(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=ep((()=>{if(t.value){const{xs:n,ys:r}=kC(e,t.value),i=n.concat(r),u=ep((()=>s(i)));if(tp(i),0===l)for(let e=0;e<u.length;++e)a.push(Uf(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=ep((()=>rm(a[e],im(c,t)))),l>0&&tp(n)}tp(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=am(a[e],o),tp(t)}return kT(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new TT(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new TT(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new TT("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new vI;if(e instanceof ud&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new TT(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new TT(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=TI(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=MT(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new TT(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ep((()=>{const r=this.checkNumSamples(e);if(n)throw new _T("Verbose predictLoop() is not implemented yet.");const s=OC(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)ep((()=>{const n=s[t][0],r=s[t][1],a=PC(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new vI(i);return TI(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return kT(a.map((e=>Gm(e,0))))}))}predict(e,t={}){const n=GC(e);UC(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return AC(e),this.predictLoop(n,e)}finally{zC(n,e)}}predictOnBatch(e){UC(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ST("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===eC?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=FT(e.map((e=>e.shape[0])));n.sort();const r=FT(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new TT(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new TT(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!$i(n,r))throw new TT(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=VC(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=VC(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[YI,tC,qI];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===qI&&1===a.shape[a.shape.length-1])throw new TT(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new TT(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new TT(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=MC(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await EC(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return ep((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new _T("Verbose mode is not implemented yet.");if(null!=s)throw new _T("steps mode in testLoop() is not implemented yet");{const r=OC(a,n),s=Zy(f_(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=v_(s,a,o-a),u=DC(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Uf(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=rm(i[e],im(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=am(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;NT(e,r)>1&&(s+=`_${NT(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new vI(e),o=TI(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=NC(n,s[e]));const a=kg(n);t.push(a),l=0===e?n:rm(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=kg(t(r[s],o[s]))}np(n),a.push(n)}return l=kg(l),this.calculateLosses().forEach((e=>{l=rm(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>ep((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new vI(a),o=TI(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=kg(r(s[e],o[e]));n=0===e?a:rm(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=kg(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;AC(d);const p=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,!1,d);r=p[0],s=p[1],h=p[2];let m,f=!1;if(null!=n.validationData&&n.validationData.length>0){if(f=!0,2!==n.validationData.length)throw 3===n.validationData.length?new _T("validationData including sample weights is not supported yet."):new TT(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=await this.standardizeUserData(o,l,null,null,!0,d);u=e[0],c=e[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){f=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=PC(r,e,t),a=r,r=PC(r,0,e),c=PC(s,e,t),i=s,s=PC(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(f=!0);const g=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let x,v;f?(this.makeTestFunction(),x=this.testFunction,v=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,m=[],v=b.slice());const w=$I(n.callbacks,n.yieldEvery);return await this.fitLoop(y,g,b,d,n.epochs,n.verbose,w,x,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,zC(r,e),zC(s,t),zC(a,e),zC(i,t),zC(u,o),zC(c,l),null!=h&&tp(h)}}async fitLoop(e,t,n,r,s,a,i,o,l,u,c,h,d,p){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let m=!1;if(null!=o&&null!=l&&(m=!0),null!=p&&(m=!0,null==d))throw new TT("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const f=this.checkNumSamples(t,r,d,"steps_per_epoch");let g;null!=f&&(g=f_(0,f)),null==a&&(a=1);const{callbackList:y,history:b}=ZI(i,a,s,h,f,d,r,m,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=d)throw new _T("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new _T("batch shuffling is not implemneted yet");u&&Di(g);const a=Zy(g),i=OC(f,r);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),ep((()=>{const h=i[u][0],d=i[u][1],p=v_(a,h,d-h);c.batch=u,c.size=d-h;const f=DC(t,p),g=e(f);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,np(r)}if(u===i.length-1&&m){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];np(a),s["val_"+r]=a}}})),await y.onBatchEnd(u,c),zI(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(Wi(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Wi(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Wi(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Wi(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Wi(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(LC(n.validationData))Wi(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new _T("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=$I(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=ZI(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){const u={};await d.onEpochBegin(m);let c=0,h=0;for(r||(f=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await f.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:r,ys:s}=kC(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=MC(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await EC(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);tp(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,np(n)}await d.onBatchEnd(h,a),zI(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=LC(n.validationData)?RT(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):RT(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,u),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return tp(a),zC(n[0],e),zC(n[1],t),kT(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=qd().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-qd().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=LT(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>LT(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=LT(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[LT(fC(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>LT(fC(e))));{const e={};for(const t in this.metrics)e[t]=LT(fC(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=KI(TC(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=AT(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>AT(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=AT(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>AT(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=AT(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=_p(e);if(0===t.length)throw new TT(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new TT(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new TT("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ip(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${IC}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ip(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=gp([n.data,t])}return null!=this.userDefinedMetadata&&(yC(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){yC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}BC.className="Model",Ix(BC);class XC extends BC{}XC.className="Functional",Ix(XC);class $C extends BC{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:jT("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new TT(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof $C||e instanceof BC;let n;if(t){if(n=e,1!==n.outputs.length)throw new TT("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new TT("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new TT("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=xI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new TT(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new TT("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=yI(this.outputs[0])}this.inboundNodes=[],new mI({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:MT(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(aI(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new BC({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ST("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ST("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ST("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ST("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new TT("Legacy serialization format not supported yet.");s=t}else Wi(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof $C))throw new _T(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=KI(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new TT("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new TT("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}$C.className="Sequential",Ix($C);let HC=class extends Tx{getConfig(){return{}}};class ZC extends HC{apply(e,t=1){return function(e,t=1){if(1!==t)throw new _T(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Nf(e)}(e,t)}}ZC.className="elu",Ix(ZC);class KC extends HC{apply(e){return Cy(e)}}KC.className="selu",Ix(KC);class jC extends HC{apply(e){return wy(e)}}jC.className="relu",Ix(jC);class YC extends HC{apply(e){return ep((()=>Ag(6,wy(e))))}}YC.className="relu6",Ix(YC);class QC extends HC{apply(e){return e}}QC.className="linear",Ix(QC);class JC extends HC{apply(e){return Fm(e)}}JC.className="sigmoid",Ix(JC);class qC extends HC{apply(e){return function(e){return ep((()=>{const t=rm(.5,im(.2,e));return Jm(t,0,1)}))}(e)}}qC.className="hardSigmoid",Ix(qC);class eM extends HC{apply(e){return bg(e)}}eM.className="softplus",Ix(eM);class tM extends HC{apply(e){return function(e){return ep((()=>am(e,rm(om(e),1))))}(e)}}tM.className="softsign",Ix(tM);class nM extends HC{apply(e){return Vm(e)}}nM.className="tanh",Ix(nM);let rM=class extends HC{apply(e,t=-1){return Dy(e,t)}};rM.className="softmax",Ix(rM);class sM extends HC{apply(e,t=-1){return wg(e,t)}}sM.className="logSoftmax",Ix(sM);class aM extends HC{apply(e,t=1){return ep((()=>im(Fm(im(e,t)),e)))}}aM.className="swish",Ix(aM);class iM extends HC{apply(e){return ep((()=>im(e,Vm(bg(e)))))}}function oM(e){return e.getClassName()}function lM(e,t={}){return GT(e,_x.getMap().classNameMap,t,"activation")}function uM(e){if(null==e){return lM({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},lM(t)}return e instanceof HC?e:lM(e)}function cM(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}iM.className="mish",Ix(iM);class hM extends Tx{}class dM extends hM{constructor(e){super(),cM(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ep((()=>{let t=Rg([1]);return this.hasL1&&(t=rm(t,$f(im(this.l1,om(e))))),this.hasL2&&(t=rm(t,$f(im(this.l2,N_(e))))),Pm(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}dM.className="L1L2",Ix(dM);const pM={l1l2:"L1L2"};function mM(e){return DT(e)}function fM(e,t={}){return GT(e,_x.getMap().classNameMap,t,"regularizer")}function gM(e){return null==e?null:"string"==typeof e?fM({className:e in pM?pM[e]:e,config:{}}):e instanceof hM?e:fM(e)}class yM extends gI{constructor(e){super(e??{}),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=sI(e);let n=wy(e);return null!=this.maxValue&&(n=Jm(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yM.className="ReLU",Ix(yM);class bM extends gI{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sI(e);return lg(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bM.className="LeakyReLU",Ix(bM);class xM extends gI{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=tI(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=gM(e.alphaRegularizer),this.alphaConstraint=OI(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new TT(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=aI(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new hI({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=sI(e),Bg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:eI(this.alphaInitializer),alphaRegularizer:mM(this.alphaRegularizer),alphaConstraint:PI(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}xM.className="PReLU",Ix(xM);let vM=class extends gI{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new _T(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sI(e);return Nf(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};vM.className="ELU",Ix(vM);class wM extends gI{constructor(e){super(e??{}),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=sI(e);return im(n,em(ng(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}wM.className="ThresholdedReLU",Ix(wM);class SM extends gI{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new rM).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return ep((()=>{let n=sI(e);const r=t.mask;if(null!=r){const e=im(vg(Lg(n.shape),em(r,n.dtype)),Uf(-1e9));n=rm(n,e)}return this.axis instanceof Array?this.axis.length>1?jf(vg(n,Sg(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function TM(e,t,n){if("number"==typeof e)return MT(e,t);if(e.length!==t)throw new TT(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!h_(s))throw new TT(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function _M(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function IM(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+m_([n-t,0]);else{if("same"!==r)throw new TT(`Unsupport padding mode: ${r}.`);e*=t}return e}function CM(e,t){return ep((()=>(n_(t),"channelsFirst"===t?ob(e,[0,2,3,1]):e)))}function MM(e,t){return ep((()=>(n_(t),"channelsFirst"===t?ob(e,[0,2,3,4,1]):e)))}function EM(e,t,n,r=[1,1],s="valid",a,i,o=null){return ep((()=>{if(null==a&&(a="channelsLast"),n_(a),3!==e.rank&&4!==e.rank)throw new TT(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new TT(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=CM(e,a);if("causal"===s)throw new _T("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=gb({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=ob(l,[0,3,1,2])),l}))}SM.className="Softmax",Ix(SM);class NM extends gI{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",NM.verifyArgs(t),this.rank=e,BT(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new _T(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=TM(t.kernelSize,e,"kernelSize"),this.strides=TM(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,r_(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,n_(this.dataFormat),this.activation=uM(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=tI(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=OI(t.biasConstraint),this.biasRegularizer=gM(t.biasRegularizer),this.activityRegularizer=gM(t.activityRegularizer),this.dilationRate=TM(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new TT(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new TT(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new TT(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ET("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!UT(e.kernelSize,"number",1,3))throw new TT(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:oM(this.activation),useBias:this.useBias,biasInitializer:eI(this.biasInitializer),biasRegularizer:mM(this.biasRegularizer),activityRegularizer:mM(this.activityRegularizer),biasConstraint:PI(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class kM extends NM{constructor(e,t){super(e,t),this.kernel=null,kM.verifyArgs(t),this.filters=t.filters,BT(this.filters,"filters"),this.kernelInitializer=tI(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=OI(t.kernelConstraint),this.kernelRegularizer=gM(t.kernelRegularizer)}build(e){e=aI(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new TT(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ep((()=>{let t;e=sI(e);const n=null==this.bias?null:this.bias.read(),r=$T(this.activation.getClassName());if(null!=r&&2===this.rank)t=EM(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return ep((()=>{if(null==a&&(a="channelsLast"),n_(a),3!==e.shape.length)throw new TT(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new TT(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new TT(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=ob(e,[0,2,1])),"causal"===s)throw new _T("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=sf(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=R_(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=EM(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new _T("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return ep((()=>{if(null==a&&(a="channelsLast"),n_(a),4!==e.rank&&5!==e.rank)throw new TT(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new TT(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=MM(e,a);if("causal"===s)throw new _T("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=lf(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=R_(o,n)),"channelsFirst"===a&&(o=ob(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=aI(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=_M(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:eI(this.kernelInitializer),kernelRegularizer:mM(this.kernelRegularizer),kernelConstraint:PI(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new TT(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class RM extends kM{constructor(e){super(2,e),RM.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!UT(e.kernelSize,"number",1,2))throw new TT(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}RM.className="Conv2D",Ix(RM);class LM extends kM{constructor(e){super(3,e),LM.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new TT(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}LM.className="Conv3D",Ix(LM);class AM extends RM{constructor(e){if(super(e),this.inputSpec=[new hI({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new TT(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=aI(e)).length)throw new TT("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new TT("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hI({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ep((()=>{let t=sI(e);if(4!==t.shape.length)throw new TT(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,IM(i,c,l,this.padding),IM(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ob(t,[0,2,3,1]));let p=of(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ob(p,[0,3,1,2])),null!=this.bias&&(p=R_(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=aI(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=IM(t[r],o,a,this.padding),t[s]=IM(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}AM.className="Conv2DTranspose",Ix(AM);class PM extends LM{constructor(e){if(super(e),this.inputSpec=[new hI({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new TT(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=aI(e)).length)throw new TT("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new TT("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new hI({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ep((()=>{let t=sI(e);if(5!==t.shape.length)throw new TT(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],m=this.strides[1],f=this.strides[2],g=[r,IM(o,p,c,this.padding),IM(l,m,h,this.padding),IM(u,f,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ob(t,[0,2,3,4,1]));let y=cf(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=ob(y,[0,4,1,2,3])),null!==this.bias&&(y=R_(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=aI(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=IM(t[r],u,i,this.padding),t[s]=IM(t[s],c,o,this.padding),t[a]=IM(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}PM.className="Conv3DTranspose",Ix(PM);class DM extends kM{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new TT("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new TT("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new TT(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=tI(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=gM(t.depthwiseRegularizer),this.depthwiseConstraint=OI(t.depthwiseConstraint),this.pointwiseInitializer=tI(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=gM(t.pointwiseRegularizer),this.pointwiseConstraint=OI(t.pointwiseConstraint)}build(e){if((e=aI(e)).length<this.rank+2)throw new TT(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new TT(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new hI({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ep((()=>{let t;if(e=sI(e),1===this.rank)throw new _T("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ob(e,[0,2,3,1])),t=My(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=R_(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ob(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=eI(this.depthwiseInitializer),e.pointwiseInitializer=eI(this.pointwiseInitializer),e.depthwiseRegularizer=mM(this.depthwiseRegularizer),e.pointwiseRegularizer=mM(this.pointwiseRegularizer),e.depthwiseConstraint=PI(this.depthwiseConstraint),e.pointwiseConstraint=PI(this.pointwiseConstraint),e}}DM.className="SeparableConv";class OM extends DM{constructor(e){super(2,e)}}OM.className="SeparableConv2D",Ix(OM);class GM extends kM{constructor(e){super(1,e),GM.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!UT(e.kernelSize,"number",1,1))throw new TT(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}GM.className="Conv1D",Ix(GM);class zM extends gI{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ep((()=>{if(e=sI(e),"channelsLast"===this.dataFormat){const t=S_(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return S_(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=S_(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return S_(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}zM.className="Cropping2D",Ix(zM);class FM extends gI{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,n_(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){VT(QT,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ep((()=>{let t=sI(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ob(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?gx.resizeNearestNeighbor(t,[e,r]):gx.resizeBilinear(t,[e,r]);return ob(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?gx.resizeNearestNeighbor(t,[e,r]):gx.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}FM.className="UpSampling2D",Ix(FM);class WM extends NM{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=tI(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=OI(e.depthwiseConstraint),this.depthwiseRegularizer=gM(e.depthwiseRegularizer)}build(e){if((e=aI(e)).length<4)throw new TT(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new TT(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ep((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return ep((()=>{null==s&&(s="channelsLast"),n_(s);let i=CM(e,s);if(4!==e.rank)throw new TT(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new TT(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=yf(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=ob(i,[0,3,1,2])),i}))}(e=sI(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=R_(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=aI(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=_M(t,this.kernelSize[0],this.padding,this.strides[0]),a=_M(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=eI(this.depthwiseInitializer),e.depthwiseRegularizer=mM(this.depthwiseRegularizer),e.depthwiseConstraint=PI(this.depthwiseRegularizer),e}}function VM(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new TT("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function UM(e,t,n,r=!1,s,a,i=!1,o=!1){return ep((()=>{const l=t.shape.length;if(l<3)throw new TT(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(f_(2,l));if(t=ob(t,u),null!=a)throw new _T("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=em(em(s,"bool"),"float32")).rank===l-1&&(s=Yf(s,-1)),s=ob(s,u)),r&&(t=Ty(t,0),null!=s&&(s=Ty(s,0)));const c=[];let h,d=n;const p=t.shape[0],m=sb(t);let f,g;null!=s&&(f=sb(s));for(let t=0;t<p;++t){const n=m[t],r=ep((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=ep((()=>{const e=f[t],n=vg(Fg(e),e);return{output:rm(im(r[0],e),im(d[0],n)),newStates:d.map(((t,s)=>rm(im(r[1][s],e),im(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=By(c,1)),[h,g,d]}))}WM.className="DepthwiseConv2D",Ix(WM);class BM extends gI{constructor(e){let t;if(super(e),null==e.cell)throw new TT("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new QM({cells:e.cell}):e.cell,null==t.stateSize)throw new TT("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new hI({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?f_(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){nI(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ep((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new _T("Constants support is not implemented in RNN yet.");nI(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new hI({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!$i(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new TT(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new hI({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){ep((()=>{if(!this.stateful)throw new wT("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new TT("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rg([n,e]))):this.states_=[Rg([n,this.cell.stateSize])];else if(null==e)tp(this.states_),null!=this.keptStates&&(tp(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Rg([n,e]))):this.states_[0]=Rg([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new TT(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):tp(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!$i(r.shape,a))throw new TT(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>np(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=VM(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new hI({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof dI){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ep((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=sI(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new TT(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=UM(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ep((()=>{let t=Rg(e.shape);return t=$f(t,[1,2]),t=x_(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?I_(t,[1,e]):t)):this.cell.stateSize>1?[I_(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===BM.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=KI(t.cell,n);return new e(Object.assign(t,{cell:r}))}}BM.className="RNN",Ix(BM);class XM extends gI{}class $M extends XM{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,BT(this.units,"units"),this.activation=uM(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=tI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=tI(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=tI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gM(e.kernelRegularizer),this.recurrentRegularizer=gM(e.recurrentRegularizer),this.biasRegularizer=gM(e.biasRegularizer),this.kernelConstraint=OI(e.kernelConstraint),this.recurrentConstraint=OI(e.recurrentConstraint),this.biasConstraint=OI(e.biasConstraint),this.dropout=p_([1,m_([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=p_([1,m_([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=aI(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ep((()=>{if(2!==e.length)throw new TT(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=JM({ones:()=>Fg(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=JM({ones:()=>Fg(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=M_(null!=a?im(e,a):e,this.kernel.read()),null!=this.bias&&(s=R_(s,this.bias.read())),null!=i&&(n=im(n,i));let o=rm(s,M_(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:oM(this.activation),useBias:this.useBias,kernelInitializer:eI(this.kernelInitializer),recurrentInitializer:eI(this.recurrentInitializer),biasInitializer:eI(this.biasInitializer),kernelRegularizer:mM(this.kernelRegularizer),recurrentRegularizer:mM(this.recurrentRegularizer),biasRegularizer:mM(this.biasRegularizer),activityRegularizer:mM(this.activityRegularizer),kernelConstraint:PI(this.kernelConstraint),recurrentConstraint:PI(this.recurrentConstraint),biasConstraint:PI(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}$M.className="SimpleRNNCell",Ix($M);class HM extends BM{constructor(e){e.cell=new $M(e),super(e)}call(e,t){return ep((()=>{null!=this.cell.dropoutMask&&(tp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}HM.className="SimpleRNN",Ix(HM);class ZM extends XM{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new TT("GRUCell does not support reset_after parameter set to true.");this.units=e.units,BT(this.units,"units"),this.activation=uM(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uM(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=tI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=tI(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=tI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=gM(e.kernelRegularizer),this.recurrentRegularizer=gM(e.recurrentRegularizer),this.biasRegularizer=gM(e.biasRegularizer),this.kernelConstraint=OI(e.kernelConstraint),this.recurrentConstraint=OI(e.recurrentConstraint),this.biasConstraint=OI(e.biasConstraint),this.dropout=p_([1,m_([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=p_([1,m_([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=aI(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ep((()=>{if(2!==e.length)throw new TT(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=JM({ones:()=>Fg(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=JM({ones:()=>Fg(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=im(e,s[0]));let u=M_(e,this.kernel.read());this.useBias&&(u=R_(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=im(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Fy(c,[2*this.units,this.units],c.rank-1),p=M_(r,h),[m,f,g]=Fy(u,3,u.rank-1),[y,b]=Fy(p,2,p.rank-1);i=this.recurrentActivation.apply(rm(m,y)),o=this.recurrentActivation.apply(rm(f,b));const x=M_(im(o,r),d);l=this.activation.apply(rm(g,x));const v=rm(im(i,r),im(rm(1,yg(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:oM(this.activation),recurrentActivation:oM(this.recurrentActivation),useBias:this.useBias,kernelInitializer:eI(this.kernelInitializer),recurrentInitializer:eI(this.recurrentInitializer),biasInitializer:eI(this.biasInitializer),kernelRegularizer:mM(this.kernelRegularizer),recurrentRegularizer:mM(this.recurrentRegularizer),biasRegularizer:mM(this.biasRegularizer),activityRegularizer:mM(this.activityRegularizer),kernelConstraint:PI(this.kernelConstraint),recurrentConstraint:PI(this.recurrentConstraint),biasConstraint:PI(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}ZM.className="GRUCell",Ix(ZM);class KM extends BM{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ZM(e),super(e)}call(e,t){return ep((()=>{null!=this.cell.dropoutMask&&(tp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}KM.className="GRU",Ix(KM);class jM extends XM{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,BT(this.units,"units"),this.activation=uM(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=uM(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=tI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=tI(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=tI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=gM(e.kernelRegularizer),this.recurrentRegularizer=gM(e.recurrentRegularizer),this.biasRegularizer=gM(e.biasRegularizer),this.kernelConstraint=OI(e.kernelConstraint),this.recurrentConstraint=OI(e.recurrentConstraint),this.biasConstraint=OI(e.biasConstraint),this.dropout=p_([1,m_([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=p_([1,m_([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=aI(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new(t=class extends O_{apply(t,r){const s=e.apply([n]),a=(new z_).apply([n]),i=e.apply([2*n]);return __(__(s,a),i)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ep((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new TT(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=JM({ones:()=>Fg(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=JM({ones:()=>Fg(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=im(e,a[0]));let h=M_(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=im(r,i[0])),h=rm(h,M_(r,this.recurrentKernel.read())),this.useBias&&(h=R_(h,this.bias.read()));const[d,p,m,f]=Fy(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=rm(im(l,s),im(o,this.activation.apply(m))),c=this.recurrentActivation.apply(f);const g=im(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:oM(this.activation),recurrentActivation:oM(this.recurrentActivation),useBias:this.useBias,kernelInitializer:eI(this.kernelInitializer),recurrentInitializer:eI(this.recurrentInitializer),biasInitializer:eI(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:mM(this.kernelRegularizer),recurrentRegularizer:mM(this.recurrentRegularizer),biasRegularizer:mM(this.biasRegularizer),activityRegularizer:mM(this.activityRegularizer),kernelConstraint:PI(this.kernelConstraint),recurrentConstraint:PI(this.recurrentConstraint),biasConstraint:PI(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}jM.className="LSTMCell",Ix(jM);class YM extends BM{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jM(e),super(e)}call(e,t){return ep((()=>{null!=this.cell.dropoutMask&&(tp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}YM.className="LSTM",Ix(YM);class QM extends XM{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ep((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;nI(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{i_(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(KI(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return uI(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}cI(t)}}function JM(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):L_(t(),n),o=()=>A_(i,t,r);return!s||s<=1?np(o().clone()):Array(s).fill(void 0).map(o).map((e=>np(e.clone())))}QM.className="StackedRNNCells",Ix(QM);class qM extends BM{constructor(e){if(e.unroll)throw new _T("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new _T("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new hI({ndim:5})]}call(e,t){return ep((()=>{if(null!=this.cell.dropoutMask&&(tp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(tp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new TT("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ep((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Rg([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){ep((()=>{if(!this.stateful)throw new wT("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new TT("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rg(s))):this.states_=[Rg(s)];else if(null==e)tp(this.states_),null!=this.keptStates&&(tp(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Rg(s))):this.states_[0]=Rg(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new TT(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):tp(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!$i(n.shape,r))throw new TT(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>np(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=_M(l,r[0],s,a[0],i[0]),h=_M(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}qM.className="ConvRNN2D";class eE extends jM{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,BT(this.filters,"filters"),this.kernelSize=TM(n,2,"kernelSize"),this.kernelSize.forEach((e=>BT(e,"kernelSize"))),this.strides=TM(r||1,2,"strides"),this.strides.forEach((e=>BT(e,"strides"))),this.padding=s||"valid",r_(this.padding),this.dataFormat=a||"channelsLast",n_(this.dataFormat),this.dilationRate=TM(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>BT(e,"dilationRate")))}build(e){var t;e=aI(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new TT(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends O_{apply(e,t){return T_([n.apply([r]),Lg([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ep((()=>{if(3!==e.length)throw new TT(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=JM({ones:()=>Fg(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?im(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=JM({ones:()=>Fg(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),m=o(s,d,1),f=o(s,d,2),g=o(s,d,3);const[y,b,x,v]=Fy(this.kernel.read(),4,3),[w,S,T,_]=this.useBias?Fy(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,S,this.padding),c=this.inputConv(c,x,T,this.padding),h=this.inputConv(h,v,_,this.padding);const[I,C,M,E]=Fy(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,I),m=this.recurrentConv(m,C),f=this.recurrentConv(f,M),g=this.recurrentConv(g,E);const N=this.recurrentActivation.apply(rm(l,p)),k=this.recurrentActivation.apply(rm(u,m)),R=rm(im(k,a),im(N,this.activation.apply(rm(c,f)))),L=im(this.recurrentActivation.apply(rm(h,g)),this.activation.apply(R));return[L,L,R]}))}getConfig(){const e=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(super.getConfig(),["units"]),t={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},e),t)}inputConv(e,t,n,r){const s=rf(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?R_(s,n,this.dataFormat):s}recurrentConv(e,t){return rf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}eE.className="ConvLSTM2DCell",Ix(eE);class tE extends qM{constructor(e){const t=new eE(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}tE.className="ConvLSTM2D",Ix(tE);class nE extends gI{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return A_((()=>L_(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}nE.className="Dropout",Ix(nE);class rE extends nE{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}rE.className="SpatialDropout1D",Ix(rE);class sE extends gI{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,BT(this.units,"units"),this.activation=uM(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=tI(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=tI(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=OI(e.kernelConstraint),this.biasConstraint=OI(e.biasConstraint),this.kernelRegularizer=gM(e.kernelRegularizer),this.biasRegularizer=gM(e.biasRegularizer),this.activityRegularizer=gM(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=aI(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=aI(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e),r=$T(this.activation.getClassName());let s;return null!=r?s=M_(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=M_(n,this.kernel.read()),null!=this.bias&&(s=R_(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:oM(this.activation),useBias:this.useBias,kernelInitializer:eI(this.kernelInitializer),biasInitializer:eI(this.biasInitializer),kernelRegularizer:mM(this.kernelRegularizer),biasRegularizer:mM(this.biasRegularizer),activityRegularizer:mM(this.activityRegularizer),kernelConstraint:PI(this.kernelConstraint),biasConstraint:PI(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sE.className="Dense",Ix(sE);class aE extends gI{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=aI(e);for(const t of e.slice(1))if(null==t)throw new TT(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],d_(e,1)]}call(e,t){return ep((()=>{this.invokeCallHook(e,t);let n=sI(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ob(n,e)}return function(e){if(e.rank<=1)throw new TT(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],d_(e.shape,1)];return Pm(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}aE.className="Flatten",Ix(aE);class iE extends gI{constructor(e){super(e),this.supportsMasking=!0,this.activation=uM(e.activation)}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e);return this.activation.apply(n)}))}getConfig(){const e={activation:oM(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}iE.className="Activation",Ix(iE);class oE extends gI{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ep((()=>function(e,t){return ep((()=>{if(2!==e.shape.length)throw new TT(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return I_(x_(e,1),[1,t,1])}))}(e=sI(e),this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}oE.className="RepeatVector",Ix(oE);class lE extends gI{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new TT("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=d_(e);if(null!==a){if(0===s||i%s!=0)throw new TT(n);r[a]=i/s}else if(i!==s)throw new TT(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Pm(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}lE.className="Reshape",Ix(lE);class uE extends gI{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=f_(1,e.dims.length+1);if(!$i(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new hI({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=aI(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return ob(sI(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}uE.className="Permute",Ix(uE);class cE extends gI{constructor(e){super(e??{}),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=sI(e);return hm(Gg(n,this.maskValue),-1)}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e),r=hm(Gg(n,this.maskValue),-1,!0);return im(n,em(r,n.dtype))}))}}cE.className="Masking",Ix(cE);class hE extends gI{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(RT(e.inputLength))}this.inputDim=e.inputDim,BT(this.inputDim,"inputDim"),this.outputDim=e.outputDim,BT(this.outputDim,"outputDim"),this.embeddingsInitializer=tI(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=gM(e.embeddingsRegularizer),this.activityRegularizer=gM(e.activityRegularizer),this.embeddingsConstraint=OI(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ep((()=>this.maskZero?(e=sI(e),Gg(e,If(e))):null))}computeOutputShape(e){if(e=aI(e),null==this.inputLength)return[...e,this.outputDim];const t=RT(this.inputLength);if(t.length!==e.length-1)throw new TT(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new TT(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ep((()=>{this.invokeCallHook(e,t);let n=sI(e);"int32"!==n.dtype&&(n=b_(n,"int32"));const r=E_(this.embeddings.read(),Pm(n,[n.size]));return Pm(r,aI(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:eI(this.embeddingsInitializer),embeddingsRegularizer:mM(this.embeddingsRegularizer),activityRegularizer:mM(this.activityRegularizer),embeddingsConstraint:PI(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}hE.className="Embedding",Ix(hE);class dE extends gI{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _T}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new TT("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[aI(e)]),e.length<2)throw new TT(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=FT(t),t.length>1)throw new TT(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===FT(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ep((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=m_(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=x_(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=Pm(r,[s].concat(d_(e.slice(1))));i=ob(i,[1,0]),i=Pm(i,a),t.push(i),n=!0}else if(e>1){const s=f_(1,e).concat([0]);t.push(ob(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Pm(ob(Pm(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(f_(0,s-1));r=ob(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=FT(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ep((()=>{if(null==t)return null;if(!Array.isArray(t))throw new TT("`mask` should be an Array");if(!Array.isArray(e))throw new TT("`inputs` should be an Array");if(t.length!==e.length)throw new TT(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Yf(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Tg(n,t[e]);return n}))}}class pE extends dE{constructor(e){super(e)}mergeFunction(e){return ep((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rm(t,e[n]);return t}))}}pE.className="Add",Ix(pE);class mE extends dE{constructor(e){super(e)}mergeFunction(e){return ep((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=im(t,e[n]);return t}))}}mE.className="Multiply",Ix(mE);class fE extends dE{constructor(e){super(e)}mergeFunction(e){return ep((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=rm(t,e[n]);return im(1/e.length,t)}))}}fE.className="Average",Ix(fE);class gE extends dE{constructor(e){super(e)}mergeFunction(e){return ep((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ng(t,e[n]);return t}))}}gE.className="Maximum",Ix(gE);class yE extends dE{constructor(e){super(e)}mergeFunction(e){return ep((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ag(t,e[n]);return t}))}}yE.className="Minimum",Ix(yE);class bE extends dE{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new TT("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if($i(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new TT("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ep((()=>T_(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new TT("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new TT("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new TT("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new TT(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ep((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(em(Fg(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Yf(t[n],-1)):r.push(t[n]);const s=Gm(r,this.axis);return cm(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function xE(e,t){for(;e<0;)e+=t;return e}bE.className="Concatenate",Ix(bE);class vE extends dE{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Wi(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new _T("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new TT(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new TT(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>xE(t,e[n].shape.length))):[xE(this.axes,n.shape.length),xE(this.axes,r.shape.length)],this.normalize&&(n=jI(n,t[0]),r=jI(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new _T("batchDot is not implemented for tensors of 4D or higher rank yet");if(Wi(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Wi(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new _T("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return ep((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Pm(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Pm(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?$f(im(e,t),a[0]):$f(im(ob(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=zm(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Uy(i,t)}return 1===i.shape.length&&(i=Yf(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[xE(this.axes,e.length),xE(this.axes,t.length)],n}computeOutputShape(e){Wi(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new _T("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}vE.className="Dot",Ix(vE);class wE extends gI{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e);return A_((()=>rm(C_(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}wE.className="GaussianNoise",Ix(wE);class SE extends gI{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ep((()=>{this.invokeCallHook(e,t);const n=sI(e);return this.rate>0&&this.rate<1?A_((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return im(n,C_(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}SE.className="GaussianDropout",Ix(SE);class TE extends gI{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||sI(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ep((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return A_((()=>{const t=sI(e),r=-1.7580993408473766;let s=rg(yy(n),this.rate);s=b_(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=rm(im(t,s),im(rm(s,-1),r));return rm(im(o,a),i)}),(()=>sI(e)),t.training||!1)}return e}))}}function _E(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=$m(e,t,n,r,s,a);else if(3===e.rank)i=Hm(e,t,n,r,s,a);else{if(4!==e.rank)throw new _T(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Zm(e,t,n,r,s,a)}return i}TE.className="AlphaDropout",Ix(TE);class IE extends gI{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=tI(e.betaInitializer||"zeros"),this.gammaInitializer=tI(e.gammaInitializer||"ones"),this.movingMeanInitializer=tI(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=tI(e.movingVarianceInitializer||"ones"),this.betaConstraint=OI(e.betaConstraint),this.gammaConstraint=OI(e.gammaConstraint),this.betaRegularizer=gM(e.betaRegularizer),this.gammaRegularizer=gM(e.gammaRegularizer)}build(e){e=aI(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new TT(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new hI({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ep((()=>{const n=null!=t.training&&t.training,r=sI(e),s=r.shape,a=s.length,i=f_(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=MT(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!$i(u,f_(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Pm(this.movingMean.read(),l),t=Pm(this.movingVariance.read(),l),n=this.center?Pm(this.beta.read(),l):null,s=this.scale?Pm(this.gamma.read(),l):null;return _E(r,e,t,n,s,this.epsilon)}return _E(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return $i(r.slice().sort(),f_(0,e.rank-1))?function(e,t,n,r,s=.001){return ep((()=>{const a=Og(e,r),i=a.mean,o=a.variance;return[_E(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return ep((()=>{const a=Og(e,r),i=a.mean,o=a.variance,l=[];for(const t of f_(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Pm(i,l),c=Pm(o,l),h=null==t?null:Pm(t,l),d=null==n?null:Pm(n,l);return[_E(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{ep((()=>{const r=1-n,s=e.read(),a=im(vg(s,t),r);e.write(vg(s,a))}))};return(()=>{m(this.movingMean,d,this.momentum),m(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:eI(this.betaInitializer),gammaInitializer:eI(this.gammaInitializer),movingMeanInitializer:eI(this.movingMeanInitializer),movingVarianceInitializer:eI(this.movingVarianceInitializer),betaRegularizer:mM(this.betaRegularizer),gammaRegularizer:mM(this.gammaRegularizer),betaConstraint:PI(this.betaConstraint),gammaConstraint:PI(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}IE.className="BatchNormalization",Ix(IE);class CE extends gI{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=tI(e.betaInitializer||"zeros"),this.gammaInitializer=tI(e.gammaInitializer||"ones"),this.betaRegularizer=gM(e.betaRegularizer),this.gammaRegularizer=gM(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=aI(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==FT(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=sI(e),r=n.shape,s=r.length;return ep((()=>{let{mean:e,variance:t}=Og(n,this.axis,!0);const a=MT(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?Pm(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=Jf(e,u),t=Jf(t,u),null!=o&&(o=Jf(o,c)),null!=l&&(l=Jf(l,c)),_E(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:eI(this.betaInitializer),gammaInitializer:eI(this.gammaInitializer),betaRegularizer:mM(this.betaRegularizer),gammaRegularizer:mM(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}CE.className="LayerNormalization",Ix(CE);class ME extends gI{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new TT(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new TT(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new TT(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new hI({ndim:4})]}computeOutputShape(e){let t,n;return e=aI(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ep((()=>function(e,t,n){return ep((()=>{if(4!==e.rank)throw new TT(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new TT("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new TT(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Wg(e,r)}))}(sI(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function EE(e,t,n,r,s,a){return ep((()=>{let i;n_(s),s_(a),r_(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=CM(e,s);const o="same"===r?"same":"valid";return i="max"===a?Mg(e,t,n,o):Dm(e,t,n,o),"channelsFirst"===s&&(i=ob(i,[0,3,1,2])),i}))}function NE(e,t,n,r,s,a){return ep((()=>{let i;n_(s),s_(a),r_(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=MM(e,s);const o="same"===r?"same":"valid";return i="max"===a?Eg(e,t,n,o):Om(e,t,n,o),"channelsFirst"===s&&(i=ob(i,[0,4,1,2,3])),i}))}ME.className="ZeroPadding2D",Ix(ME);class kE extends gI{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new TT(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(BT(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new TT(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}BT(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,r_(this.padding),this.inputSpec=[new hI({ndim:3})]}computeOutputShape(e){const t=_M((e=aI(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ep((()=>{this.invokeCallHook(e,t),e=x_(sI(e),2);const n=this.poolingFunction(sI(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Uy(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class RE extends kE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return n_(s),r_(r),EE(e,t,n,r,s,"max")}}RE.className="MaxPooling1D",Ix(RE);class LE extends kE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return n_(s),r_(r),EE(e,t,n,r,s,"avg")}}LE.className="AveragePooling1D",Ix(LE);class AE extends gI{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new TT(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];BT(this.poolSize,"poolSize"),BT(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,n_(this.dataFormat),r_(this.padding),this.inputSpec=[new hI({ndim:4})]}computeOutputShape(e){e=aI(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=_M(t,this.poolSize[0],this.padding,this.strides[0]),n=_M(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ep((()=>(this.invokeCallHook(e,t),this.poolingFunction(sI(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class PE extends AE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return n_(s),r_(r),EE(e,t,n,r,s,"max")}}PE.className="MaxPooling2D",Ix(PE);class DE extends AE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return n_(s),r_(r),EE(e,t,n,r,s,"avg")}}DE.className="AveragePooling2D",Ix(DE);class OE extends gI{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new TT(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];BT(this.poolSize,"poolSize"),BT(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,n_(this.dataFormat),r_(this.padding),this.inputSpec=[new hI({ndim:5})]}computeOutputShape(e){e=aI(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=_M(t,this.poolSize[0],this.padding,this.strides[0]),n=_M(n,this.poolSize[1],this.padding,this.strides[1]),r=_M(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ep((()=>(this.invokeCallHook(e,t),this.poolingFunction(sI(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class GE extends OE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return n_(s),r_(r),NE(e,t,n,r,s,"max")}}GE.className="MaxPooling3D",Ix(GE);class zE extends OE{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return n_(s),r_(r),NE(e,t,n,r,s,"avg")}}zE.className="AveragePooling3D",Ix(zE);class FE extends gI{constructor(e){super(e),this.inputSpec=[new hI({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new _T}}class WE extends FE{constructor(e){super(e||{})}call(e,t){return ep((()=>{const t=sI(e);return kg(t,1)}))}}WE.className="GlobalAveragePooling1D",Ix(WE);class VE extends FE{constructor(e){super(e||{})}call(e,t){return ep((()=>{const t=sI(e);return Ff(t,1)}))}}VE.className="GlobalMaxPooling1D",Ix(VE);class UE extends gI{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,n_(this.dataFormat),this.inputSpec=[new hI({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new _T}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class BE extends UE{call(e,t){return ep((()=>{const t=sI(e);return"channelsLast"===this.dataFormat?kg(t,[1,2]):kg(t,[2,3])}))}}BE.className="GlobalAveragePooling2D",Ix(BE);class XE extends UE{call(e,t){return ep((()=>{const t=sI(e);return"channelsLast"===this.dataFormat?Ff(t,[1,2]):Ff(t,[2,3])}))}}XE.className="GlobalMaxPooling2D",Ix(XE);class $E extends gI{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=KI(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class HE extends $E{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=aI(e)).length<3)throw new TT(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=aI(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ep((()=>UM(((e,n)=>[sI(this.layer.call(e,t)),[]]),e=sI(e),[],!1,null,null,!1,!0)[1]))}}HE.className="TimeDistributed",Ix(HE);class ZE extends $E{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=KI(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=KI(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){VT(e_,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new _T("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState&&(r=s.slice(1)),t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):kT(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=VM(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new TT("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new hI({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new _T("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof dI;for(const e of a)if(e instanceof dI!==o)throw new TT("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return ep((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ty(s,1)),"concat"===this.mergeMode?i=T_([r,s]):"sum"===this.mergeMode?i=rm(r,s):"ave"===this.mergeMode?i=im(.5,rm(r,s)):"mul"===this.mergeMode?i=im(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){i_(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),i_(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=KI(t.layer);if(delete t.layer,null!=t.numConstants)throw new _T("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}ZE.className="Bidirectional",Ix(ZE);class KE extends gI{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ep((()=>("float32"!==(e=sI(e)).dtype&&(e=b_(e,"float32")),rm(im(e,this.scale),this.offset))))}}KE.className="Rescaling",Ix(KE);const{resizeBilinear:jE,cropAndResize:YE}=gx;class QE extends gI{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return ep((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(u=!0,l=By([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=jd(h,[h.length,4]),p=by(0,h.length,1,"int32"),m=YE(l,d,p,[r,s],"nearest");return b_(u?sI(sb(m)):m,o)}))}upsize(e,t,n,r){return ep((()=>b_(jE(e,[t,n]),r)))}call(e,t){return ep((()=>{const t=sI(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=aI(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}QE.className="CenterCrop",Ix(QE);class JE extends gI{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=aI(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ep((()=>{let n;if("int32"!==(e=sI(e)).dtype&&(e=b_(e,"int32")),typeof t.countWeights<"u"){if("count"!==this.outputMode)throw new TT(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=sI(t.countWeights)}const r=Ff(e),s=Wf(e),a=ng(this.numTokens,r).bufferSync().get(0),i=rg(s,0).bufferSync().get(0);if(!a||!i)throw new TT(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=sI(e);if("int32"!==s.dtype&&(s=b_(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=Yf(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Yf(s,-1)),s.rank>2)throw new TT(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=ff(s,typeof r<"u"&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return im(o,r);throw new TT("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}JE.className="CategoryEncoding",Ix(JE);const qE=new Set(["bilinear","nearest"]);class eN extends gI{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!qE.has(e.interpolation))throw new TT(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){const t=(e=aI(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ep((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return gx.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return gx.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...qE]} are supported`)}))}}eN.className="Resizing",Ix(eN);class tN{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}tN.className="RandomSeed";class nN extends gI{constructor(e){super(e),this.randomGenerator=new tN(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}nN.className="BaseRandomLayer";const rN=new Set(["bilinear","nearest"]);class sN extends nN{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new TT(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new TT(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new TT(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!rN.has(n))throw new TT(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=aI(e))[2];return[this.imgHeight,-1,t]}call(e,t){return ep((()=>{const t=sI(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=yy([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return gx.resizeBilinear(e,s);case"nearest":return gx.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...rN]} are supported`)}}))}}var aN,iN,oN;function lN(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(pN(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=lN(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function uN(e,t=hN){return cN(e,t)}function cN(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(pN(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=e.map((e=>e[a])),i=cN(r,t,n);s[a]=i}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function hN(e){return null===e?null:pN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function dN(e,t){const n=new Map;lN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(To(t)){const r=await t;n.set(e,r)}}return lN(e,t,n)}function pN(e){let t=!1;if(Mo().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=require("string_decoder");t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ud)&&!(e instanceof Promise)&&!t)}function mN(e){return function(e,t){return lN(e,t)}(e,fN)}function fN(e){return e instanceof ud?{value:e.clone(),recurse:!1}:pN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}sN.className="RandomWidth",Ix(sN),Mo().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(aN||(aN={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(iN||(iN={}));class gN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class yN extends gN{constructor(){super(yN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function bN(e){return new wN(e)}function xN(e){return new SN(e)}yN.INITIAL_CAPACITY=32;class vN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new NN(this,e)}filter(e){return new MN(this,e)}map(e){return new EN(this,e)}mapAsync(e){return new kN(this,e)}serialMapAsync(e){return new kN(this,e).serial()}flatmap(e){return new LN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new CN(this,e,t)}columnMajorBatch(e,t=!0,n=hN){return this.rowMajorBatch(e,t).map((e=>uN(e,n)))}concatenate(e,t){return new AN(bN([this,e]),t)}take(e){return e<0||null==e?this:new IN(this,e)}skip(e){return e<0||null==e?this:new _N(this,e)}prefetch(e){return new DN(this,e)}shuffle(e,t){return new ON(this,e,t)}serial(){return new TN(this)}}class wN extends vN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:mN(e),done:!1}}}class SN extends vN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class TN extends vN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class _N extends vN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;tp(e.value)}return this.upstream.next()}}class IN extends vN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class CN extends vN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class MN extends vN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;tp(e.value)}}}class EN extends vN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cd(e.value),n=this.transform(e.value),r=Cd(n);for(const e of t)Id(e,r)||e.dispose();return{value:n,done:!1}}}class NN extends vN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class kN extends vN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Cd(e.value),n=await this.transform(e.value),r=Cd(n);for(const e of t)Id(e,r)||e.dispose();return{value:n,done:!1}}}class RN extends vN{constructor(){super(),this.outputQueue=new yN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class LN extends RN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Cd(e.value),n=this.transform(e.value),r=Cd(n);this.outputQueue.pushAll(n);for(const e of t)Id(e,r)||e.dispose();return!0}}class AN extends vN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(oN||(oN={}));class PN extends vN{constructor(e,t=oN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await dN(this.iterators,(function(e){return e instanceof vN?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case oN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case oN.SHORTEST:return{value:null,done:!0};case oN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class DN extends vN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new gN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ON extends DN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=dy.alea(n||$h().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class GN{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return Wi(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),zN((async()=>(await n.iterator()).columnMajorBatch(e,t,FN)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,zN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,zN((async()=>(await t.iterator()).filter((t=>ep((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return zN((async()=>(await t.iterator()).map((t=>ep((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return zN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return zN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,zN((async()=>function(e){return new AN(e,void 0)}(xN((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,zN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=dy.alea(t||$h().toString());return zN((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,zN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function zN(e,t=null){return new class extends GN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function FN(e){return null===e?null:function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof ud||jh(e)}(e[0])?{value:WN(e),recurse:!1}:{value:null,recurse:!0}}function WN(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ud?By(e):jd(e)}function VN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Wi("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}GN.MAX_BUFFER_SIZE=1e4;const UN=ib;class BN extends Ai{nextDataId(){return BN.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Li(this,Jd())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Mo().get("IS_NODE")&&$c("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&io(n[0])){const s=n.map((e=>Zh(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Vv(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):go(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Kh(e)));return qp(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return qp(e.shape,e.dtype,t)}makeOutput(e,t,n){return Jd().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=$h();return e(),{kernelMs:$h()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){VN([e],"where");const t=this.readSync(e.dataId);return UN(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function XN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}BN.nextDataId=0;const $N={kernelName:Lo,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;VN(t,"abs");let r=new Float32Array(Bi(t.shape));return r=XN(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function HN(e){return(t,n,r,s,a)=>{const i=wf(t,n),o=i.length,l=po(i),u=qi(a,Bi(i)),c=t.length,h=n.length,d=po(t),p=po(n),m=xf(t,i),f=xf(n,i);if(m.length+f.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=So(t,o,l),a=n.slice(-c);m.forEach((e=>a[e]=0));const i=wo(a,c,d),g=n.slice(-h);f.forEach((e=>g[e]=0));const y=wo(g,h,p);u[t]=e(r[i],s[y])}return[u,i]}}function ZN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const KN={kernelName:al,backendName:"cpu",kernelFunc:ZN};function jN(e,t,n="float32"){if("complex64"===n)return ZN({inputs:{real:jN(e,t,"float32"),imag:jN(e,t,"float32")},backend:e});const r=bo(Bi(t),n);return e.makeTensorInfo(t,n,r)}function YN(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const QN={kernelName:Kl,backendName:"cpu",kernelFunc:YN};function JN(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const qN={kernelName:Uu,backendName:"cpu",kernelFunc:JN};function ek(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Xh([0],n),[s,a]=HN(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function tk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return YN({inputs:{x:s},backend:n});const e=jN(n,s.shape,s.dtype),t=tk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=ZN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=JN({inputs:{input:s},backend:n}),t=tk({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!ro(s.dtype,a)){const e=YN({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=ek(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const nk={kernelName:nl,backendName:"cpu",kernelFunc:tk};function rk(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;VN([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?gw(l):l,h="string"===a.dtype?gw(u):u,d=r||a.dtype,[p,m]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(m,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=tk({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=tk({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,m=o.data.get(d.dataId).values,f=o.data.get(p.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,m,f),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=ZN({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function sk(e){return(t,n,r,s,a,i)=>{const o=wf(t,n),l=Bi(o),u=o.length,c=po(o),h=qi("float32",l),d=qi("float32",l),p=xf(t,o),m=xf(n,o),f=Vv(r,s),g=Vv(a,i),y=t.length,b=po(t),x=n.length,v=po(n);if(p.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%f.length,r=t%g.length,s=e(f[2*n],f[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=So(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=wo(r,y,b),a=n.slice(-x);m.forEach((e=>a[e]=0));const i=wo(a,x,v),o=e(f[2*s],f[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const ak=HN(((e,t)=>e+t)),ik=sk(((e,t,n,r)=>({real:e+n,imag:t+r}))),ok=rk(Do,ak,ik),lk={kernelName:Do,backendName:"cpu",kernelFunc:ok};function uk(e,t,n,r,s){const a=Bi(r),i=bo(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function ck(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=qp([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const hk=HN(((e,t)=>e&t)),dk=rk(qo,hk),pk={kernelName:qo,backendName:"cpu",kernelFunc:dk};function mk(e){return(t,n,r)=>{const s=eo(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function fk(e,t,n){return gk(e,mk(t),n)}function gk(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;VN(i,e);const o=a,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=gw(l)}else u=l;const c=n||i.dtype,h=t(u,c,s);return o.makeTensorInfo(i.shape,c,h)}}const yk=mk((e=>Math.ceil(e))),bk=gk(rl,yk),xk={kernelName:rl,backendName:"cpu",kernelFunc:bk};function vk(e,t,n,r){const s=eo(n,Bi(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Bi(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?gw(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}const wk=HN(((e,t)=>e===t?1:0)),Sk=rk(Pl,wk,null,"bool"),Tk={kernelName:Pl,backendName:"cpu",kernelFunc:Sk},_k=mk((e=>Math.exp(e))),Ik=gk(Dl,_k,"float32"),Ck={kernelName:Dl,backendName:"cpu",kernelFunc:Ik},Mk=mk((e=>Math.expm1(e))),Ek=gk(Gl,Mk),Nk={kernelName:Gl,backendName:"cpu",kernelFunc:Ek},kk=mk((e=>Math.floor(e))),Rk=gk(Vl,kk),Lk={kernelName:Vl,backendName:"cpu",kernelFunc:Rk},Ak=HN(((e,t)=>Math.floor(e/t))),Pk=rk(Ul,Ak,null,"int32"),Dk={kernelName:Ul,backendName:"cpu",kernelFunc:Pk};function Ok(e,t,n,r,s,a,i,o,l){const u=qp([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}function Gk(e,t,n){const r=qp(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const zk=HN(((e,t)=>e>t?1:0)),Fk=rk(Hl,zk,null,"bool"),Wk={kernelName:Hl,backendName:"cpu",kernelFunc:Fk},Vk=HN(((e,t)=>e>=t?1:0)),Uk=rk(Zl,Vk,null,"bool"),Bk={kernelName:Zl,backendName:"cpu",kernelFunc:Uk},Xk=HN(((e,t)=>e<t?1:0)),$k=rk(tu,Xk,null,"bool"),Hk={kernelName:tu,backendName:"cpu",kernelFunc:$k},Zk=HN(((e,t)=>e<=t?1:0)),Kk=rk(nu,Zk,null,"bool"),jk={kernelName:nu,backendName:"cpu",kernelFunc:Kk};function Yk(e,t,n){const r=(t-e)/(n-1),s=bo(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const Qk=mk((e=>Math.log(e))),Jk=gk(su,Qk),qk={kernelName:su,backendName:"cpu",kernelFunc:Jk};function eR(e,t,n,r){const s=qi(r,Bi(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}const tR=HN(((e,t)=>Math.max(e,t))),nR=rk(pu,tR),rR={kernelName:pu,backendName:"cpu",kernelFunc:nR},sR=HN(((e,t)=>Math.min(e,t))),aR=rk(wu,sR),iR={kernelName:wu,backendName:"cpu",kernelFunc:aR},oR=HN(((e,t)=>e*t)),lR=sk(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),uR=rk(Iu,oR,lR),cR={kernelName:Iu,backendName:"cpu",kernelFunc:uR};function hR(e,t,n){const r=Bh(-1,n);return oR([],t,r,e,n)}const dR={kernelName:Cu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;VN(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=hR(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},pR=HN(((e,t)=>e!==t?1:0)),mR=rk(Mu,pR,null,"bool"),fR={kernelName:Mu,backendName:"cpu",kernelFunc:mR};function gR(e,t,n,r,s){const a=t.length,i=Bi(t),o=po(t),l=po(s),u=qi(n,Bi(s));for(let t=0;t<i;++t){const n=So(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[wo(s,a,l)]=e[t]}return u}function yR(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;VN(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=gR(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const bR={kernelName:Pc,backendName:"cpu",kernelFunc:yR};function xR(e,t,n,r){const[s,a]=Af(e,r),i=xd(t,"int32"),o=bo(Bi(s),i),l=Bi(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const vR={kernelName:Gu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;VN(s,"prod");const o=s.shape.length,l=Qi(a,s.shape),u=Of(l,o);let c=l,h=s;const d=[];null!=u&&(h=yR({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=zf(c.length,o));const p=n.data.get(h.dataId).values,{outVals:m,outShape:f,outDtype:g}=xR(h.shape,h.dtype,p,c);let y=f;return i&&(y=Pf(f,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,m)}};function wR(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function SR(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=So(r,t.length,po(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[s].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(s.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=eo("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=eo(n,Bi(a)),o=e.length;return function(e,t,n,r,s,a){const i=wR(t,2)[1],o=wR(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[d,p[0],p[1]]}const TR=2147483647;function _R(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=eo("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>TR)throw new Error(`Requires ((limit - start) / delta) <= ${TR}`);d[t+1]=d[t]+c}const p=eo(n,d[h]);let m=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)p[m++]=r,r+=s}return[d,p]}var IR=wv;class CR{constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Tv(u),this.raggedRank=_v(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===IR.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===IR.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case IR.VALUE_ROWIDS:return CR.getMaxWidthValueRowID(t);case IR.ROW_SPLITS:return CR.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${IR[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return ER(e,n)}calculateOutputSize(e){const t=this.valuesShape;Iv(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Sv(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return Wi(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case IR.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case IR.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${IR[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case IR.FIRST_DIM_SIZE:return e[0];case IR.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case IR.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${IR[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=ER(t,!1),s=eo(this.valuesDType,Bi(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=Bi(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;ep((()=>{const t=Pm(u,e);u=jm(t,i).dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);MR(a.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)MR(a.slice(d*o),u,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function MR(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function ER(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function NR(e,t,n,r,s,a,i,o,l,u){return new CR(e,t,n,r,s,a,i,o,l,u).compute()}function kR(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return bo(0,r);const s=bo(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const RR=mk((e=>1/Math.sqrt(e))),LR=gk(qu,RR),AR={kernelName:qu,backendName:"cpu",kernelFunc:LR};function PR(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return qp(n,t.dtype);const p=l instanceof id?l:qp(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const DR=mk((e=>1/(1+Math.exp(-e)))),OR=fk(uc,(e=>1/(1+Math.exp(-e)))),GR={kernelName:uc,backendName:"cpu",kernelFunc:OR};function zR(e,t,n,r,s){const a=uv(r,t,n),i=Bi(n),o=po(r);if(a){const n=cv(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=qp(r,s,"string"===s?gw(e):e),u=qp(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?yw(u.values):u.values}function FR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;VN(s,"slice");const[o,l]=hv(s,a,i);qx(s,o,l);const u=zR(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const WR={kernelName:ac,backendName:"cpu",kernelFunc:FR};function VR(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(rw(o));return[eo(n,0),[0,h],eo(s,0),u,c]}let d=!0,p=0;const m=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(sw(t,n));if(n>=l)throw new Error(aw(t,n,l));++m[n],d=d&&n>=p,p=n}let f=!0;for(let e=0;e<l;++e){const t=0===m[e];u[e]=t,f=f&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(f&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=m[l-1],a=eo(n,t*h),d=eo(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:m[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:m[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}function UR(e,t,n,r,s){const a=Bi(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(iw(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(ow(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(lw(r,l));l[c]=e}if(Bi(l)!==a)throw new Error(uw(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const m=eo(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[m,[i,o],l]}function BR(e,t,n,r,s,a=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=h.reduce(((e,t)=>e*t),1),p=eo(n,d);if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let m=0,f=1,g=0,y=s[m];for(;;){let t=0;if(f<o){if(t=s[f],y===t){++f;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=c)throw new Error(cw(y,c));y>g&&p.fill(i,g*u,y*u);for(let t=m;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(hw(t,r[t],l[0]));for(let t=0;t<u;t++)p[y*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)p[y*u+e]/=f-m;if(m=f,++f,g=y+1,y=t,f>o)break}return g<c&&p.fill(i,g*u,c*u),[p,h]}const XR=mk((e=>Math.sqrt(e))),$R=fk(hc,(e=>Math.sqrt(e))),HR={kernelName:hc,backendName:"cpu",kernelFunc:$R},ZR=HN(((e,t)=>{const n=e-t;return n*n})),KR=rk(wc,ZR),jR={kernelName:wc,backendName:"cpu",kernelFunc:KR},YR=mk(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),QR=gk(Tc,YR),JR={kernelName:Tc,backendName:"cpu",kernelFunc:QR};function qR(e,t,n,r){const s=qp(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}class eL{constructor(e,t,n,r,s,a){this.separator=Zh(e),this.nGramWidths=t,this.leftPad=Zh(n),this.rightPad=Zh(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let m=0;const f=e=>e.forEach((e=>p[m++]=e));for(let e=0;e<l;++e)f(this.leftPad),f(this.separator);for(let t=0;t<c-1;++t)f(e[h+t]),f(this.separator);if(c>0){f(e[h+c-1]);for(let e=0;e<u;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<u-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=eo("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth;this.createNGrams(e,r,i,s,1,o)}}return[i,a]}}function tL(e,t,n,r,s,a,i,o){return new eL(n,r,s,a,i,o).compute(e,t)}function nL(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);(!n||0!==t.length)&&r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void((!n||0!==e.length)&&r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);(!n||0!==t.length)&&r.push(t),s=a+1}}function rL(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;nL(e[l],t,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=eo("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}function sL(e,t){const n=eo("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Uh(e[r]).modulo(t).getLowBitsUnsigned();return n}const aL=HN(((e,t)=>e-t)),iL=sk(((e,t,n,r)=>({real:e-n,imag:t-r}))),oL=rk(Ec,aL,iL),lL={kernelName:Ec,backendName:"cpu",kernelFunc:oL};function uL(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=qp(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const cL=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function hL(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);hL(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(zi(e,n,t),cL(e[r],s)>0&&zi(e,n,r);a<i;){for(zi(e,a,i),a++,i--;cL(e[a],s)<0;)a+=1;for(;cL(e[i],s)>0;)i-=1}0===cL(e[n],s)?zi(e,n,i):(i+=1,zi(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function dL(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=qi(n,i*r),u=qi("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(hL(i,r),i=i.slice(0,r)),s&&i.sort(cL);const c=t*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[qp(c,n,l),qp(c,"int32",u)]}function pL(e,t,n,r){const s=Qi(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),l=new id(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const h=a.slice();h[1]=i.size;const d=new id(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const mL=Object.freeze(Object.defineProperty({__proto__:null,addImpl:ak,bincountImpl:uk,bincountReduceImpl:ck,bitwiseAndImpl:hk,castImpl:ek,ceilImpl:yk,concatImpl:vk,equalImpl:wk,expImpl:_k,expm1Impl:Mk,floorDivImpl:Ak,floorImpl:kk,gatherNdImpl:Ok,gatherV2Impl:Gk,greaterEqualImpl:Vk,greaterImpl:zk,lessEqualImpl:Zk,lessImpl:Xk,linSpaceImpl:Yk,logImpl:Qk,maxImpl:eR,maximumImpl:tR,minimumImpl:sR,multiplyImpl:oR,negImpl:hR,notEqualImpl:pR,prodImpl:xR,raggedGatherImpl:SR,raggedRangeImpl:_R,raggedTensorToTensorImpl:NR,rangeImpl:kR,rsqrtImpl:RR,scatterImpl:PR,sigmoidImpl:DR,simpleAbsImpl:XN,sliceImpl:zR,sparseFillEmptyRowsImpl:VR,sparseReshapeImpl:UR,sparseSegmentReductionImpl:BR,sqrtImpl:XR,squaredDifferenceImpl:ZR,staticRegexReplaceImpl:YR,stridedSliceImpl:qR,stringNGramsImpl:tL,stringSplitImpl:rL,stringToHashBucketFastImpl:sL,subImpl:aL,tileImpl:uL,topKImpl:dL,transposeImpl:gR,uniqueImpl:pL},Symbol.toStringTag,{value:"Module"}));sp("cpu",(()=>new BN),1);const fL=fk(Rl,(e=>e>=0?e:Math.exp(e)-1)),gL={kernelName:Rl,backendName:"cpu",kernelFunc:fL};function yL(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;VN([s],"leakyRelu");const i=Bi(s.shape),o=n.data.get(s.dataId).values,l=qi("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const bL={kernelName:eu,backendName:"cpu",kernelFunc:yL},xL=HN(((e,t)=>e<0?t*e:e));function vL(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;VN([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=xL(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const wL={kernelName:Ou,backendName:"cpu",kernelFunc:vL},SL=fk(Xu,(e=>Math.max(0,e))),TL={kernelName:Xu,backendName:"cpu",kernelFunc:SL},_L=fk(Yu,(e=>Math.min(Math.max(0,e),6))),IL={kernelName:Yu,backendName:"cpu",kernelFunc:_L};function CL(e,t,n,r,s){if("linear"===n)return YN({inputs:{x:t},backend:e});if("relu"===n)return SL({inputs:{x:t},backend:e});if("elu"===n)return fL({inputs:{x:t},backend:e});if("relu6"===n)return _L({inputs:{x:t},backend:e});if("prelu"===n)return vL({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return yL({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return OR({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ML(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=Bi(s.shape),o=Yi(a,i),l=Bi(o);Wi(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const EL={kernelName:$u,backendName:"cpu",kernelFunc:ML};function NL(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;VN([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],m=s.shape.slice(0,-2),f=a.shape.slice(0,-2),g=Bi(m),y=Bi(f),b=wf(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);Wi(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,p,h]:[y,h,p],v=ML({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=ML({inputs:{x:a},backend:n,attrs:{shape:x}}),S=i?v.shape[1]:v.shape[2],T=i?v.shape[2]:v.shape[1],_=o?w.shape[1]:w.shape[2],I=Math.max(g,y),C=n.data.get(v.dataId).values,M=n.data.get(w.dataId).values,E=po(v.shape),N=po(w.shape),[k,R,L]=i?[E[0],1,E[1]]:[E[0],E[1],1],[A,P,D]=o?[1,N[1],N[0]]:[N[1],1,N[0]],O=T*_,G=qp([I,T,_],v.dtype),z=G.values,F=n.blockSize;for(let e=0;e<I;e++){const t=e%g,n=e%y;for(let r=0;r<T;r+=F){const s=Math.min(r+F,T);for(let a=0;a<_;a+=F){const i=Math.min(a+F,_);for(let o=0;o<S;o+=F){const l=Math.min(o+F,S);for(let u=r;u<s;u++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<l;e++)s+=C[t*k+u*R+e*L]*M[e*A+r*P+n*D];z[e*O+(u*_+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,G.dtype,G.values)}const kL={kernelName:Yo,backendName:"cpu",kernelFunc:NL},RL={kernelName:Uc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,m;const f=[];d=NL({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=ok({inputs:{a:d,b:i},backend:n}),f.push(d),d=p),c&&(m=CL(n,d,c,o,h),f.push(d),d=m);for(const e of f)n.disposeIntermediateTensorInfo(e);return d}},LL=fk(Ao,(e=>Math.acos(e))),AL={kernelName:Ao,backendName:"cpu",kernelFunc:LL},PL=fk(Po,(e=>Math.acosh(e))),DL={kernelName:Po,backendName:"cpu",kernelFunc:PL},OL={kernelName:Oo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;VN(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=qp(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}},GL={kernelName:Go,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;VN(s,"all");const o=Qi(a,s.shape);let l=o;const u=Of(l,s.shape.length);let c=s;null!=u&&(c=yR({inputs:{x:s},backend:n,attrs:{perm:u}}),l=zf(l.length,s.shape.length)),Df("all",l,c.shape.length);const[h,d]=Af(c.shape,l),p=Bi(d),m=bo(Bi(h),c.dtype),f=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*p;let n=f[t];for(let e=0;e<p;++e){const r=f[t+e];n=n&&r}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,m);if(i){const e=ML({inputs:{x:g},backend:n,attrs:{shape:Pf(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zL={kernelName:zo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;VN(s,"any");const o=Qi(a,s.shape);let l=o;const u=Of(l,s.shape.length);let c=s;null!=u&&(c=yR({inputs:{x:s},backend:n,attrs:{perm:u}}),l=zf(l.length,s.shape.length)),Df("any",l,c.shape.length);const[h,d]=Af(c.shape,l),p=Bi(d),m=bo(Bi(h),c.dtype),f=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*p;let n=f[t];for(let e=0;e<p;++e){const r=f[t+e];n=n||r}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,m);if(i){const e=ML({inputs:{x:g},backend:n,attrs:{shape:Pf(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},FL={kernelName:Fo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;VN(s,"argMax");let i=Qi(a,s.shape);const o=Of(i,s.shape.length);let l=s;const u=[];null!=o&&(l=yR({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=zf(i.length,l.shape.length)),i=[i[0]],Df("argMax",i,l.shape.length);const[c,h]=Af(l.shape,i),d=bo(Bi(c),"int32"),p=Bi(h),m=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=m[t],r=0;for(let e=0;e<p;++e){const s=m[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},WL={kernelName:Wo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;VN(s,"argMin");let i=Qi(a,s.shape);const o=Of(i,s.shape.length);let l=s;const u=[];null!=o&&(l=yR({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=zf(i.length,l.shape.length)),i=[i[0]],Df("argMin",i,l.shape.length);const[c,h]=Af(l.shape,i),d=bo(Bi(c),"int32"),p=Bi(h),m=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=m[t],r=0;for(let e=0;e<p;++e){const s=m[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},VL=fk(Vo,(e=>Math.asin(e))),UL={kernelName:Vo,backendName:"cpu",kernelFunc:VL},BL=fk(Uo,(e=>Math.asinh(e))),XL={kernelName:Uo,backendName:"cpu",kernelFunc:BL},$L=fk(Bo,(e=>Math.atan(e))),HL={kernelName:Bo,backendName:"cpu",kernelFunc:$L},ZL=HN(((e,t)=>Math.atan2(e,t))),KL=rk($o,ZL),jL={kernelName:$o,backendName:"cpu",kernelFunc:KL},YL=fk(Xo,(e=>Math.atanh(e))),QL={kernelName:Xo,backendName:"cpu",kernelFunc:YL};function JL(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,m="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=qp(s.outShape,n),g=f.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,f=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const v=y*i-d,w=Math.max(0,v),S=Math.min(s.inHeight,c+v),T=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let y=m,b=0,v=0;for(let n=w;n<S;n+=l){const s=f+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,v++)}if(isNaN(y))break}g[T+n*x+t]="avg"===a?b/v:y}}}return f}function qL(e,t,n,r,s=!1,a=!1){const i=qp(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,m=r.padInfo.left,f=qp(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-m;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=f.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function eA(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,m=s.effectiveFilterWidth,f=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=qp(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],_=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const I=w*i-f;let C=I;for(;C<0;)C+=u;const M=Math.min(s.inDepth,d+I),E=n+w*S;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const f=Math.min(s.inHeight,p+i),w=E+n*T;for(let n=0;n<s.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,m+i),g=w+n*_;let S=b,T=0,I=0;for(let n=C;n<M;n+=u){const s=x+n*r[1];for(let n=d;n<f;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>S?S=s:"avg"===a&&(T+=s,I++),isNaN(S))break}if(isNaN(S))break}if(isNaN(S))break}v[g+t]="avg"===a?T/Math.max(I,1):S}}}}return x}const tA={kernelName:Ho,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;VN(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Wi(km(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=vm(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&$i(u.inShape,u.outShape))c=YN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=po(s.shape),r=JL(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},nA={kernelName:Ko,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;VN(s,"avgPool3d");const c=wm(s.shape,a,i,1,o,l,u),h=eA(n.data.get(s.dataId).values,s.shape,s.dtype,po(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},rA={kernelName:jo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;VN([s,a],"avgPool3DGrad");const c=wm(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,m=c.filterDepth,f=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,S=c.effectiveFilterWidth,T=v-1-c.padInfo.front,_=S-1-c.padInfo.left,I=w-1-c.padInfo.top,C=qp(a.shape,"float32"),M=1/(m*f*g),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-T,i=r-I,o=s-_;let l=0;for(let n=0;n<v;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<S;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,r,s,a,t))}}}C.set(l*M,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},sA={kernelName:Zo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;VN([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=vm(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,m=c.filterWidth,f=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=qp(i.shape,"float32"),S=1/(p*m),T=n.data.get(s.dataId).values,_=qp(s.shape,"float32",T);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<y;n+=f){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=_.get(e,r,s,t))}}w.set(i*S,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},aA={kernelName:Bl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;Wi(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Wi(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Wi(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),VN([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(c.length),g=m.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,S=0,T=0;for(let e=0;e<c.length;++e)f[e]=m[v++]+(c[e]-h[w++])*p[S++]/Math.sqrt(d[T++]+u),v>=g&&(v=0),w>=x&&(w=0),S>=y&&(S=0),T>=b&&(T=0);return n.makeTensorInfo(s.shape,s.dtype,f)}},iA={kernelName:Qo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;VN([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Ev(s.shape,a,o),u=Nv(l.length,a.length),c=kv(s.shape,a,o),h=Rv(i,a.length),d=Lv(c,i,a.length),p=ML({inputs:{x:s},backend:n,attrs:{shape:l}}),m=yR({inputs:{x:p},backend:n,attrs:{perm:u}}),f=ML({inputs:{x:m},backend:n,attrs:{shape:c}}),g=FR({inputs:{x:f},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}},oA={kernelName:Jo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=uk(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},lA={kernelName:tl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=wf(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},uA=fk(sl,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),cA={kernelName:sl,backendName:"cpu",kernelFunc:uA},hA={kernelName:il,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Bi(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function dA(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const pA={kernelName:Yl,backendName:"cpu",kernelFunc:dA};function mA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=Qi(s,t[0].shape)[0];xv(t.map((e=>e.shape)),a);let i=vv(t.map((e=>e.shape)),a);if(0===Bi(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Bi(e.shape)>0));if(1===o.length)return YN({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>JN({inputs:{input:e},backend:n}))),t=o.map((e=>dA({inputs:{input:e},backend:n}))),r=mA({inputs:e,backend:n,attrs:{axis:a}}),s=mA({inputs:t,backend:n,attrs:{axis:a}}),i=ZN({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=[-1,Bi(e.shape.slice(a))];return ML({inputs:{x:e},backend:n,attrs:{shape:t}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=vv(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=vk(u,i,t[0].dtype,c),d=vv(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const fA={kernelName:ol,backendName:"cpu",kernelFunc:mA};function gA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;VN([s,a],"conv2d");const h=Lm(l),d=Sm(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,m=d.filterWidth,f=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new id(d.outShape,s.dtype),w=po(s.shape),S=po(a.shape),T=w[0],_=x?w[1]:w[2],I=x?w[2]:1,C=x?1:w[1],M=v.strides[0],E=x?v.strides[1]:v.strides[2],N=x?v.strides[2]:1,k=x?1:v.strides[1],R=n.data.get(s.dataId).values,L=n.data.get(a.dataId).values,A=v.values;for(let e=0;e<d.batchSize;++e){const t=e*T,n=e*M;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-b;for(let e=0;e<p;++e){const n=s+e*f;if(n<0||n>=d.inHeight)continue;const a=e*S[0],i=t+n*_;for(let e=0;e<d.outWidth;++e){const t=r+e*N,n=e*d.strideWidth-y;for(let e=0;e<m;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*I;let o=a+e*S[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*C];for(let e=0;e<d.outChannels;++e)A[t+e*k]+=n*L[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,A)}const yA={kernelName:ll,backendName:"cpu",kernelFunc:gA},bA={kernelName:ul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;VN([s,a],"conv2dBackpropFilter");const h=Lm(l),d=Sm(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:m,filterHeight:f,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new id(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,T=new id(s.shape,s.dtype,w),_=new id(a.shape,a.dtype,S);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/m)),a=Math.min(d.outWidth,(d.inWidth+x-r)/m);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*m-x;l+=y?T.get(u,t,n,i)*_.get(u,c,e,o):T.get(u,i,t,n)*_.get(u,o,c,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},xA={kernelName:cl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;VN([s,a],"conv2dBackpropInput");const h=po(a.shape),d=po(s.shape);let p=Lm(u);const m=Sm(i,a.shape,o,1,l,c,!1,p),f=new id(m.inShape,"float32"),g=f.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:S,filterHeight:T,filterWidth:_,inChannels:I,inHeight:C,inWidth:M,outChannels:E,outHeight:N,outWidth:k,strideHeight:R,strideWidth:L}=m;p=m.dataFormat;const A=T-1-m.padInfo.top,P=_-1-m.padInfo.left,D="channelsLast"===p,O=f.strides[0],G=D?f.strides[1]:f.strides[2],z=D?f.strides[2]:1,F=D?1:f.strides[1],W=d[0],V=D?d[1]:d[2],U=D?d[2]:1,B=D?1:d[1];for(let e=0;e<S;++e)for(let t=0;t<I;++t)for(let n=0;n<C;++n){const r=n-A,s=Math.max(0,Math.ceil(r/R)),a=Math.min(N,(T+r)/R);for(let i=0;i<M;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(k,(_+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=l;r<u;++r){const a=W*e+V*n+U*r,i=x*(T-1-s)+v*(_-1-(r*L-o))+w*t;for(let e=0;e<E;++e)c+=y[a+B*e]*b[i+e]}}g[O*e+G*n+z*i+F*t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},vA={kernelName:hl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;VN([s,a],"conv3d");const u=Tm(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:m,dilationWidth:f,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new id(u.outShape,s.dtype),w=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,T=v.values,_=po(s.shape),I=po(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*_[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*I[0],i=t+n*_[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*m;if(r<0||r>=u.inHeight)continue;const s=a+e*I[1],o=i+r*_[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<d;++e){const t=r+e*f;if(t<0||t>=u.inWidth)continue;const a=s+e*I[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)T[n+e]+=t*S[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},wA={kernelName:dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;VN([s,a],"conv3dBackpropFilterV2");const u=po(s.shape),c=po(a.shape),h=Tm(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,m=h.strideWidth,f=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new id(h.filterShape,"float32"),x=b.values,[v,w,S,T]=b.strides,_=n.data.get(a.dataId).values,[I,C,M,E]=c,N=n.data.get(s.dataId).values,[k,R,L,A]=u,P=h.padInfo.front,D=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((P-e)/d)),n=Math.min(h.outDepth,(h.inDepth+P-e)/d),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((D-r)/m)),u=Math.min(h.outWidth,(h.inWidth+D-r)/m),c=r*S+o;for(let o=0;o<h.inChannels;++o){const f=o*T+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let f=0;f<h.batchSize;++f){const h=f*k,y=f*I;for(let f=t;f<n;++f){const t=(e+f*d-P)*R+h,n=f*C+y;for(let e=a;e<i;++e){const a=(s+e*p-O)*L+t,i=e*M+n;for(let e=l;e<u;++e){const t=e*E+i;g+=N[(r+e*m-D)*A+a+o]*_[t+c]}}}}x[f+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},SA={kernelName:pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;VN([s],"conv3dBackpropInputV2");const u=po(s.shape),c=po(a.shape),h=Tm(l,a.shape,o,1,i),d=new id(h.inShape,"float32"),p=d.values,[m,f,g,y]=d.strides,b=n.data.get(s.dataId).values,[x,v,w,S]=u,T=n.data.get(a.dataId).values,[_,I,C,M]=c,{batchSize:E,filterDepth:N,filterHeight:k,filterWidth:R,inChannels:L,inDepth:A,inHeight:P,inWidth:D,outChannels:O,outDepth:G,outHeight:z,outWidth:F,strideDepth:W,strideHeight:V,strideWidth:U}=h,B=N-1-h.padInfo.front,X=k-1-h.padInfo.top,$=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<L;++t)for(let n=0;n<A;++n){const r=n-B,s=Math.max(0,Math.ceil(r/W)),a=Math.min(G,(N+r)/W);for(let i=0;i<P;++i){const o=i-X,l=Math.max(0,Math.ceil(o/V)),u=Math.min(z,(k+o)/V);for(let c=0;c<D;++c){const h=c-$,d=Math.max(0,Math.ceil(h/U)),E=Math.min(F,(R+h)/U);let L=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=l;r<u;++r){const a=r*V-o;for(let i=d;i<E;++i){const o=x*e+v*n+w*r+S*i,l=_*(N-1-s)+I*(k-1-a)+C*(R-1-(i*U-h))+M*t;for(let e=0;e<O;++e)L+=b[o+e]*T[l+e]}}}p[m*e+f*n+g*i+y*c+t]=L}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},TA=fk(ml,(e=>Math.cos(e))),_A={kernelName:ml,backendName:"cpu",kernelFunc:TA},IA=fk(fl,(e=>Math.cosh(e))),CA={kernelName:fl,backendName:"cpu",kernelFunc:IA},MA={kernelName:bl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,m=a.shape[0],[f,g]=o,y=qp([m,f,g,p],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=po(s.shape),S=po(y.shape);for(let e=0;e<m;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=f>1?(s-n)*(h-1)/(f-1):0,m=g>1?(a-r)*(d-1)/(g-1):0;for(let t=0;t<f;t++){const c=f>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*S[2]+t*S[1]+e*S[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*m:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*S[2]+t*S[1]+e*S[0];y.values[r]=u}continue}const h=Math.floor(c),f=Math.ceil(c),b=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+f*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+f*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*b,m=d+(v[a]-d)*b;a=r+l*S[2]+t*S[1]+e*S[0],y.values[a]=p+(m-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*m:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*S[2]+t*S[1]+e*S[0];y.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*S[2]+t*S[1]+e*S[0];y.values[a]=v[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},EA={kernelName:gl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;VN(s,"cumprod");const l=Of([a],s.shape.length);let u=s;null!=l&&(u=yR({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=zf(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=xd(u.dtype,"int32"),d=yo(Bi(u.shape),h),p=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=m)for(let t=0;t<m;t++){const n=f(e,t);if(0===t)d[n]=i?1:p[n];else{const r=f(e,t-1);d[n]=i?p[r]*d[r]:p[n]*d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=yR({inputs:{x:g},backend:n,attrs:{perm:Gf(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},NA={kernelName:yl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;VN(s,"cumsum");const l=Of([a],s.shape.length);let u=s;null!=l&&(u=yR({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=zf(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=xd(u.dtype,"int32"),d=bo(Bi(u.shape),h),p=n.data.get(u.dataId).values,m=u.shape[u.shape.length-1],f=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=m)for(let t=0;t<m;t++){const n=f(e,t);if(0===t)d[n]=i?0:p[n];else{const r=f(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=yR({inputs:{x:g},backend:n,attrs:{perm:Gf(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},kA={kernelName:xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=uk(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=ck(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},RA={kernelName:vl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;Wi("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,p=c/(a*a),m=n.data.get(s.dataId).values,f=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+u*(n+l*e));f[g++]=m[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,f)}};function LA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;VN([s,a],"depthwiseConv2DNative");const c=po(s.shape),h=po(a.shape);let d=l;null==d&&(d=[1,1]),Wi(km(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Sm(s.shape,a.shape,i,d,o,u,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,S=new id(p.outShape,s.dtype),T=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,I=S.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*S.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*S.strides[1],s=e*p.strideHeight-v;for(let e=0;e<m;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*S.strides[2],n=e*p.strideWidth-x;for(let e=0;e<f;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=T[o+e];for(let e=0;e<w;++e)I[l+e]+=t*_[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const AA={kernelName:wl,backendName:"cpu",kernelFunc:LA},PA={kernelName:Sl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;VN([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Sm(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:m,filterWidth:f}=h,g=new id(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new id(s.shape,s.dtype,v),S=n.data.get(a.dataId).values,T=new id(a.shape,a.dtype,S);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let r=0;r<f;++r){const s=Math.max(0,Math.ceil((y-r)/p)),a=Math.min(h.outWidth,(h.inWidth+y-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-b;for(let e=s;e<a;++e){const n=r+e*p-y;u+=w.get(l,t,n,o)*T.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},DA={kernelName:Tl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;VN([s,a],"depthwiseConv2DNativeBackpropInput");const h=po(s.shape),d=po(a.shape),p=Sm(c,a.shape,i,o,l,u,!0),m=new id(p.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(s.dataId).values,[v,w,S]=h,T=n.data.get(a.dataId).values,[_,I,C]=d,{batchSize:M,filterHeight:E,filterWidth:N,inChannels:k,inHeight:R,inWidth:L,outChannels:A,outHeight:P,outWidth:D,strideHeight:O,strideWidth:G}=p,z=E-1-p.padInfo.top,F=N-1-p.padInfo.left,W=A/k;for(let e=0;e<M;++e)for(let t=0;t<k;++t)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(P,(E+r)/O);for(let i=0;i<L;++i){const o=i-F,l=Math.max(0,Math.ceil(o/G)),u=Math.min(D,(N+o)/G);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=l;r<u;++r){const a=v*e+w*n+S*r,i=_*(E-1-s)+I*(N-1-(r*G-o))+C*t;for(let e=0;e<W;++e)c+=x[a+(t*W+e)]*T[i+e]}}f[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},OA={kernelName:_l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=Bi(r.shape),a=n.data.get(r.dataId).values,i=qp([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},GA={kernelName:Il,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:S,filterWidth:T,dilationHeight:_,dilationWidth:I,outShape:C}=xm(r.shape,s.shape,a,i,"NHWC",o),M=Bi(C),E=C.length,N=eo(r.dtype,M);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let a=0;a<b;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<S;++t){const a=n+t*_;if(a>=0&&a<m)for(let n=0;n<T;++n){const p=i+n*I;if(p>=0&&p<f){const i=wo([e,a,p,o],c,po(r.shape)),m=wo([t,n,o],d,po(s.shape)),f=u[i]+h[m];f>l&&(l=f)}}}N[wo([e,t,a,o],E,po(C))]=l}}}return{dataId:l.write(Xh(N,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},zA={kernelName:Ml,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=fo(r.shape,u.data.get(r.dataId).values),h=fo(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:S,dilationHeight:T,dilationWidth:_,outShape:I}=xm(r.shape,s.shape,i,o,"NHWC",l);Wi(a.rank===I.length,(()=>`Error in ${Ml}, dy must have the same rank as output ${I.length}, but got ${a.rank}`));const C=fo(I,u.data.get(a.dataId).values),M=xo(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<f;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*T;if(r>=0&&r<p)for(let n=0;n<S;++n){const u=s+n*_;if(u>=0&&u<m){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}M[o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Xh(M,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},FA={kernelName:Cl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=fo(r.shape,u.data.get(r.dataId).values),h=fo(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:S,dilationHeight:T,dilationWidth:_,outShape:I}=xm(r.shape,s.shape,i,o,"NHWC",l);Wi(a.rank===I.length,(()=>`Error in ${Cl}, dy must have the same rank as output ${I.length}, but got ${a.rank}`));const C=fo(I,u.data.get(a.dataId).values),M=xo(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*v-b.left;for(let a=0;a<f;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*T;if(r>=0&&r<p)for(let n=0;n<S;++n){const u=s+n*_;if(u>=0&&u<m){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}M[e][o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Xh(M,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},WA={kernelName:El,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),m=2===s.shape.length?1:s.shape[2],f=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*u];for(let n=0;n<m;n++){const r=f[e*m+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===m?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=p,a.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),s}};function VA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;VN(s,"sum"),o="bool"===s.dtype?tk({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):YN({inputs:{x:s},backend:n});const l=o.shape.length,u=Qi(a,o.shape),c=Of(u,l);let h=u,d=o;null!=c&&(d=yR({inputs:{x:o},backend:n,attrs:{perm:c}}),h=zf(h.length,l)),Df("sum",h,d.shape.length);const[p,m]=Af(d.shape,h);let f=jN(n,p,xd(d.dtype,"int32"));const g=Bi(m),y=n.data.get(f.dataId).values,b=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=f;f=ML({inputs:{x:f},backend:n,attrs:{shape:Pf(f.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),f}const UA={kernelName:dc,backendName:"cpu",kernelFunc:VA},BA={kernelName:kl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Yv(s,a.length);Jv(i.length,l,a);const{path:u,steps:c}=qv(o,l),h=c.length;let d=null,p=i.length;const m=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Qv(p,l[t]);let s;ew(e)?s=a[t]:(s=yR({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$i(s.shape,i)||(s=ML({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===d?d=s:(d=uR({inputs:{a:s,b:d},backend:n}),m.push(d))}e<h-1&&(u[e]>=0&&(d=VA({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),m.push(d)),p--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},XA={kernelName:Ll,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;VN([r,s],"eluGrad");const a=new Float32Array(Bi(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},$A=Dv,HA=Ov,ZA=Gv,KA=zv,jA=Fv,YA=Wv,QA=fk(Al,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+$A*n);return t*(1-((((YA*r+jA)*r+KA)*r+ZA)*r+HA)*r*Math.exp(-n*n))})),JA={kernelName:Al,backendName:"cpu",kernelFunc:QA};function qA(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(Wi(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),ML({inputs:{x:s},backend:n,attrs:{shape:o}})}const eP={kernelName:Ol,backendName:"cpu",kernelFunc:qA},tP=HN(((e,t)=>e/t)),nP=rk(Nl,tP),rP={kernelName:Nl,backendName:"cpu",kernelFunc:nP};function sP(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=Bi(u),h=qi("float32",c),d=qi("float32",c);for(let e=0;e<s;e++){const r=FR({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=FR({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=ZN({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=aP(i,t,n),p=Vv(u,c);for(let t=0;t<a;t++){const n=$v(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),m=n.makeTensorInfo(u,"float32",d),f=ZN({inputs:{real:p,imag:m},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),f}function aP(e,t,n){const r=Bi(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(function(e){return!(e&e-1)}(r)){const s=iP(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Bh(r,"float32")),i=YN({inputs:{x:a},backend:n}),l=rP.kernelFunc({inputs:{a:e,b:a},backend:n}),u=rP.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Kv(s*r,t,n),l=$v(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Hv(r,a,i,s)}return r}(Vv(a,i),r,t);return Uv(e)}}function iP(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Vv(e,t),i=n/2,o=Bv(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=ZN({inputs:{real:h,imag:d},backend:s}),m=Xv(a),f=m.real,g=m.imag,y=[f.length],b=s.makeTensorInfo(y,"float32",f),x=s.makeTensorInfo(y,"float32",g),v=ZN({inputs:{real:b,imag:x},backend:s}),w=iP(l,u,i,r,s),S=w.real,T=w.imag,_=[S.length],I=s.makeTensorInfo(_,"float32",S),C=s.makeTensorInfo(_,"float32",T),M=ZN({inputs:{real:I,imag:C},backend:s}),E=iP(f,g,i,r,s),N=E.real,k=E.imag,R=[N.length],L=s.makeTensorInfo(R,"float32",N),A=s.makeTensorInfo(R,"float32",k),P=ZN({inputs:{real:L,imag:A},backend:s}),D=Zv(n,r),O=[D.real.length],G=s.makeTensorInfo(O,"float32",D.real),z=s.makeTensorInfo(O,"float32",D.imag),F=ZN({inputs:{real:G,imag:z},backend:s}),W=uR({inputs:{a:F,b:P},backend:s}),V=ok({inputs:{a:M,b:W},backend:s}),U=oL({inputs:{a:M,b:W},backend:s}),B=JN({inputs:{input:V},backend:s}),X=JN({inputs:{input:U},backend:s}),$=dA({inputs:{input:V},backend:s}),H=dA({inputs:{input:U},backend:s}),Z=mA({inputs:[B,X],backend:s,attrs:{axis:0}}),K=mA({inputs:[$,H],backend:s,attrs:{axis:0}}),j=s.data.get(Z.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(K),{real:j,imag:Y}}const oP={kernelName:zl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Bi(r.shape),a=r.shape[r.shape.length-1],i=ML({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=sP(i,!1,n),l=ML({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function lP(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||uo(s),o=eo(i,Bi(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const uP={kernelName:Fl,backendName:"cpu",kernelFunc:lP},cP={kernelName:Wl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=qi(r.dtype,Bi(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},hP={kernelName:Bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=r;let f=gA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=f;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=ML({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=ok({inputs:{a:f,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else f=ok({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=f;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=ML({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=CL(n,f,p,e,m),n.disposeIntermediateTensorInfo(e)}else f=CL(n,f,p,o,m);n.disposeIntermediateTensorInfo(e)}return f}},dP={kernelName:Xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=r;let f=LA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=f;f=ok({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=f;f=CL(n,f,p,o,m),n.disposeIntermediateTensorInfo(e)}return f}},pP={kernelName:$l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=Bi(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Qx(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=Ok(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,d.values)}},mP={kernelName:Xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;VN([s,a],"gatherV2");const l=Qi(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];Wi(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=Bi(a.shape),p=mw(s,a,l,h),m=ML({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=ML({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(f),b=Gk(n.bufferSync(m),y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},fP={kernelName:jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Bi(r.shape),a=r.shape[r.shape.length-1],i=ML({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=sP(i,!0,n),l=ML({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},gP=fk(Ql,(e=>Number.isFinite(e)?1:0),"bool"),yP={kernelName:Ql,backendName:"cpu",kernelFunc:gP},bP=fk(Jl,(e=>Math.abs(e)===1/0?1:0),"bool"),xP={kernelName:Jl,backendName:"cpu",kernelFunc:bP},vP=fk(ql,(e=>Number.isNaN(e)?1:0),"bool"),wP={kernelName:ql,backendName:"cpu",kernelFunc:vP},SP={kernelName:ru,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Yk(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},TP=fk(au,(e=>Math.log1p(e))),_P={kernelName:au,backendName:"cpu",kernelFunc:TP},IP=HN(((e,t)=>e&&t)),CP=rk(iu,IP,null,"bool"),MP={kernelName:iu,backendName:"cpu",kernelFunc:CP},EP=fk(ou,(e=>e?0:1),"bool"),NP={kernelName:ou,backendName:"cpu",kernelFunc:EP},kP=HN(((e,t)=>e||t)),RP=rk(lu,kP,null,"bool"),LP={kernelName:lu,backendName:"cpu",kernelFunc:RP},AP={kernelName:cu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;VN(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=Bi(s.shape),p=new Float32Array(d);function m(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=m(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},PP={kernelName:hu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;VN(i,"LRNGrad");const h=Bi(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,m=n.data.get(s.dataId).values,f=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(m[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*m[t]*f[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function DP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=Qi(a,l);let h=c;const d=Of(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=gR(p,l,s.dtype,d,e),h=zf(h.length,u),l=e}VN(s,"max"),Df("max",h,u);const[m,f]=Af(l,h),g=eR(p,Bi(f),m,s.dtype),y=o.write(g,m,s.dtype);let b=m;return i&&(b=Pf(m,c)),{dataId:y,shape:b,dtype:s.dtype}}const OP={kernelName:du,backendName:"cpu",kernelFunc:DP},GP={kernelName:mu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;VN(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Wi(km(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=vm(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&$i(u.inShape,u.outShape))c=YN({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=po(s.shape),r=JL(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},zP={kernelName:gu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;VN(s,"maxPool3d");const c=wm(s.shape,a,i,1,o,l,u),h=eA(n.data.get(s.dataId).values,s.shape,s.dtype,po(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},FP={kernelName:yu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;VN([s,a],"maxPool3DGrad");const c=wm(a.shape,i,o,1,l,u),h=function(e,t){const n=qp(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-d;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-m;let S=p;for(;S<0;)S+=l;const T=Math.min(t.inWidth,h+p);let _=Number.NEGATIVE_INFINITY,I=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=d;r<w;r+=o){const s=r-u;for(let a=S;a<T;a+=l){const i=a-p,o=e.get(f,t,r,a,g);o>=_&&(_=o,I=n*c*h+s*c+i)}}}n.set(I,f,y,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,m=c.strideWidth,f=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,S=v-1-c.padInfo.left,T=x-1-c.padInfo.top,_=qp(a.shape,"float32"),I=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-T,o=s-S;let l=0;for(let n=0;n<b;n+=f){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=y){const u=(o+i)/m;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=b*x*v-1-h.get(e,r,a,u,t)===n*x*v+s*v+i?1:0;0!==d&&(l+=I.get(e,r,a,u,t)*d)}}}_.set(l,e,n,r,s,t)}return n.makeTensorInfo(_.shape,_.dtype,_.values)}},WP={kernelName:fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;VN([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=vm(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,m=qp(d.outShape,o.dtype,qL(p,o.shape,o.dtype,d).values),f=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,S=x-1-d.padInfo.top,T=qp(o.shape,"float32"),_=n.data.get(s.dataId).values,I=qp(s.shape,"float32",_);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-S,a=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/f;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=b){const o=(a+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-m.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=I.get(e,r,o,t)*l)}}T.set(i,e,n,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},VP={kernelName:bu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;VN(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=vm(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=JL(e,0,n,po(t),s,"max"),i=qL(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),m=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:m,shape:c.outShape,dtype:"int32"}]}},UP={kernelName:xu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=Qi(a,s.shape),l=Bi(Af(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=tk({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=nP({inputs:{a:h,b:c},backend:n});u.push(d);const p=VA({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},BP={kernelName:vu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;VN(s,"min");const o=Qi(a,s.shape);let l=o;const u=Of(l,s.shape.length);let c=s;null!=u&&(c=yR({inputs:{x:s},backend:n,attrs:{perm:u}}),l=zf(l.length,s.shape.length)),Df("min",l,c.shape.length);const[h,d]=Af(c.shape,l),p=Bi(d),m=bo(Bi(h),c.dtype),f=n.data.get(c.dataId).values;for(let e=0;e<m.length;++e){const t=e*p;let n=f[t];for(let e=0;e<p;++e){const r=f[t+e];(Number.isNaN(r)||r<n)&&(n=r)}m[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,m);if(i){const e=ML({inputs:{x:g},backend:n,attrs:{shape:Pf(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},XP={kernelName:Su,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;VN(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=po(s.shape),m=Bi(o),f=o.length,g=po(o),y=qi(s.dtype,m);for(let e=0;e<m;e++){let t=So(e,f,g);for(let e=0;e<f;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=wo(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},$P=HN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),HP=rk(Tu,$P),ZP={kernelName:Tu,backendName:"cpu",kernelFunc:HP};function KP(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=Qi([o],s.shape),u=DP({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Pf(u.shape,l),h=ML({inputs:{x:u},backend:n,attrs:{shape:c}}),d=oL({inputs:{a:s,b:h},backend:n}),p=Ik({inputs:{x:d},backend:n}),m=VA({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),f=ML({inputs:{x:m},backend:n,attrs:{shape:c}}),g=nP({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}const jP={kernelName:fc,backendName:"cpu",kernelFunc:KP},YP={kernelName:_u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;VN(s,"multinomial");const l=o?s:KP({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=bo(Bi(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=dy.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}},QP=Ab,JP={kernelName:Eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;VN(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=QP(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},qP=Pb,eD={kernelName:Nu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;VN(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=qP(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},tD=Db,nD={kernelName:ku,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;VN(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=tD(c,h,d,p,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},rD={kernelName:Lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;VN(s,"oneHot");const u=Bi(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function sD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=JN({inputs:{input:r},backend:n}),t=sD({inputs:{x:e},backend:n}),s=dA({inputs:{input:r},backend:n}),a=sD({inputs:{x:s},backend:n}),i=ZN({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return lP({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const aD={kernelName:zc,backendName:"cpu",kernelFunc:sD},iD={kernelName:Ru,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=JN({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=dA({inputs:{input:s},backend:r}),i=sD({inputs:{x:a},backend:r}),o=ZN({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return lP({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function oD(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return qA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{Vi(a,e.shape,"All tensors passed to stack must have matching shapes"),Wi(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=mA({inputs:t.map((e=>{const t=qA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const lD={kernelName:Au,backendName:"cpu",kernelFunc:oD},uD={kernelName:Pu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;VN(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=Bi(s.shape),h=s.shape.length,d=po(s.shape),p=Bi(o),m=o.length,f=po(o),g=qi(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=So(e,h,d).map(((e,t)=>e+l[t]));g[wo(t,m,f)]=u[e]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},cD=HN(((e,t)=>Math.pow(e,t))),hD=rk(Du,cD),dD={kernelName:Du,backendName:"cpu",kernelFunc:hD},pD={kernelName:zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,o=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values,[h,d,p]=SR(o,l,u,a.shape,a.dtype,c,i.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),f=n.makeTensorInfo(p,a.dtype,d);return m.concat([f])}},mD={kernelName:Fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=_R(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},fD={kernelName:Wu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[m,f]=NR(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(m,a.dtype,f)}},gD={kernelName:Vu,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=kR(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},yD=fk(Bu,(e=>1/e)),bD={kernelName:Bu,backendName:"cpu",kernelFunc:yD},xD={kernelName:Ku,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;VN(s,"resizeBilinear");const l=po(s.shape),[u,c]=o,[h,d,p,m]=s.shape,f=n.data.get(s.dataId).values,g=new Float32Array(Bi([h,u,c,m])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],y=u+a*l[2];for(let e=0;e<m;e++){const t=f[c+e],n=f[h+e],a=t+(f[d+e]-t)*r,i=a+(n+(f[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,u,c,m],"float32",g)}},vD={kernelName:ju,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;VN([a,s],"resizeBilinearGrad");const o=po(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,m=new Float32Array(l*u*c*h),f=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],f=a+r*o[2],g=i+n*o[2],y=i+r*o[2],w=d*u,S=d*s,T=l*u,_=l*s;for(let e=0;e<h;e++){const t=x[v++];m[p+e]+=t*w,m[f+e]+=t*S,m[g+e]+=t*T,m[y+e]+=t*_}}}}return n.makeTensorInfo([l,c,u,h],"float32",m)}},wD={kernelName:Hu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;VN(s,"resizeNearestNeighbor");const l=po(s.shape),[u,c]=o,[h,d,p,m]=s.shape,f=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*m),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<m;e++){const t=f[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,m],s.dtype,g)}},SD={kernelName:Zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;VN([a,s],"resizeNearestNeighborGrad");const o=po(s.shape),l=po(a.shape),[u,c,h,d]=s.shape,[,p,m]=a.shape,f=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,y=[i&&p>1?c-1:c,i&&m>1?h-1:h],b=[i&&p>1?p-1:p,i&&m>1?m-1:m],x=y[0]/b[0],v=y[1]/b[1],w=1/x,S=1/v,T=2*Math.ceil(w)+2,_=2*Math.ceil(S)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-T/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*S),y=Math.floor(u-_/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<T;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],f=u*x;if(e===Math.min(c-1,i?Math.round(f):Math.floor(f)))for(let e=0;e<_;e++){const t=e+y;if(t<0||t>=m)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}f[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,f)}},TD={kernelName:Qu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;VN(s,"reverse");const i=s.shape.length,o=Qi(a,s.shape);if(0===i)return YN({inputs:{x:s},backend:n});const l=new id(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},_D={kernelName:Vc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=qi(r.dtype,Bi(r.shape)),[u,c,h,d]=r.shape,[p,m]=Mv(i,c,h),f=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],b=o[2],x=o[1];let v=(b-p)*g-(x-m)*f,w=(b-p)*f+(x-m)*g;v=Math.round(v+p),w=Math.round(w+m);let S=a;"number"!=typeof a&&(S=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(S=y[t+w*(h*d)+v*d+i]),l[t+n+s+i]=S}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ID=fk(Ju,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),CD={kernelName:Ju,backendName:"cpu",kernelFunc:ID},MD={kernelName:ec,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jy(0,s,i),d=PR(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function ED(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function ND(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const kD={kernelName:nc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=eo("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?ED(n,t[e+l]):ND(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},RD={kernelName:rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;VN([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=xd(s.dtype,a.dtype),h=bo(Bi(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:Bi(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},LD=Av,AD=Pv,PD=fk(sc,(e=>e>=0?AD*e:LD*(Math.exp(e)-1))),DD={kernelName:sc,backendName:"cpu",kernelFunc:PD},OD=fk(lc,(e=>e<0?-1:e>0?1:0)),GD={kernelName:lc,backendName:"cpu",kernelFunc:OD},zD=fk(ic,(e=>Math.sin(e))),FD={kernelName:ic,backendName:"cpu",kernelFunc:zD},WD=fk(oc,(e=>Math.sinh(e))),VD={kernelName:oc,backendName:"cpu",kernelFunc:WD},UD=Math.log(1.1920928955078125e-7)+2,BD=fk(cc,(e=>{const t=e>-UD,n=e<UD,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),XD={kernelName:cc,backendName:"cpu",kernelFunc:BD},$D={kernelName:pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;VN([s],"spaceToBatchND");const o=Bi(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=uD.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Ev(u.shape,a,o,!1),h=Nv(c.length,a.length,!1),d=kv(u.shape,a,o,!1),p=ML({inputs:{x:u},backend:n,attrs:{shape:c}}),m=yR({inputs:{x:p},backend:n,attrs:{perm:h}}),f=ML({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),f}},HD={kernelName:gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,m,f]=VR(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map((e=>Number(e))))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}},ZD={kernelName:yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=UR(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},KD={kernelName:bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=BR(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},jD={kernelName:xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=BR(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},YD={kernelName:vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Jy(0,s,o),p=!1,m=n.bufferSync(s);let f;switch(a.dtype){case"bool":f=PR(m,n.bufferSync(a),o,d,c,u,l,h,!!n.data.get(i.dataId).values[0],p);break;case"float32":case"int32":f=PR(m,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":f=PR(m,n.bufferSync(a),o,d,c,u,l,h,Kh(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}},QD={kernelName:mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=Qi(i,s.shape)[0],l=nw(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=FR({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},JD={kernelName:Sc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;VN(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},qD=fk(Fc,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),eO={kernelName:Fc,backendName:"cpu",kernelFunc:qD},tO={kernelName:_c,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;VN(s,"stridedSlice");const{finalShapeSparse:p,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=dv(s.shape,a,i,o,l,u,c,h,d);let w;if(f)w=ML({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||y){Wi(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ev(b,x,v),t=FR({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=ML({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{const e=qR(p,n.bufferSync(s),v,b);w=n.makeTensorInfo(m,e.dtype,e.values)}return w}},nO={kernelName:Ic,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[m,f]=tL(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}},rO={kernelName:Cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=rL(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},sO={kernelName:Mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=sL(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},aO=fk(Nc,(e=>Math.tan(e))),iO={kernelName:Nc,backendName:"cpu",kernelFunc:aO},oO=fk(kc,(e=>Math.tanh(e))),lO={kernelName:tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=Jy(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(a),p=n.bufferSync(r),m=PR(h,d,r.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(r.shape,m.dtype,m.values)}},uO={kernelName:Rc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;VN(s,"tile");const i=uL(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},cO={kernelName:Lc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;VN(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=dL(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},hO={kernelName:Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[m,f]=u??[h,d],g=[c,m,f,p],y=po(s.shape),b=y[0],x=y[1],v=y[2],w=po(g),S=w[0],T=w[1],_=w[2],I=qi(s.dtype,Bi(g));I.fill(l);const C=r.data.get(s.dataId).values,M=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?M:M.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<f;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,m=dO(c,d,o),f=dO(p,h,o);switch(i){case"nearest":a=mO(C,h,d,b,x,v,e,f,m,s,l);break;case"bilinear":a=fO(C,h,d,b,x,v,e,f,m,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}I[e*S+n*T+r*_+s]=a}return r.makeTensorInfo(g,s.dtype,I)}return{dataId:r.write(I,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function dO(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Oi(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Oi(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Oi(0,e,t-1)}(e,t);default:return e}}function pO(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function mO(e,t,n,r,s,a,i,o,l,u,c){return pO(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function fO(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,m=d+1;return(p-o)*((m-l)*pO(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*pO(e,t,n,r,s,a,i,h,m,u,c))+(o-h)*((m-l)*pO(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*pO(e,t,n,r,s,a,i,p,m,u,c))}const gO={kernelName:Dc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;VN(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=pL(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},yO={kernelName:Oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=FR({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=ML({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},bO={kernelName:Gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;VN(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=qA({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Bh(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=Sk({inputs:{a:r,b:c},backend:n}),i=tk({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=uR({inputs:{a:i,b:s},backend:n}),h=VA({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=oD({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},xO=[RL,$N,AL,DL,lk,OL,GL,zL,FL,WL,UL,XL,HL,jL,QL,tA,nA,rA,sA,kL,aA,iA,oA,pk,lA,nk,xk,cA,KN,hA,fA,yA,bA,xA,vA,wA,SA,_A,CA,MA,EA,NA,kA,RA,AA,PA,DA,OA,GA,zA,FA,WA,BA,gL,XA,Tk,JA,Ck,eP,Nk,oP,uP,cP,Lk,Dk,hP,dP,pP,mP,Wk,Bk,QN,fP,pA,yP,xP,wP,bL,Hk,jk,SP,qk,_P,MP,NP,LP,AP,PP,OP,rR,GP,zP,FP,WP,VP,UP,BP,iR,XP,ZP,YP,cR,dR,JP,eD,nD,fR,rD,iD,lD,uD,dD,wL,vR,pD,mD,fD,gD,qN,rP,bD,TL,IL,EL,xD,vD,wD,SD,TD,_D,CD,AR,MD,kD,RD,DD,GR,GD,FD,VD,WR,jP,XD,$D,HD,ZD,KD,jD,YD,QD,HR,JD,jR,JR,eO,tO,nO,rO,sO,lL,UA,iO,{kernelName:kc,backendName:"cpu",kernelFunc:oO},lO,uO,cO,hO,bR,gO,yO,bO,aD];for(const e of xO)Qc(e);const vO={},wO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function SO(e,t){vO[e]=t}function TO(e,t){if(!(e in vO)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=t??function(e){if(!Mo().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&2===e)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete vO[e]}),!1),Mo().getBool("SOFTWARE_WEBGL_ENABLED")&&(wO.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",wO)||n.getContext("experimental-webgl",wO):n.getContext("webgl2",wO)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;vO[e]=n}const n=vO[e];return null==n||n.isContextLost()?(delete vO[e],TO(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),vO[e])}var _O,IO,CO;function MO(e,t){return[t,e]}function EO(e){const t=Bi(e);return Zi(Math.ceil(t/4))}function NO(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function kO(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===Mo().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function RO(e,t){const n=t();return Mo().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+AO(e,t))}(e),n}function LO(e){return!!(Mo().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function AO(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function PO(e,t){return nG(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function DO(e,t){const n=nG(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(RO(e,(()=>e.shaderSource(n,t))),RO(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function OO(e,t){const n=nG(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(RO(e,(()=>e.shaderSource(n,t))),RO(e,(()=>e.compileShader(n))),Mo().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw zO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(_O||(_O={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(IO||(IO={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(CO||(CO={}));const GO=/ERROR: [0-9]+:([0-9]+):/g;function zO(e,t){const n=GO.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>Ki((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Ki(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function FO(e){return nG(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function WO(e,t){if(RO(e,(()=>e.linkProgram(t))),!Mo().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function VO(e,t){if(RO(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function UO(e,t){const n=nG(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return RO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),RO(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function BO(e,t){const n=nG(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return RO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),RO(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function XO(e){return nG(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function $O(e,t){const n=Mo().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function HO(e){return nG(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function ZO(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(RO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),RO(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),RO(e,(()=>e.enableVertexAttribArray(o))),!0)}function KO(e,t,n){rG(e,n),RO(e,(()=>e.activeTexture(e.TEXTURE0+n))),RO(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function jO(e,t,n){return nG(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function YO(e,t,n){return e.getUniformLocation(t,n)}function QO(e,t,n,r){RO(e,(()=>KO(e,t,r))),RO(e,(()=>e.uniform1i(n,r)))}function JO(e,t,n){RO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),RO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function qO(e,t){RO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),RO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function eG(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+tG(e,t))}function tG(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function nG(e,t,n){const r=RO(e,(()=>t()));if(null==r)throw new Error(n);return r}function rG(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function sG(e,t=2){return Bi(e.slice(0,e.length-t))}function aG(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function iG(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[sG(e),...aG(e)]),t}function oG(e,t=!1){let n=Mo().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Mo().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Mo().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Gi(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=Ji(e).newShape);let s=Bi(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=sG(e);let n=2,r=2;e.length&&([n,r]=aG(e)),s=t*(n/2)*(r/2),a=Zi(s).map((e=>2*e))}else a=Zi(s);return a}function lG(e){return e%2==0}function uG(e,t){if($i(e=e.slice(-2),t=t.slice(-2))||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r||lG(n)&&lG(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&lG(e[0])&&lG(t[0])}let cG,hG;function dG(e){if(null==cG){const t=TO(e);cG=t.getParameter(t.MAX_TEXTURE_SIZE)}return cG}function pG(e){if(null==hG){const t=TO(e);hG=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,hG)}function mG(e){if(0===e)return 0;let t;const n=TO(e);return t=fG(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:fG(n,"EXT_disjoint_timer_query")?1:0,t}function fG(e,t){return null!=e.getExtension(t)}function gG(e){try{if(null!=TO(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function yG(e){if(0===e)return!1;const t=TO(e);if(1===e){if(!fG(t,"OES_texture_float"))return!1}else if(!fG(t,"EXT_color_buffer_float"))return!1;return xG(t)}function bG(e){if(0===e)return!1;const t=TO(e);if(1!==e){if(fG(t,"EXT_color_buffer_float"))return xG(t);const e="EXT_color_buffer_half_float";if(fG(t,e)){const n=t.getExtension(e);return function(e,t){const n=kO(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!(!fG(t,"OES_texture_float")||!fG(t,"WEBGL_color_buffer_float"))&&xG(t)}function xG(e){const t=kO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function vG(e){return 2===e&&null!=TO(e).fenceSync}function wG(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Wi("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const SG=Object.freeze(Object.defineProperty({__proto__:null,assertNotComplex:wG,bindCanvasToFramebuffer:function(e){RO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),RO(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),RO(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))},bindColorTextureToFramebuffer:JO,bindTextureToProgramUniformSampler:QO,bindTextureUnit:KO,bindVertexBufferToProgramAttribute:ZO,callAndCheck:RO,canBeRepresented:LO,createFragmentShader:OO,createFramebuffer:HO,createProgram:FO,createStaticIndexBuffer:BO,createStaticVertexBuffer:UO,createTexture:XO,createVertexShader:DO,getBatchDim:sG,getExtensionOrThrow:PO,getFramebufferErrorMessage:tG,getMaxTexturesInShader:pG,getNumChannels:function(){return 2===Mo().getNumber("WEBGL_VERSION")?1:4},getProgramUniformLocation:YO,getProgramUniformLocationOrThrow:jO,getRowsCols:aG,getShapeAs3D:iG,getTextureShapeFromLogicalShape:oG,getWebGLDisjointQueryTimerVersion:mG,getWebGLErrorMessage:AO,getWebGLMaxTextureSize:dG,hasExtension:fG,isCapableOfRenderingToFloatTexture:yG,isDownloadFloatTextureEnabled:bG,isReshapeFree:uG,isWebGLFenceEnabled:vG,isWebGLVersionEnabled:gG,linkProgram:WO,logShaderSourceAndInfoLog:zO,resetMaxTextureSize:function(){cG=null},resetMaxTexturesInShader:function(){hG=null},unbindColorTextureFromFramebuffer:qO,unbindTextureUnit:function(e,t){rG(e,t),RO(e,(()=>e.activeTexture(e.TEXTURE0+t))),RO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))},validateFramebuffer:eG,validateProgram:VO,validateTextureSize:$O},Symbol.toStringTag,{value:"Module"})),TG=Mo();function _G(){let e,t,n,r,s,a,i,o,l,u;return 2===Mo().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Mo().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function IG(e,t,n="index"){const r=po(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function CG(e,t,n="index"){const r=po(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function MG(e){const t=po(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}TG.registerFlag("HAS_WEBGL",(()=>TG.getNumber("WEBGL_VERSION")>0)),TG.registerFlag("WEBGL_VERSION",(()=>gG(2)?2:gG(1)?1:0)),TG.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),TG.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===TG.get("WEBGL_VERSION"))),TG.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),TG.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),TG.registerFlag("WEBGL_PACK",(()=>TG.getBool("HAS_WEBGL"))),TG.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_CLIP",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_REDUCE",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_LAZILY_UNPACK",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_CONV_IM2COL",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>TG.getBool("WEBGL_PACK"))),TG.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>dG(TG.getNumber("WEBGL_VERSION")))),TG.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>pG(TG.getNumber("WEBGL_VERSION")))),TG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=TG.getNumber("WEBGL_VERSION");return 0===e?0:mG(e)})),TG.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>TG.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Od())),TG.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>yG(TG.getNumber("WEBGL_VERSION")))),TG.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!TG.getBool("WEBGL_FORCE_F16_TEXTURES")&&TG.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),TG.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>bG(TG.getNumber("WEBGL_VERSION")))),TG.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>vG(TG.getNumber("WEBGL_VERSION")))),TG.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>TG.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),TG.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),TG.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Od()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),TG.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),TG.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),TG.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),TG.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),TG.registerFlag("WEBGL_EXP_CONV",(()=>!1)),TG.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>TG.getBool("IS_TEST"))),TG.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),TG.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),TG.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),TG.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const EG="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:NG}=bw;function kG(e,t,n){const r=[];if(e.forEach((e=>{const t=Bi(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=WG(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?LG(e,r):RG(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=NG(e.shapeInfo.logicalShape,t.logicalShape),l=FG(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const m=1===Bi(e.shapeInfo.logicalShape),f=1===Bi(t.logicalShape);if(1!==a||m||f){if(m&&!f)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&$i(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=FG(l),c=NG(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let m="";return m=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=_G(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${AG}\n    ${PG}\n    ${DG}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if($i(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return $i(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${CG(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=IG(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${CG(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=IG(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=IG(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=IG(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=OG),[h,l,c,s,u,a,n.userCode].join("\n")}function RG(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=GG(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${zG(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=GG(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&$i(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=Ji(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${RG(VG(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${UG(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${zG(e)}\n      }\n    `;const u=a[0],c=a[1],h=GG(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Ji(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${RG(VG(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${UG(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${zG(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=GG(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=Ji(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${RG(VG(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${UG(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${zG(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],m=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${f}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=GG(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${f}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=Ji(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${RG(VG(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${UG(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${zG(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${GG(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=Ji(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${RG(VG(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${UG(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${zG(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],m=d[1];if(m===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${GG(n)};\n      vec2 uv = uvFromFlat(${p}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function LG(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${_G().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=_G();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=_G();if(null!=a&&$i(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${LG(VG(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${UG(a,r)});\n        }\n      `}const o=_G();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=_G();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",m=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],m=`b${e} * ${d} + `+m;return`\n    vec4 ${r}(${p}) {\n      int index = ${m};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const AG="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",PG="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DG="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",OG="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function GG(e){return`offset${e}`}function zG(e){const t=e.name,n=Bi(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function FG(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function WG(e,t,n){const{newShape:r,keptDims:s}=Ji(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!$i(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function VG(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function UG(e,t){return t.map((t=>e[t])).join(", ")}function BG(e,t,n){const r=[],s=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Mo().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function XG(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!$i(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!$i(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function $G(e){return Mo().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class HG{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=_O.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=_G();this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?CG(["r","c","d"],e):IG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ZG{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=_O.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=_G();this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?CG(["r","c","d"],e):IG(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class KG{constructor(e){this.variableNames=["A"],this.outTexUsage=IO.DOWNLOAD;const t=_G();this.outputShape=e,this.userCode=`\n      ${EG}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class jG{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=IO.DOWNLOAD;const t=_G();this.outputShape=e,this.userCode=`\n      ${EG}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const YG={R:0,G:1,B:2,A:3};class QG{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=_G();this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${YG[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":MG(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class JG{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_G();this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":MG(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function qG(e){const t=_G();return DO(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function ez(e){return UO(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function tz(e){return BO(e,new Uint16Array([0,1,2,2,1,3]))}function nz(e,t,n,r,s,a){$O(t,n);const i=XO(e),o=e.TEXTURE_2D;return RO(e,(()=>e.bindTexture(o,i))),RO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),RO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),RO(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),RO(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Mo().getNumber("WEBGL_VERSION")?RO(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):RO(e,(()=>e.texStorage2D(o,1,r,t,n))),RO(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function rz(e){return e.internalFormatFloat}function sz(e,t,n,r){const[s,a]=MO(t,n);return nz(e,s,a,rz(r),r.textureFormatFloat,e.FLOAT)}function az(e){return e.internalFormatHalfFloat}function iz(e,t,n,r){const[s,a]=MO(t,n);return nz(e,s,a,az(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function oz(e){return e.downloadTextureFormat}function lz(e,t,n,r){const[s,a]=MO(t,n);return nz(e,s,a,oz(r),e.RGBA,e.UNSIGNED_BYTE)}function uz(e){return e.internalFormatPackedFloat}function cz(e,t,n,r){const[s,a]=NO(t,n);return nz(e,s,a,uz(r),e.RGBA,e.FLOAT)}function hz(e){return e.internalFormatPackedHalfFloat}function dz(e,t,n,r){const[s,a]=NO(t,n);return nz(e,s,a,hz(r),e.RGBA,r.textureTypeHalfFloat)}function pz(e,t,n){return RO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ZO(e,t,"clipSpacePos",n,3,20,0)&&ZO(e,t,"uv",n,2,20,12)}function mz(e,t,n,r,s,a){let i,o,l;RO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===Mo().getNumber("WEBGL_VERSION")?RO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):RO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),RO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function fz(e,t,n){RO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Mo().getNumber("WEBGL_VERSION")?RO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):RO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Mo().getNumber("WEBGL_VERSION")?RO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):RO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),RO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function gz(e,t,n,r){const s=e.createBuffer();RO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return RO(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),RO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),RO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function yz(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function bz(e,t,n,r){const[s,a]=MO(t,n),i=new Uint8Array(function(e){return 4*e}(t*n));return RO(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function xz(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=NO(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function vz(e,t,n){const r=new Float32Array(t*n*4);return RO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}const wz=Object.freeze(Object.defineProperty({__proto__:null,bindVertexProgramAttributeStreams:pz,createBufferFromOutputTexture:gz,createFloat16MatrixTexture:iz,createFloat16PackedMatrixTexture:dz,createFloat32MatrixTexture:sz,createIndexBuffer:tz,createPackedMatrixTexture:cz,createUnsignedBytesMatrixTexture:lz,createVertexBuffer:ez,createVertexShader:qG,downloadByteEncodedFloatMatrixFromOutputTexture:bz,downloadFloat32MatrixFromBuffer:yz,downloadMatrixFromPackedOutputTexture:vz,downloadPackedMatrixFromBuffer:xz,getInternalFormatForFloat16MatrixTexture:az,getInternalFormatForFloat16PackedMatrixTexture:hz,getInternalFormatForFloat32MatrixTexture:rz,getInternalFormatForPackedMatrixTexture:uz,getInternalFormatForUnsignedBytesMatrixTexture:oz,uploadDenseMatrixToTexture:mz,uploadPixelDataToTexture:fz},Symbol.toStringTag,{value:"Module"}));class Sz{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Mo().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,SO(t,e)):this.gl=TO(t),e=this.gl,2===Mo().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>RO(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>RO(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>RO(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>RO(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>RO(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>RO(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>RO(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>RO(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Mo().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=PO(this.gl,e),fG(this.gl,t))this.textureHalfFloatExtension=PO(this.gl,t);else if(Mo().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),fG(this.gl,r))this.colorBufferHalfFloatExtension=PO(this.gl,r);else if(Mo().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",fG(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!fG(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=ez(this.gl),this.indexBuffer=tz(this.gl),this.framebuffer=HO(this.gl),this.textureConfig=kO(this.gl,this.textureHalfFloatExtension)}get debug(){return Mo().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;RO(e,(()=>e.finish())),RO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),RO(e,(()=>e.deleteFramebuffer(this.framebuffer))),RO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),RO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),RO(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),sz(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),iz(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),lz(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),fz(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),mz(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),dz(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),cz(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(qO(this.gl,this.framebuffer),this.outputTexture=null),RO(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>bz(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return xz(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return yz(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=gz(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Mo().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>vz(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=qG(t));const n=FO(t);RO(t,(()=>t.attachShader(n,this.vertexShader))),RO(t,(()=>t.attachShader(n,e))),WO(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&VO(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;RO(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),pz(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(RO(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&VO(this.gl,this.program),RO(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?jO(this.gl,e,t):YO(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),RO(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),QO(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=NO(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&VO(this.gl,this.program),eG(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}RO(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),RO(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=PO(this.gl,2===Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ji((()=>this.disposed||this.isQueryAvailable(e,Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Mo().platform&&(n=Mo().platform.setTimeoutCustom.bind(Mo().platform)),ji((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),JO(this.gl,e,this.framebuffer),this.debug&&eG(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(JO(this.gl,this.outputTexture,this.framebuffer),this.debug&&eG(this.gl)):qO(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;JO(r,e,this.framebuffer),this.debug&&eG(r),this.outputTexture=e,RO(r,(()=>r.viewport(0,0,t,n))),RO(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),RO(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:Tz,bincountImpl:_z,bincountReduceImpl:Iz,bitwiseAndImpl:Cz,castImpl:Mz,ceilImpl:Ez,concatImpl:Nz,equalImpl:kz,expImpl:Rz,expm1Impl:Lz,floorImpl:Az,gatherNdImpl:Pz,gatherV2Impl:Dz,greaterImpl:Oz,greaterEqualImpl:Gz,lessImpl:zz,lessEqualImpl:Fz,linSpaceImpl:Wz,logImpl:Vz,maxImpl:Uz,maximumImpl:Bz,minimumImpl:Xz,multiplyImpl:$z,negImpl:Hz,notEqualImpl:Zz,prodImpl:Kz,raggedGatherImpl:jz,raggedRangeImpl:Yz,raggedTensorToTensorImpl:Qz,rangeImpl:Jz,rsqrtImpl:qz,scatterImpl:eF,sigmoidImpl:tF,simpleAbsImpl:nF,sliceImpl:rF,sparseFillEmptyRowsImpl:sF,sparseReshapeImpl:aF,sparseSegmentReductionImpl:iF,sqrtImpl:oF,staticRegexReplaceImpl:lF,stridedSliceImpl:uF,stringNGramsImpl:cF,stringSplitImpl:hF,stringToHashBucketFastImpl:dF,subImpl:pF,tileImpl:mF,topKImpl:fF,transposeImpl:gF,uniqueImpl:yF}=mL;function bF(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function xF(e,t){return 1===t?[e]:bF(e,t)}class vF{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=$G(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=xF("rc",this.rank),t=FG(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class wF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function(e,t,n="index"){const r=e.map(((e,t)=>t)),s=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(r,t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):IG(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":MG(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class SF{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=_F(t,n),s=IF(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=TF(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===CO.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===CO.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===CO.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===CO.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===CO.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=_F(n,r),a=IF(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=TF(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Mo().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function TF(e,t,n,r,s){const a=function(e,t){switch(e){case CO.PACKED_2X2_FLOAT32:return uz(t);case CO.PACKED_2X2_FLOAT16:return hz(t);case CO.UNPACKED_FLOAT32:return rz(t);case CO.UNPACKED_FLOAT16:return az(t);case CO.PACKED_4X1_UNSIGNED_BYTE:return oz(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=NO(e[0],e[1]);i=t*n}else{const[t,n]=MO(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function _F(e,t){if(e===IO.UPLOAD)return CO.PACKED_2X2_FLOAT32;if(e===IO.RENDER||null==e)return function(e){return Mo().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?CO.PACKED_2X2_FLOAT32:CO.UNPACKED_FLOAT32:e?CO.PACKED_2X2_FLOAT16:CO.UNPACKED_FLOAT16}(t);if(e===IO.DOWNLOAD||e===IO.PIXELS)return CO.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function IF(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class CF{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const MF="if (isnan(x)) return x;",EF="return abs(x);",NF=MF+"\n  return (x < 0.0) ? 0.0 : x;\n",kF=MF+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",RF="return x;";class LF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class AF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length);const t=e.length,n=xF("rc",t),r=FG(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const PF=ib,DF={},OF=Mo().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class GF extends Ai{nextDataId(){return GF.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Mo().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Sz)t=e;else{const n=TO(Mo().getNumber("WEBGL_VERSION"),e);t=new Sz(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=TO(Mo().getNumber("WEBGL_VERSION"));t=new Sz(e),this.binaryCache=function(e){return e in DF||(DF[e]={}),DF[e]}(Mo().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new SF(this.gpgpu),this.numMBBeforeWarning=null==Mo().global.screen?1024:Mo().global.screen.height*Mo().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Li(this,Jd())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=iG(t),u=new QG(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((Mo().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Mo().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:IO.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Mo().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:IO.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new LF(i,RF):new CF(i,RF);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=$h()),c="complex64"===r?Vv(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=$h()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new LF(r,RF):new CF(r,RF);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(Mo().getBool("DEBUG")&&!Mo().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Mo().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Mo().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...EO(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Vv(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=Bi(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;RO(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Jd().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new LF(s,RF):new CF(s,RF);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Jd().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Kh(e)));return qp(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return qp(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!LO(n))throw Mo().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=Bi(t);if(Mo().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...EO(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Mo().getBool("WEBGL_PACK")&&!0===r,i=a?iG(t):t,o=a?new jG(i):new KG(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Yh(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Yh(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=Fi(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:$h(),endMs:null}}endTimer(e){return Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=$h(),e)}async getQueryTime(e){if(Mo().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=OF){return Mo().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Bi(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){$c("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return PF(e.shape,t)}packedUnaryOp(e,t,n){const r=new LF(e.shape,t),s=this.compileAndRun(r,[e],n);return Jd().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=nF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Mo().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,EF,e.dtype);const t=new CF(e.shape,EF),n=this.compileAndRun(t,[e]);return Jd().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&io(n[0])){const s=n.map((e=>Zh(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Jd().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new AF(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new vF(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[sG(e.shape),...aG(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[sG(t),...aG(t)],a=new wF(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&Wi(Bi(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=iG(s);let o;o=r?new ZG(i):new HG(i);const l=[t??EO(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===_O.DENSE){const t=a??EO(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Bi(i.shape))return o.values=qi(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Bi(t.shape)<=Mo().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!uG(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=WG(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=po(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&$i(t.shape,a),m=1===Bi(t.shape),f=xf(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&$i(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${g}_${i?l:""}_${o.length}_${m}_${f}_${p}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${Mo().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=kG(s,i,t),l=OO(e.gl,o),u=e.createProgram(l);return Mo().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},BG(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let m;p&&(m=this.startTimer()),Mo().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(XG(t.inShapeInfos,n),XG([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Mo().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){const{uniformShape:n}=WG(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=a){if(s.isUniform){if(Bi(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}continue}null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=po(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const f=Mo().getNumber("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=$h();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Mo().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Mo().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ep((()=>{if(!Mo().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Mo().getBool("DEBUG");Mo().set("DEBUG",!1);const t=this.abs(Uf(1e-8)).dataSync()[0];if(Mo().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=$h());let c=t.texShape;if(null==c&&(c=oG(n,o),t.texShape=c),null!=s){const e=iG(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(o||!d)&&([i,h]=NO(c[0],c[1])),a=o?new JG(e,d):new QG(e,d);const p=d?[h,i]:c,m=this.makeTensorInfo(p,r),f=this.texData.get(m.dataId);f.usage=d?IO.PIXELS:IO.UPLOAD,f.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),i,h,s);const g=[[h,i]],y=this.runWebGLProgram(a,[m],r,g,!0),b=this.texData.get(y.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Mo().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(m),l&&(this.uploadWaitMs+=$h()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*so(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await bv(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(zO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=BG(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=Jd().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return Jd().makeTensorFromDataId(l,t,n,o)}}function zF(){Mo().set("WEBGL_FORCE_F16_TEXTURES",!0)}GF.nextDataId=0,Gd()&&sp("webgl",(()=>new GF),2);const FF={forceHalfFloat:zF},WF="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class VF{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=wf(t,n),this.enableShapeUniforms=$G(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const UF="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class BF{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=wf(t,n);const s=this.outputShape.length;this.enableShapeUniforms=$G(s);let a="";if(r)if(0===s||1===Bi(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${FG(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=xF("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function XF(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const $F={kernelName:Kl,backendName:"webgl",kernelFunc:XF};function HF(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=XF({inputs:{x:r},backend:n}),l=XF({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const ZF={kernelName:al,backendName:"webgl",kernelFunc:HF},KF="return (a < 0.) ? b * a : a;",jF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",YF={kernelName:eu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Bh(a,"float32")),o=Mo().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BF(jF,s.shape,i.shape):new VF(KF,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},QF="return (a < 0.) ? b * a : a;",JF="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qF={kernelName:Ou,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Mo().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BF(JF,r.shape,s.shape):new VF(QF,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},eW="if (isnan(x)) return x;";function tW({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Mo().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new LF(i.shape,t):new CF(i.shape,e),o.runWebGLProgram(u,[i],l)}}function nW({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new VF(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],xd(n.dtype,r.dtype))})),a=HF({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||xd(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?gw(e):e,r="string"===l.dtype?gw(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=Mo().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new BF(t,l.shape,u.shape,n):new VF(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function rW(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":NF;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":kF;if("prelu"===e)return t?JF:QF;if("leakyrelu"===e)return t?jF:KF;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class sW{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=$G(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",g="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${m[0]});\n          result += (${p[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class aW{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=wf(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const iW="return a * b;";function oW(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=xd(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new aW("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new aW("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=HF({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=$z(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Mo().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BF(iW,r.shape,s.shape):new VF(iW,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const lW={kernelName:Iu,backendName:"webgl",kernelFunc:oW};function uW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=Bi(s.shape),l=Yi(a,o),u=Bi(l);Wi(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||uG(s.shape,l)||null!==c.texture&&uG(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[sG(e.shape),...aG(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[sG(t),...aG(t)],i=new wF(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const cW={kernelName:$u,backendName:"webgl",kernelFunc:uW};class hW{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${Hi(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class dW{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function pW(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Cv(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new hW({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new hW({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new dW({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class mW{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=FG(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class fW{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=FG(this.rank),s=bF("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function gW(e,t,n){const r=Mo().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fW(e.shape,t):new mW(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function yW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=Qi(s,e.shape);let o=i;const l=Of(o,a),u=null!=l;let c=e;u&&(c=gW(e,l,r),o=zf(o.length,a)),Df("sum",o,a);const[h,d]=Af(c.shape,o);let p=h;n&&(p=Pf(h,i));const m=Bi(d),f=uW({inputs:{x:c},attrs:{shape:[Bi(e.shape)/m,m]},backend:r}),g=pW(f,vd(e.dtype),"sum",r),y=uW({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const bW={kernelName:dc,backendName:"webgl",kernelFunc:yW};function xW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=gF(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=gW(s,a,i);return u}const vW={kernelName:Pc,backendName:"webgl",kernelFunc:xW};function wW({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[c-2]:t.shape[c-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Bi(f),b=Bi(g),x=wf(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,m]);Wi(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,p]:[y,p,h],w=r?[b,m,d]:[b,d,m],S=uW({inputs:{x:e},backend:s,attrs:{shape:v}}),T=uW({inputs:{x:t},backend:s,attrs:{shape:w}}),_=[S,T],I=Math.max(y,b),C=n?S.shape[1]:S.shape[2],M=null!=a,E=null!=i,N="leakyrelu"===l,k=null!=l?rW(l,!0):null;let R;if((1===p||1===m)&&C>1e3&&!1===(M||E||N||null!=k)){let e=S,t=T;n&&(e=xW({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),_.push(e)),r&&(t=xW({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),_.push(t));const a=1===m;let i=e;1!==m&&(i=uW({inputs:{x:e},backend:s,attrs:{shape:[I,C,1]}}),_.push(i));const o=1===m?2:1;let l=t;a&&(l=uW({inputs:{x:t},backend:s,attrs:{shape:[I,1,C]}}),_.push(l));const u=oW({inputs:{a:i,b:l},backend:s});R=yW({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),_.push(u)}else{const l=xd(e.dtype,t.dtype),u=new sW(v,w,[I,p,m],n,r,M,k,E,N),c=[S,T];if(null!=a&&c.push(a),E&&c.push(i),N){const e=s.makeTensorInfo([],"float32",Bh(o,"float32"));c.push(e),_.push(e)}R=s.runWebGLProgram(u,c,l)}const L=uW({inputs:{x:R},backend:s,attrs:{shape:x}});_.push(R);for(const e of _)s.disposeIntermediateTensorInfo(e);return L}const SW={kernelName:Uc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return wW({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},TW="return abs(x);",_W={kernelName:Lo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=nF(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Mo().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LF(r.shape,TW):new CF(r.shape,TW),n.runWebGLProgram(s,[r],r.dtype)}},IW=tW({opSnippet:MF+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),CW={kernelName:Ao,backendName:"webgl",kernelFunc:IW},MW=tW({opSnippet:MF+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),EW={kernelName:Po,backendName:"webgl",kernelFunc:MW},NW="return a + b;",kW=nW({opSnippet:NW,packedOpSnippet:NW,supportsComplex:!0,cpuKernelImpl:Tz}),RW={kernelName:Do,backendName:"webgl",kernelFunc:kW};class LW{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class AW{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const PW={kernelName:Oo,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return XF({inputs:{x:s[0]},backend:r});if(s.length>Mo().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>xd(e,t))),i=s.map((e=>e.shape)),o=Mo().getBool("WEBGL_PACK")?new AW(s[0].shape,i):new LW(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},DW={kernelName:Go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=Qi(a,s.shape);let u=l;const c=Of(u,o);let h=s;null!=c&&(h=xW({inputs:{x:s},backend:n,attrs:{perm:c}}),u=zf(u.length,o)),Df("all",u,o);const[d,p]=Af(h.shape,u),m=uW({inputs:{x:h},backend:n,attrs:{shape:[-1,Bi(p)]}}),f=pW(m,m.dtype,"all",n);let g;return g=uW(i?{inputs:{x:f},backend:n,attrs:{shape:Pf(d,l)}}:{inputs:{x:f},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=c&&n.disposeIntermediateTensorInfo(h),g}},OW={kernelName:zo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=Qi(a,s.shape);let u=l;const c=Of(u,o);let h=s;null!=c&&(h=xW({inputs:{x:s},backend:n,attrs:{perm:c}}),u=zf(u.length,o)),Df("any",u,o);const[d,p]=Af(h.shape,u),m=uW({inputs:{x:h},backend:n,attrs:{shape:[-1,Bi(p)]}}),f=pW(m,m.dtype,"any",n);let g;return g=uW(i?{inputs:{x:f},backend:n,attrs:{shape:Pf(d,l)}}:{inputs:{x:f},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class GW{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class zW{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Wi(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=FG(o),u=xF("coords",o);let c,h;if(1===a){h=o+1;const e=FG(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],m=d.map((e=>"int "+e)),f=xF("sourceLocR",h-1).concat("inIdx.r"),g=xF("sourceLocG",h-1).concat("inIdx.g"),y=xF("sourceLocB",h-1).concat("inIdx.b"),b=xF("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${f.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function FW(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Cv(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new GW(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=FW(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function WW(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Cv(s[s.length-1]),i=new zW(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=WW(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function VW(e,t,n,r){const s=[n];if(Df("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Mo().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Af(i.shape,s),u=Bi(l),c=uW({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=FW(e,c,r);n.push(h);const d=uW({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return WW(e,t,r)}const UW={kernelName:Fo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=Qi(a,s.shape);const o=Of(i,s.shape.length);let l=s;const u=[];null!=o&&(l=xW({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=zf(i.length,l.shape.length)),Df("argMax",[i[0]],l.shape.length);const c=VW(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},BW={kernelName:Wo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=Qi(a,s.shape);const o=Of(i,s.shape.length);let l=s;const u=[];null!=o&&(l=xW({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=zf(i.length,l.shape.length)),Df("argMin",[i[0]],l.shape.length);const c=VW(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},XW=tW({opSnippet:MF+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$W={kernelName:Vo,backendName:"webgl",kernelFunc:XW},HW=tW({opSnippet:MF+"return log(x + sqrt(x * x + 1.0));"}),ZW={kernelName:Uo,backendName:"webgl",kernelFunc:HW},KW=tW({opSnippet:MF+"\n  return atan(x);\n"}),jW={kernelName:Bo,backendName:"webgl",kernelFunc:KW},YW=nW({opSnippet:WF+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+UF+"\n  return result;\n"}),QW={kernelName:$o,backendName:"webgl",kernelFunc:YW},JW=tW({opSnippet:MF+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),qW={kernelName:Xo,backendName:"webgl",kernelFunc:JW};class eV{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const m="avg"===t,f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(m||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?f:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${m}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class tV{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${f}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${m};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${m} +\n                      wR * ${m} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),S=a%4,T=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${f}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${T}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${2===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${T}\n            } else if (${3===S}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${T}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const nV={kernelName:Ho,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;wG(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Wi(km(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=vm(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&$i(u.inShape,u.outShape))return XF({inputs:{x:s},backend:n});const c=new eV(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},rV={kernelName:Ko,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=wm(s.shape,a,i,[1,1,1],o,l,u),h=new tV(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class sV{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aV{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,m=h-1-e.padInfo.top,f=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${m}, ${f});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const iV={kernelName:jo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=wm(i.shape,o,l,[1,1,1],u,c),d=new aV(h);return n.runWebGLProgram(d,[s],i.dtype)}},oV={kernelName:Zo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;wG([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=vm(i.shape,o,l,1,u),h=new sV(c);return n.runWebGLProgram(h,[s],i.dtype)}},lV={kernelName:Yo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return wW({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class uV{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],wf(e,t),wf(e,n);let i="0.0";null!=r&&(wf(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(wf(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class cV{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],wf(e,t),wf(e,n);let i="vec4(0.0)";null!=r&&(wf(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(wf(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const hV={kernelName:Bl,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;Wi(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Wi(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Wi(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Mo().getBool("WEBGL_PACK_NORMALIZATION")?new cV(r.shape,s.shape,a.shape,c,h,l):new uV(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class dV{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=FG(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return pV.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${pV[t]} = start[${t}] + coords.${pV[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const pV=["x","y","z","w","u","v"];class mV{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=FG(this.rank),n=xF("coords",this.rank),r=xF("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function fV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=hv(s,a,i);if(qx(s,o,l),0===Bi(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=rF(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=uv(s.shape,o,l);if(u||!c){const e=Mo().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mV(l):new dV(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=cv(t,po(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const gV={kernelName:ac,backendName:"webgl",kernelFunc:fV},yV={kernelName:Qo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Wi(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Ev(s.shape,a,o),u=Nv(l.length,a.length),c=kv(s.shape,a,o),h=Rv(i,a.length),d=Lv(c,i,a.length),p=[],m=uW({inputs:{x:s},backend:n,attrs:{shape:l}}),f=xW({inputs:{x:m},backend:n,attrs:{perm:u}}),g=uW({inputs:{x:f},backend:n,attrs:{shape:c}}),y=fV({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(m),p.push(f),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},bV={kernelName:Jo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=_z(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},xV={kernelName:qo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Mo().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=Mo().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=Cz(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new BF("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new VF("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},vV={kernelName:tl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=wf(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},wV=nW({opSnippet:"return float(a != b);",cpuKernelImpl:Zz,dtype:"bool"}),SV={kernelName:Mu,backendName:"webgl",kernelFunc:wV};function TV(e){const{inputs:t,backend:n}=e,{input:r}=t;return XF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const _V={kernelName:Uu,backendName:"webgl",kernelFunc:TV},IV={kernelName:nl,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return XF({inputs:{x:a},backend:r});const t=Rg(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=HF({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=TV({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ro(a.dtype,i)){const e=XF({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=Mz(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new CF(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",qi("bool",1)),t=wV({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},CV="return ceil(x);",MV=tW({opSnippet:CV,packedOpSnippet:CV,cpuKernelImpl:Ez}),EV={kernelName:rl,backendName:"webgl",kernelFunc:MV};class NV{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class kV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const RV={kernelName:sl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Mo().getBool("WEBGL_PACK_CLIP")?new kV(s.shape):new NV(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class LV{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function AV(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const PV={kernelName:il,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new LV(r.shape),i=[AV(r,s.complexTensorInfos.real),AV(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class DV{constructor(e){this.outputShape=[],this.outputShape=vv(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class OV{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=vv(e,t);const n=this.outputShape,r=n.length,s=FG(r),a=xF("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${GV(i,l,t)}),\n            vec2(${GV(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${GV(i,l,p)}),\n          vec2(${GV(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function GV(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function zV(e){const{inputs:t,backend:n}=e,{input:r}=t;return XF({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const FV={kernelName:Yl,backendName:"webgl",kernelFunc:zV};function WV(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>TV({inputs:{input:e},backend:n}))),s=e.map((e=>zV({inputs:{input:e},backend:n}))),a=WV(r,t,n),i=WV(s,t,n),o=HF({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=[-1,Bi(e.shape.slice(t))];return uW({inputs:{x:e},backend:n,attrs:{shape:r}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=vv(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=Nz(a,i,r,o),u=vv(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>Bi(e.shape)>0)),i=Mo().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new CF(e[0].shape,RF):new LF(e[0].shape,RF);return n.runWebGLProgram(t,e,r)}const o=Mo().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(WV(s,t,n))}const r=WV(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new OV(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=vv(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>uW({inputs:{x:e},attrs:{shape:[-1,Bi(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new DV(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=uW({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function VV(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=Qi(s,t[0].shape)[0],i=t.map((e=>e.shape));xv(i,a);const o=vv(t.map((e=>e.shape)),a);if(0===Bi(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>Bi(e.shape)>0));return 1===l.length?XF({inputs:{x:l[0]},backend:n}):WV(l,a,n)}const UV={kernelName:ol,backendName:"webgl",kernelFunc:VV};class BV{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),m=e.inChannels%4,f="channelsLast"===e.dataFormat,g=f?1:2,y=f?2:3,b=f?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===m}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===m}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===m}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class XV{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),m=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===m}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $V{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=$G(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?Gi(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${p}\n         setOutput(result);\n       }\n     `}}class HV{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=$G(this.outputShape.length);const{dataFormat:n}=t,r=_G(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function ZV(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function KV({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,m=!1;let f;const g=[];if(null!=a){const e=ZV(a.shape,p);null!=e&&(a=uW({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=ZV(s.shape,p);null!=e&&(s=uW({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==d||!(c>1e3))&&u.isPacked&&p&&null!=u.texture&&l[2]%2!=0&&$i(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Wi(uG(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=uW({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(p);const y=wW({a:h,b:p,backend:r,transposeA:!1,transposeB:m,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=r.texData.get(y.dataId);Wi(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=n.outShape,f=XF({inputs:{x:y},backend:r}),f.shape=n.outShape,g.push(y)}else{const l=n.outHeight*n.outWidth,u=uW({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=uW({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=wW({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:m,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=uW({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return f}function jV({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,m="channelsLast"===p,f=l*u*c,g=d*h,y=[n.batchSize,f,g],b=[];if(null!=a){const e=ZV(a.shape,m);null!=e&&(a=uW({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=ZV(s.shape,m);null!=e&&(s=uW({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=uW({inputs:{x:t},backend:r,attrs:{shape:[1,f,Bi(t.shape)/f]}});b.push(x);const v=new HV(y,n),w=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=r.runWebGLProgram(v,[e],"float32",w),T=uW({inputs:{x:S},backend:r,attrs:{shape:y}});b.push(S),b.push(T);const _=null!=s,I=null!=a,C="leakyrelu"===o,M=o?rW(o,!0):null,E=new sW(m?T.shape:x.shape,m?x.shape:T.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,_,M,I,C),N=m?[T,x]:[x,T];if(s&&N.push(s),I&&N.push(a),C){const e=r.makeTensorInfo([],"float32",Bh(i,"float32"));N.push(e),b.push(e)}const k=r.runWebGLProgram(E,N,"float32"),R=uW({inputs:{x:k},backend:r,attrs:{shape:n.outShape}});b.push(k);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const YV={kernelName:ll,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Lm(l),d=Sm(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&Mo().getBool("WEBGL_EXP_CONV")){const e=new $V(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(Mo().getBool("WEBGL_CONV_IM2COL"))p=jV({x:s,filter:a,convInfo:d,backend:n});else{const e=new BV(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=KV({x:s,filter:a,convInfo:d,backend:n});const m=uW({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),m}};class QV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class JV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const tU={kernelName:ul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Lm(l),d=Sm(s.shape,c,i,1,o,u,!1,h),p=new QV(d);return n.runWebGLProgram(p,[s,a],"float32")}};class nU{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=$G(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const rU={kernelName:cl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Lm(u),d=Sm(i,a.shape,o,1,l,c,!1,h);if(Mo().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new nU(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new JV(d);return n.runWebGLProgram(e,[s,a],"float32")}}},sU={kernelName:hl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Tm(s.shape,a.shape,i,l,o),c=new XV(u);return n.runWebGLProgram(c,[s,a],"float32")}},aU={kernelName:dl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=Tm(s.shape,l,i,1,o),c=new qV(u);return n.runWebGLProgram(c,[s,a],"float32")}},iU={kernelName:pl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=Tm(l,a.shape,o,1,i),c=new eU(u);return n.runWebGLProgram(c,[s,a],"float32")}},oU=tW({opSnippet:eW+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${UF}\n  return result;\n`}),lU={kernelName:ml,backendName:"webgl",kernelFunc:oU},uU=tW({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),cU={kernelName:fl,backendName:"webgl",kernelFunc:uU};class hU{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,m]=[i-1+".0",o-1+".0"],[f,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`\n      const float height_ratio = float(${f});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${m} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const dU={kernelName:bl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new hU(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var pU;!function(e){e.Prod="*",e.Sum="+"}(pU||(pU={}));class mU{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===pU.Prod?"1.0":"0.0",i=n?a:`getX(${fU(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${FG(s)} coords = getOutputCoords();\n        int end = ${gU(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${gU(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${fU(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function fU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function gU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function yU(e,t,n,r,s,a){const i=t.shape.length,o=Of([r],i);let l=t;null!=o&&(l=xW({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=zf(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=XF({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new mU(e,l.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new mU(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=xW({inputs:{x:h},backend:n,attrs:{perm:Gf(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const bU={kernelName:gl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return yU(pU.Prod,s,n,a,i,o)}},xU={kernelName:yl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return yU(pU.Sum,s,n,a,i,o)}},vU={kernelName:xl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=_z(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=Iz(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class wU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const SU={kernelName:vl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new wU("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class TU{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=$G(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class _U{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=$G(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?Gi(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",m="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${f}\n        ${m}\n        setOutput(result);\n      }\n    `}}const IU={kernelName:wl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),Wi(km(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Sm(s.shape,a.shape,i,c,o,u,!0);let d;d=Mo().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new _U(h):new TU(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,a],"float32",p)}};class CU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const EU={kernelName:Sl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Sm(s.shape,c,i,o,l,u,!0),d=new CU(h);return n.runWebGLProgram(d,[s,a],"float32")}},NU={kernelName:Tl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Sm(c,a.shape,i,o,l,u,!0),d=new MU(h);return n.runWebGLProgram(d,[s,a],"float32")}};class kU{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const RU={kernelName:_l,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=Bi(r.shape),i=uW({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new kU(a),l=n.runWebGLProgram(o,[i],i.dtype),u=uW({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class LU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const AU={kernelName:Il,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=xm(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new LU(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=uW({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},PU={kernelName:kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Yv(s,a.length);Jv(i.length,l,a);const{path:u,steps:c}=qv(o,l),h=c.length;let d=null,p=i.length;const m=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Qv(p,l[t]);let s;ew(e)?s=a[t]:(s=xW({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$i(s.shape,i)||(s=uW({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===d?d=s:(d=oW({inputs:{a:s,b:d},backend:n}),m.push(d))}e<h-1&&(u[e]>=0&&(d=yW({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),m.push(d)),p--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},DU=tW({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),OU={kernelName:Rl,backendName:"webgl",kernelFunc:DU},GU={kernelName:Ll,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Mo().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BF("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new VF("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},zU=nW({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:kz}),FU={kernelName:Pl,backendName:"webgl",kernelFunc:zU},WU=tW({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Dv};\n  float a1 = ${Ov};\n  float a2 = ${Gv};\n  float a3 = ${zv};\n  float a4 = ${Fv};\n  float a5 = ${Wv};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),VU={kernelName:Al,backendName:"webgl",kernelFunc:WU},UU=tW({opSnippet:eW+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Rz,dtype:"float32"}),BU={kernelName:Dl,backendName:"webgl",kernelFunc:UU};function XU(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(Wi(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),uW({inputs:{x:a},backend:r,attrs:{shape:o}})}const $U={kernelName:Ol,backendName:"webgl",kernelFunc:XU},HU="return exp(x) - 1.0;",ZU=tW({opSnippet:HU,packedOpSnippet:HU,cpuKernelImpl:Lz}),KU={kernelName:Gl,backendName:"webgl",kernelFunc:ZU};class jU{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function YU(e,t,n){const r=n.texData.get(e.dataId),s=Bi(e.shape),a=e.shape[e.shape.length-1],i=uW({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new jU("real",o,t),u=new jU("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=HF({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const m=uW({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),m}const QU={kernelName:zl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return YU(r,!1,n)}};class JU{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function qU(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||uo(s),"string"===a){const e=eo(a,Bi(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new JU(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const eB={kernelName:Fl,backendName:"webgl",kernelFunc:qU};class tB{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const nB={kernelName:Wl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new tB(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},rB="return floor(x);",sB=tW({opSnippet:rB,packedOpSnippet:rB,cpuKernelImpl:Az}),aB={kernelName:Vl,backendName:"webgl",kernelFunc:sB},iB=nW({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),oB={kernelName:Ul,backendName:"webgl",kernelFunc:iB};class lB{constructor(e){this.variableNames=["A"];const t=_G(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class uB{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=_G(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const cB={kernelName:Wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];if(o||i){const e=Mo().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==hB||e!==dB)&&(dB=e,hB=document.createElement("canvas").getContext("2d",{willReadFrequently:dB})),hB.canvas.width=l,hB.canvas.height=u,hB.drawImage(s,0,0,l,u),s=hB.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=IO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=Mo().getBool("WEBGL_PACK")?new uB(h):new lB(h),m=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),m}};let hB,dB=Mo().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const pB={kernelName:Bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=r,f=Lm(c),g=Sm(s.shape,a.shape,l,h,u,d,!1,f);let y;const b=[],x=null!=i,v=null!=o,w="leakyrelu"===p,S=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=uW({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Bh(m,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===f&&Mo().getBool("WEBGL_EXP_CONV")){const e=p?rW(p,!0):null,t=new $V(g,x,e,v,w),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=S();y=n.runWebGLProgram(t,s,"float32",r)}else if(Mo().getBool("WEBGL_CONV_IM2COL"))y=jV({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:m});else{const e=p?rW(p,!1):null,t=new BV(g,x,e,v,w),r=S();y=n.runWebGLProgram(t,r,"float32")}else y=KV({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:m});const T=uW({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}},mB={kernelName:Xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,m=[];let f=c;null==f&&(f=[1,1]),Wi(km(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));const g=Sm(s.shape,a.shape,l,f,u,h,!0),y=Mo().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=d?rW(d,y):null,x=[s,a],v=null!=i,w=null!=o,S="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),S){const e=n.makeTensorInfo([],"float32",Bh(p,"float32"));x.push(e),m.push(e)}let T;T=y?new _U(g,v,b,w,S):new TU(g,v,b,w,S);const _=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=n.runWebGLProgram(T,x,"float32",_);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class fB{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=FG(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const gB={kernelName:$l,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=Bi(r.shape),[l,u,c,h]=Qx(r,s),d=uW({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=uW({inputs:{x:r},backend:n,attrs:{shape:[Bi(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Pz(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const m=new fB(i,h,[u,c],r.shape),f=n.runWebGLProgram(m,[p,d],p.dtype),g=uW({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};class yB{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=FG(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function bB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=Qi(i,s.shape)[0];if(Mo().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];Wi(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=mw(s,a,l,o),c=Bi(a.shape),h=[],d=uW({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=uW({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=Dz(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const f=new yB(d.shape,m),g=n.runWebGLProgram(f,[d,p],d.dtype);h.push(g);const y=uW({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const xB={kernelName:Xl,backendName:"webgl",kernelFunc:bB},vB=nW({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Oz,dtype:"bool"}),wB={kernelName:Hl,backendName:"webgl",kernelFunc:vB},SB=nW({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Gz}),TB={kernelName:Zl,backendName:"webgl",kernelFunc:SB},_B={kernelName:jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return YU(r,!0,n)}},IB=tW({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),CB={kernelName:Ql,backendName:"webgl",kernelFunc:IB},MB=tW({opSnippet:"return float(isinf(x));",dtype:"bool"}),EB={kernelName:Jl,backendName:"webgl",kernelFunc:MB},NB=tW({opSnippet:"return float(isnan(x));",dtype:"bool"}),kB={kernelName:ql,backendName:"webgl",kernelFunc:NB},RB=nW({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:zz,dtype:"bool"}),LB={kernelName:tu,backendName:"webgl",kernelFunc:RB},AB=nW({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Fz,dtype:"bool"}),PB={kernelName:nu,backendName:"webgl",kernelFunc:AB},DB={kernelName:ru,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Wz(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},OB=tW({opSnippet:eW+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Vz}),GB={kernelName:su,backendName:"webgl",kernelFunc:OB},zB=tW({opSnippet:eW+"\n  return log(1.0 + x);\n"}),FB={kernelName:au,backendName:"webgl",kernelFunc:zB},WB=nW({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),VB={kernelName:iu,backendName:"webgl",kernelFunc:WB},UB=tW({opSnippet:"return float(!(x >= 1.0));"}),BB={kernelName:ou,backendName:"webgl",kernelFunc:UB},XB=nW({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),$B={kernelName:lu,backendName:"webgl",kernelFunc:XB};class HB{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class ZB{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const KB={kernelName:cu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=Mo().getBool("WEBGL_PACK_NORMALIZATION")?new ZB(s.shape,a,i,o,l):new HB(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class jB{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const YB={kernelName:hu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new jB(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function QB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=Qi(a,s.shape);let u=l;const c=Of(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=gF(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=gW(s,c,n);u=zf(u.length,o)}Df("max",u,o);const[m,f]=Af(p.shape,u);let g,y=m;if(i&&(y=Pf(m,l)),d){const e=n.texData.get(p.dataId).values,t=Uz(e,Bi(f),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=Bi(t),a=uW({inputs:{x:e},attrs:{shape:[Bi(e.shape)/s,s]},backend:r}),i=pW(a,e.dtype,"max",r),o=uW({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,f,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const JB={kernelName:du,backendName:"webgl",kernelFunc:QB},qB=nW({opSnippet:WF+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+UF+"\n  return result;\n",cpuKernelImpl:Bz}),eX={kernelName:pu,backendName:"webgl",kernelFunc:qB},tX={kernelName:mu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;wG(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Wi(km(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=vm(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&$i(u.inShape,u.outShape))return XF({inputs:{x:s},backend:n});const c=new eV(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},nX={kernelName:gu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=wm(s.shape,a,i,[1,1,1],o,u,l),h=new tV(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class rX{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sX{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aX={kernelName:yu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=wm(i.shape,o,l,[1,1,1],u,c),d=new tV(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),m=new sX(h),f=n.runWebGLProgram(m,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),f}},iX={kernelName:fu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;wG([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=vm(o.shape,l,u,1,c,h),p=new eV(d,"max",!0),m=n.runWebGLProgram(p,[o],o.dtype),f=new rX(d),g=n.runWebGLProgram(f,[s,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}},oX={kernelName:bu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Wi(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];Wi(km(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=vm(r.shape,s,a,u,i),[h,d]=function(e,t,n,r){let s=new eV(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new eV(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},lX={kernelName:xu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=Qi(a,r.shape);let u=l;const c=Of(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let m=r;if(h){if(d){const e=i.texData.get(m.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=gF(e,r.shape,r.dtype,c,t);m=i.makeTensorInfo(t,r.dtype),i.texData.get(m.dataId).values=n}else m=gW(r,c,i);p.push(m),u=zf(u.length,o)}Df("sum",u,o);const[f,g]=Af(m.shape,u);let y=f;s&&(y=Pf(f,l));const b=function(e,t,n,r){const s=Bi(t),a=uW({inputs:{x:e},attrs:{shape:[Bi(e.shape)/s,s]},backend:r}),i=pW(a,"float32","mean",r),o=uW({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(m,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}},uX={kernelName:vu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=Qi(a,s.shape);let u=l;const c=Of(u,o);let h=s;null!=c&&(h=xW({inputs:{x:s},backend:n,attrs:{perm:c}}),u=zf(u.length,s.shape.length)),Df("min",u,o);const[d,p]=Af(h.shape,u),m=uW({inputs:{x:h},backend:n,attrs:{shape:[-1,Bi(p)]}}),f=pW(m,m.dtype,"min",n);let g;return g=uW(i?{inputs:{x:f},backend:n,attrs:{shape:Pf(d,l)}}:{inputs:{x:f},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),null!=c&&n.disposeIntermediateTensorInfo(h),g}},cX=nW({opSnippet:WF+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+UF+"\n  return result;\n",cpuKernelImpl:Xz}),hX={kernelName:wu,backendName:"webgl",kernelFunc:cX};class dX{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FG(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class pX{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FG(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=xF("rc",r),l=xF("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const mX={kernelName:Su,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Mo().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pX(r.shape,s,a):new dX(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},fX=nW({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+UF+"\n  return result;\n"}),gX={kernelName:Tu,backendName:"webgl",kernelFunc:fX};class yX{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const bX=nW({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),xX={kernelName:Nl,backendName:"webgl",kernelFunc:bX},vX="return a - b;",wX=nW({opSnippet:vX,packedOpSnippet:vX,supportsComplex:!0,cpuKernelImpl:pF}),SX={kernelName:Ec,backendName:"webgl",kernelFunc:wX};function TX(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=Qi([a],s.shape),o=QB({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Pf(o.shape,i),u=uW({inputs:{x:o},backend:n,attrs:{shape:l}}),c=wX({inputs:{a:s,b:u},backend:n}),h=UU({inputs:{x:c},backend:n}),d=yW({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=uW({inputs:{x:d},backend:n,attrs:{shape:l}}),m=bX({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),m}const _X={kernelName:fc,backendName:"webgl",kernelFunc:TX},IX={kernelName:_u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:TX({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new yX(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},CX=MF+"\n  return -x;\n",MX={kernelName:Cu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=Hz(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Mo().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LF(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new CF(r.shape,CX),n.runWebGLProgram(s,[r],r.dtype)}},EX=Ab,NX={kernelName:Eu,backendName:"webgl",kernelFunc:function(e){$c("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=EX(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},kX=Pb,RX={kernelName:Nu,backendName:"webgl",kernelFunc:function(e){$c("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=kX(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},LX=Db,AX={kernelName:ku,backendName:"webgl",kernelFunc:function(e){$c("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,m=l,f=u,{selectedIndices:g,selectedScores:y}=LX(c,h,d,p,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class PX{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const DX={kernelName:Lu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=Bi(s.shape),c=new PX(u,i,o,l),h=uW({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=uW({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function OX(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=TV({inputs:{input:r},backend:n}),t=OX({inputs:{x:e},backend:n}),s=zV({inputs:{input:r},backend:n}),a=OX({inputs:{x:s},backend:n}),i=HF({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return qU({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const GX={kernelName:zc,backendName:"webgl",kernelFunc:OX},zX={kernelName:Ru,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=TV({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=zV({inputs:{input:s},backend:r}),i=OX({inputs:{x:a},backend:r}),o=HF({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return qU({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},FX={kernelName:Au,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return XU({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{Vi(a,e.shape,"All tensors passed to stack must have matching shapes"),Wi(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=VV({inputs:t.map((e=>{const t=XU({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class WX{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FG(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class VX{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FG(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=xF("rc",r),l=xF("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const UX=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===Bi(s.shape))return qU({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:i,dtype:s.dtype}});const o=Mo().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VX(s.shape,a,i):new WX(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},BX={kernelName:Pu,backendName:"webgl",kernelFunc:UX},XX=nW({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+UF+"\n  return result;\n"}),$X={kernelName:Du,backendName:"webgl",kernelFunc:XX},HX={kernelName:Gu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=Qi(a,s.shape);let c=u;const h=Of(c,o);let d,p=s;if(null!=h&&(p=xW({inputs:{x:s},backend:n,attrs:{perm:h}}),c=zf(c.length,o),l.push(p)),Df("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=Kz(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Af(p.shape,c),r=Bi(t),a=uW({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=pW(a,vd(s.dtype),"prod",n);d=uW({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Pf(d.shape,u);d=uW({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ZX={kernelName:zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,m]=jz(l,u,c,a.shape,a.dtype,h,i.shape,o),f=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(m,a.dtype,p);return f.concat([g])}},KX={kernelName:Fu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=Yz(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},jX={kernelName:Wu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[m,f]=Qz(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(m,a.dtype,f)}},YX=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=Jz(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},QX={kernelName:Vu,backendName:"webgl",kernelFunc:YX},JX=tW({opSnippet:"return 1.0 / x;"}),qX={kernelName:Bu,backendName:"webgl",kernelFunc:JX},e$=tW({opSnippet:MF+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),t$={kernelName:Xu,backendName:"webgl",kernelFunc:e$},n$=tW({opSnippet:MF+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),r$={kernelName:Yu,backendName:"webgl",kernelFunc:n$};class s${constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class a${constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const i$={kernelName:Ku,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Mo().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new a$(s.shape,l,u,a,i):new s$(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class o${constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,m=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const l$={kernelName:ju,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new o$(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class u${constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class c${constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const h$={kernelName:Hu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Mo().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new c$(s.shape,l,u,a,i):new u$(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class d${constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,m=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const p$={kernelName:Zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new d$(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class m${constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=FG(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class f${constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=xF("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=FG(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}var l;this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${l=r.slice(),o(l)};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const g$={kernelName:Qu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=Qi(a,s.shape);if(0===i)return XF({inputs:{x:s},backend:n});const l=Mo().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new f$(s.shape,o):new m$(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class y${constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const b$={kernelName:Vc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new y$(r.shape,a),[u,c]=Mv(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},x$=tW({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),v$={kernelName:Ju,backendName:"webgl",kernelFunc:x$},w$=tW({opSnippet:"return inversesqrt(x);",cpuKernelImpl:qz}),S$={kernelName:qu,backendName:"webgl",kernelFunc:w$};class T${constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=FG(s.length),u=FG(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let m="";o&&(m="coords[0], coords[1]");const f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class _${constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=FG(s.length),u=FG(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let m="";o&&(m="coords[0], coords[1]");const f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const I$={kernelName:ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jy(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=uW({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),m=uW({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=Mo().getBool("WEBGL_PACK")?new _$(l,o,p.shape.length,m.shape.length,c,d):new T$(l,o,p.shape.length,m.shape.length,c,d);const y=n.runWebGLProgram(g,[m,p,f],m.dtype),b=uW({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}};class C${constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===Mo().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const M$={kernelName:nc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new C$(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class E${constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=FG(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const N$={kernelName:rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new E$(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],xd(s.dtype,a.dtype))}},k$=tW({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Av};\n  float scale = ${Pv};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),R$={kernelName:sc,backendName:"webgl",kernelFunc:k$},L$=tW({opSnippet:eW+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:tF}),A$={kernelName:uc,backendName:"webgl",kernelFunc:L$},P$=tW({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),D$={kernelName:lc,backendName:"webgl",kernelFunc:P$},O$=tW({opSnippet:eW+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${UF}\n  return result;\n`}),G$={kernelName:ic,backendName:"webgl",kernelFunc:O$},z$=tW({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),F$={kernelName:oc,backendName:"webgl",kernelFunc:z$},W$=tW({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),V$={kernelName:cc,backendName:"webgl",kernelFunc:W$},U$={kernelName:pc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Wi(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=UX({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Ev(c.shape,a,o,!1),d=Nv(h.length,a.length,!1),p=kv(c.shape,a,o,!1),m=uW({inputs:{x:c},backend:n,attrs:{shape:h}}),f=xW({inputs:{x:m},backend:n,attrs:{perm:d}}),g=uW({inputs:{x:f},backend:n,attrs:{shape:p}});return u.push(c),u.push(m),u.push(f),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},B$={kernelName:gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,m,f]=sF(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map((e=>Number(e))))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}},X$={kernelName:yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=aF(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},$$={kernelName:bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=iF(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},H$={kernelName:xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=iF(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},Z$={kernelName:vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Jy(0,s,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=Kh(n.readSync(i.dataId)[0]),m=eF(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,m.dtype,m.values)}const m=new T$(u,l,s.shape.length,a.shape.length,h,[d,1],p),f=n.runWebGLProgram(m,[a,s,i],a.dtype),g=uW({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}},K$={kernelName:mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=Qi(i,s.shape)[0],l=nw(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=fV({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},j$="return sqrt(x);",Y$=tW({opSnippet:j$,packedOpSnippet:j$,cpuKernelImpl:oF}),Q$={kernelName:hc,backendName:"webgl",kernelFunc:Y$},J$={kernelName:Sc,backendName:"webgl",kernelFunc:tW({opSnippet:"return x * x;"})},q$="return (a - b) * (a - b);",eH=nW({opSnippet:q$,packedOpSnippet:q$}),tH={kernelName:wc,backendName:"webgl",kernelFunc:eH},nH={kernelName:Tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=gw(n.readSync(s.dataId)),i=lF(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},rH={kernelName:Fc,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=MF+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new CF(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class sH{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=FG(n.length),a=FG(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const aH={kernelName:_c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=dv(s.shape,a,i,o,l,u,c,h,d);let w;if(f)w=uW({inputs:{x:s},backend:n,attrs:{shape:m}});else if(g||y){Wi(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ev(b,x,v),t=fV({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});w=uW({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=qp(s.shape,s.dtype,e),r=uF(p,t,v,b);w=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new sH(b,v,p);w=n.runWebGLProgram(e,[s],s.dtype)}const S=uW({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),S}},iH={kernelName:Ic,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[m,f]=cF(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(h.shape,"int32",f)]}},oH={kernelName:Cc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=hF(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},lH={kernelName:Mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=dF(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},uH=tW({opSnippet:"return tan(x);"}),cH={kernelName:Nc,backendName:"webgl",kernelFunc:uH},hH=tW({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),dH={kernelName:kc,backendName:"webgl",kernelFunc:hH},pH={kernelName:tc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Jy(0,a,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=uW({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),m=uW({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),f=uW({inputs:{x:s},backend:n,attrs:{shape:d}}),g=new T$(l,o,p.shape.length,m.shape.length,c,d,!1,!0),y=n.runWebGLProgram(g,[m,p,f],f.dtype),b=uW({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}};class mH{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=FG(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function fH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Kh(e))):e,r=qp(s.shape,s.dtype,t),i=mF(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new mH(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const gH={kernelName:Rc,backendName:"webgl",kernelFunc:fH};class yH{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class bH{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function xH(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function vH(e){let t=1;for(;t<e;)t*=2;return t}const wH={kernelName:Lc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=Mo().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Mo().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=fF(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,qU({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,m=Bi(u)/c,f=uW({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&xH(n,p);const g=vH(a),y=vH(c);let b=null;const x=()=>null===b?[f,f]:[f,b],v=(e,t,r)=>{const s=x(),a=new yH(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),xH(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[m,y])}for(let e=y;e>g;e/=2){const t=x(),r=new bH([m,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),xH(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=fV({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,a]}}),xH(n,w);let S=bB({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});xH(n,f);const T=u.slice(0,-1);T.push(a),w=b,b=uW({inputs:{x:b},attrs:{shape:T},backend:n}),xH(n,w);const _=S;return S=uW({inputs:{x:S},attrs:{shape:T},backend:n}),xH(n,_),[S,b]}};class SH{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const TH={kernelName:Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[m,f]=u??[h,d],g=new SH(h,d,i,o,l,[c,m,f,p]);return n.runWebGLProgram(g,[s,a],"float32")}},_H={kernelName:Dc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;wG(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=yF(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},IH={kernelName:Oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const m=new Array(l);for(let e=0;e<m.length;e++){d[a]=e;const t=fV({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=uW({inputs:{x:t},backend:n,attrs:{shape:u}});m[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};class CH{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const MH={kernelName:Gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=Of([u],o);let h=s;null!=c&&(h=xW({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=zf(1,o)[0]);const d=pw(h.shape,u,i),p=Bi([h.shape[u]]),m=uW({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(m);const f=vd(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=dw(o,a),c=new CH({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=YX({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=fH({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,s,a)},y=uW({inputs:{x:g(m,"unsortedSegmentSum",a,f,i)},backend:n,attrs:{shape:d}});let b=y;if(null!=c){l.push(y);const e=Gf(c);b=xW({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},EH=[SW,_W,CW,EW,RW,PW,DW,OW,UW,BW,$W,ZW,jW,QW,qW,nV,rV,iV,oV,lV,hV,yV,bV,xV,vV,IV,EV,RV,ZF,PV,UV,YV,tU,rU,sU,aU,iU,lU,cU,dU,bU,xU,vU,SU,IU,EU,NU,RU,AU,PU,OU,GU,FU,VU,BU,$U,KU,QU,eB,nB,aB,oB,cB,pB,mB,gB,xB,wB,TB,$F,_B,FV,CB,EB,kB,YF,LB,PB,DB,GB,FB,VB,BB,$B,KB,YB,JB,eX,tX,nX,aX,iX,oX,lX,uX,hX,mX,gX,IX,lW,MX,NX,RX,AX,SV,DX,zX,FX,BX,$X,qF,HX,ZX,KX,jX,QX,_V,xX,qX,t$,r$,cW,i$,l$,h$,p$,g$,b$,v$,S$,I$,M$,N$,R$,A$,D$,G$,F$,gV,_X,V$,U$,B$,X$,$$,H$,Z$,K$,Q$,J$,tH,nH,rH,aH,iH,oH,lH,SX,bW,cH,dH,pH,gH,wH,TH,vW,_H,IH,MH,GX];for(const e of EH)Qc(e);const NH="",kH=typeof window<"u"&&window.Blob&&new Blob([atob(NH)],{type:"text/javascript;charset=utf-8"});function RH(e){let t;try{if(t=kH&&(window.URL||window.webkitURL).createObjectURL(kH),!t)throw"";const n=new Worker(t,{name:null==e?void 0:e.name});return n.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(t)})),n}catch{return new Worker("data:application/javascript;base64,"+NH,{name:null==e?void 0:e.name})}finally{t&&(window.URL||window.webkitURL).revokeObjectURL(t)}}const LH=(e,t,n,r)=>{const{x:s,y:a,z:i}=((e,t,n)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]}))(e,t,n);return{x:s/i,y:a/i}};class AH{constructor(e,t,n,r,s,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=a,this.trackingKeyframeList=[];for(let e=0;e<t.length;e++)this.trackingKeyframeList.push(t[e][1]);let i=0;for(let e=0;e<this.trackingKeyframeList.length;e++)i=Math.max(i,this.trackingKeyframeList[e].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let e=0;e<this.trackingKeyframeList.length;e++){const{featurePoints:t,imagePixels:n,imageProperties:r}=this._prebuild(this.trackingKeyframeList[e],i);this.featurePointsListT[e]=t,this.imagePixelsListT[e]=n,this.imagePropertiesListT[e]=r}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let r={};const s=((e,t)=>[[e[0][0]*t[0][0]+e[0][2]*t[2][0],e[0][0]*t[0][1]+e[0][2]*t[2][1],e[0][0]*t[0][2]+e[0][2]*t[2][2],e[0][0]*t[0][3]+e[0][2]*t[2][3]],[e[1][1]*t[1][0]+e[1][2]*t[2][0],e[1][1]*t[1][1]+e[1][2]*t[2][1],e[1][1]*t[1][2]+e[1][2]*t[2][2],e[1][1]*t[1][3]+e[1][2]*t[2][3]],[t[2][0],t[2][1],t[2][2],t[2][3]]])(this.projectionTransform,t),a=this._buildAdjustedModelViewTransform(s);this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height;const i=this.featurePointsListT[n],o=this.imagePixelsListT[n],l=this.imagePropertiesListT[n],u=this._computeProjection(a,e,n),{matchingPointsT:c,simT:h}=this._computeMatching(i,o,l,u),d=c.arraySync(),p=h.arraySync(),m=this.trackingKeyframeList[n],f=[],g=[],y=[];for(let e=0;e<d.length;e++)if(p[e]>.8&&e<m.points.length){y.push(e);const t=LH(s,d[e][0],d[e][1]);g.push(t),f.push({x:m.points[e].x/m.scale,y:m.points[e].y/m.scale,z:0})}return this.debugMode&&(r={projectedImage:u.arraySync(),matchingPoints:c.arraySync(),goodTrack:y,trackedPoints:g}),a.dispose(),u.dispose(),c.dispose(),h.dispose(),{worldCoords:f,screenCoords:g,debugExtra:r}}_computeMatching(e,t,n,r){const s=r.shape[0],a=r.shape[1],i=e.shape[0];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${a} - 6) || sy < 6 || sy >= (${s} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return ep((()=>{const s=this.kernelCaches.computeMatching,a=this._compileAndRun(s[0],[e,t,n,r]),i=a.argMax(1);return{matchingPointsT:this._compileAndRun(s[1],[e,n,i]),simT:this._compileAndRun(s[2],[a,i])}}))}_computeProjection(e,t,n){const r=this.trackingKeyframeList[n].width,s=this.trackingKeyframeList[n].height,a=this.trackingKeyframeList[n].scale,i=r+"-"+s+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const e={variableNames:["M","pixel"],outputShape:[s,r],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${a});\n\t      float x = float(coords[1]) / float(${a});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=e}return ep((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return ep((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let r=0;r<e[n].length;r++)t[n].push(e[n][r]/1e3)}return jd(t,[3,4])}))}_prebuild(e,t){return ep((()=>{const n=e.scale,r=[];for(let s=0;s<t;s++)s<e.points.length?r.push([e.points[s].x/n,e.points[s].y/n]):r.push([-1,-1]);const s=jd(e.data,[e.width*e.height]),a=jd([e.width,e.height,e.scale],[3]);return{featurePoints:jd(r,[r.length,2],"float32"),imagePixels:s,imageProperties:a}}))}_compileAndRun(e,t){const n=ap().compileAndRun(e,t);return Jd().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}const PH=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],DH=[];for(let e=0;e<PH.length;e++){const t=PH[e].sigma;for(let n=0;n<PH[e].points.length;n++){const r=PH[e].points[n];DH.push([t,r[0],r[1]])}}const OH={},GH={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,[r,s]=function(e){const t=e.shape[1],n=e.shape[0],r="w"+t+"h"+n;if(!OH.hasOwnProperty(r)){const e={variableNames:["p"],outputShape:[n,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0], coords[1]-2);\n          sum += getP(coords[0], coords[1]-1) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0], coords[1]+1) * 4.;\n          sum += getP(coords[0], coords[1]+2);\n          setOutput(sum);\n        }\n      "},s={variableNames:["p"],outputShape:[n,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0]-2, coords[1]);\n          sum += getP(coords[0]-1, coords[1]) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0]+1, coords[1]) * 4.;\n          sum += getP(coords[0]+2, coords[1]);\n          sum /= 256.;\n          setOutput(sum);\n        }\n      "};OH[r]=[e,s]}return OH[r]}(t),a=n.runWebGLProgram(r,[t],t.dtype),i=n.runWebGLProgram(s,[a],t.dtype);return n.disposeIntermediateTensorInfo(a),i}},zH={},FH={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:e=>{let{image0:t,image1:n,image2:r}=e.inputs;const s=e.backend,a=function(e){const t=e.shape[1],n=e.shape[0],r="w"+t+"h"+n;if(!zH.hasOwnProperty(r)){const e={variableNames:["image0","image1","image2"],outputShape:[n,t],userCode:`\n        void main() {\n          ivec2 coords = getOutputCoords();\n    \n          int y = coords[0];\n          int x = coords[1];\n    \n          float value = getImage1(y, x);\n    \n          // Step 1: find local maxima/minima\n          if (value * value < 9.) {\n            setOutput(0.);\n            return;\n          }\n          if (y < 7 || y > ${n-1-7}) {\n            setOutput(0.);\n            return;\n          }\n          if (x < 7 || x > ${t-1-7}) {\n            setOutput(0.);\n            return;\n          }\n    \n          bool isMax = true;\n          bool isMin = true;\n          for (int dy = -1; dy <= 1; dy++) {\n            for (int dx = -1; dx <= 1; dx++) {\n              float value0 = getImage0(y+dy, x+dx);\n              float value1 = getImage1(y+dy, x+dx);\n              float value2 = getImage2(y+dy, x+dx);\n    \n        if (value < value0 || value < value1 || value < value2) {\n          isMax = false;\n        }\n        if (value > value0 || value > value1 || value > value2) {\n          isMin = false;\n        }\n            }\n          }\n    \n          if (!isMax && !isMin) {\n            setOutput(0.);\n            return;\n          }\n    \n          // compute edge score and reject based on threshold\n          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n    \n          float det = (dxx * dyy) - (dxy * dxy);\n    \n          if (abs(det) < 0.0001) { // determinant undefined. no solution\n            setOutput(0.);\n            return;\n          }\n    \n          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n    \n          if (abs(edgeScore) >= 6.25 ) {\n            setOutput(0.);\n            return;\n          }\n          setOutput(getImage1(y,x));\n        }\n      `};zH[r]=e}return zH[r]}(n);return t=Jd().runKernel("DownsampleBilinear",{image:t}),r=Jd().runKernel("UpsampleBilinear",{image:r,targetImage:n}),s.runWebGLProgram(a,[t,n,r],n.dtype)}},WH={},VH={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:e=>{const{histograms:t}=e.inputs,n=e.backend,r=function(e){const t=e.shape[0];if(!WH.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n            void main() {\n                int featureIndex = getOutputCoords();\n\n                int maxIndex = 0;\n                for (int i = 1; i < 36; i++) {\n                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n                        maxIndex = i;\n                    }\n                }\n\n                int prev = imod(maxIndex - 1 + 36, 36);\n                int next = imod(maxIndex + 1, 36);\n\n                /**\n                 * Fit a quatratic to 3 points. The system of equations is:\n                 *\n                 * y0 = A*x0^2 + B*x0 + C\n                 * y1 = A*x1^2 + B*x1 + C\n                 * y2 = A*x2^2 + B*x2 + C\n                 *\n                 * This system of equations is solved for A,B,C.\n                 */\n                float p10 = float(maxIndex - 1);\n                float p11 = getHistogram(featureIndex, prev); \n                float p20 = float(maxIndex);\n                float p21 = getHistogram(featureIndex, maxIndex); \n                float p30 = float(maxIndex + 1);\n                float p31 = getHistogram(featureIndex, next); \n\n                float d1 = (p30-p20)*(p30-p10);\n                float d2 = (p10-p20)*(p30-p10);\n                float d3 = p10-p20;\n\n                // If any of the denominators are zero then, just use maxIndex.\n                    float fbin = float(maxIndex);\n                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n                float a = p10*p10;\n                float b = p20*p20;\n\n                // Solve for the coefficients A,B,C\n                float A = ((p31-p21)/d1)-((p11-p21)/d2);\n                float B = ((p11-p21)+(A*(b-a)))/d3;\n                float C = p11-(A*a)-(B*p10);\n                fbin = -B / (2. * A);\n                }\n\n                float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n                setOutput(an);\n            }\n            `};WH[t]=n}return WH[t]}(t);return n.runWebGLProgram(r,[t],t.dtype)}},UH={},BH={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremas:n,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:a}=e.inputs,i=e.backend,o=function(e,t){const n=`${e}|${t.shape[0]}`;if(!UH.hasOwnProperty(n)){const r=[];for(let t=1;t<e;t++)r.push("image"+t);let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)s+=`\n  if (octave == ${t}) {\n\treturn getImage${t}(y, x);\n  }\n`;s+="}";const a={variableNames:[...r,"extrema","angles","freakPoints"],outputShape:[t.shape[0],DH.length],userCode:`\n  ${s}\n  void main() {\n\tivec2 coords = getOutputCoords();\n\tint featureIndex = coords[0];\n\tint freakIndex = coords[1];\n\n\tfloat freakSigma = getFreakPoints(freakIndex, 0);\n\tfloat freakX = getFreakPoints(freakIndex, 1);\n\tfloat freakY = getFreakPoints(freakIndex, 2);\n\n\tint octave = int(getExtrema(featureIndex, 1));\n\tfloat inputY = getExtrema(featureIndex, 2);\n\tfloat inputX = getExtrema(featureIndex, 3);\n\tfloat inputAngle = getAngles(featureIndex);\n\tfloat cos = 7. * cos(inputAngle);\n\tfloat sin = 7. * sin(inputAngle);\n\n\tfloat yp = inputY + freakX * sin + freakY * cos;\n\tfloat xp = inputX + freakX * cos + freakY * -sin;\n\n\tint x0 = int(floor(xp));\n\tint x1 = x0 + 1;\n\tint y0 = int(floor(yp));\n\tint y1 = y0 + 1;\n\n\tfloat f1 = getPixel(octave, y0, x0);\n\tfloat f2 = getPixel(octave, y0, x1);\n\tfloat f3 = getPixel(octave, y1, x0);\n\tfloat f4 = getPixel(octave, y1, x1);\n\n\tfloat x1f = float(x1);\n\tfloat y1f = float(y1);\n\tfloat x0f = float(x0);\n\tfloat y0f = float(y0);\n\n\t// ratio for interpolation between four neighbouring points\n\tfloat value = (x1f - xp) * (y1f - yp) * f1\n\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\tsetOutput(value);\n  }\n`};UH[n]=a}return UH[n]}(a,n);return i.runWebGLProgram(o,[...t,n,r,s],"float32")}},XH=(DH.length-1)*DH.length/2,$H=Math.ceil(XH/8),HH={},ZH={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:e=>{const{extremaFreaks:t,positionT:n}=e.inputs,{backend:r}=e,s=function(e){const t=`${e.shape[0]}`;if(!HH.hasOwnProperty(t)){const n={variableNames:["freak","p"],outputShape:[e.shape[0],$H],userCode:`\n  void main() {\n    ivec2 coords = getOutputCoords();\n    int featureIndex = coords[0];\n    int descIndex = coords[1] * 8;\n\n    int sum = 0;\n    for (int i = 0; i < 8; i++) {\n      if (descIndex + i >= ${XH}) {\n        continue;\n      }\n\n      int p1 = int(getP(descIndex + i, 0));\n      int p2 = int(getP(descIndex + i, 1));\n\n      float v1 = getFreak(featureIndex, p1);\n      float v2 = getFreak(featureIndex, p2);\n\n      if (v1 < v2 + 0.01) {\n        sum += int(pow(2.0, float(7 - i)));\n      }\n    }\n    setOutput(float(sum));\n  }\n`};HH[t]=n}return HH[t]}(t);return r.runWebGLProgram(s,[t,n],"int32")}},KH={},jH={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:e=>{const{prunedExtremasList:t,dogPyramidImagesT:n}=e.inputs,r=e.backend,s=function(e,t){const n=`${e}|${t}`;if(!KH.hasOwnProperty(n)){const r=[];let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)r.push("image"+t),s+=`\n\t\t\t\tif (octave == ${t}) {\n\t\t\t\t\treturn getImage${t}(y, x);\n\t\t\t\t}\n\t\t\t`;s+="}",KH[n]={variableNames:[...r,"extrema"],outputShape:[t,3,3],userCode:`\n\t\t\t${s}\n\t\t\n\t\t\tvoid main() {\n\t\t\t\tivec3 coords = getOutputCoords();\n\t\t\t\tint featureIndex = coords[0];\n\t\t\t\tfloat score = getExtrema(featureIndex, 0);\n\t\t\t\tif (score == 0.0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tint dy = coords[1]-1;\n\t\t\t\tint dx = coords[2]-1;\n\t\t\t\tint octave = int(getExtrema(featureIndex, 1));\n\t\t\t\tint y = int(getExtrema(featureIndex, 2));\n\t\t\t\tint x = int(getExtrema(featureIndex, 3));\n\t\t\t\tsetOutput(getPixel(octave, y+dy, x+dx));\n\t\t\t}\n\t\t\t`}}return KH[n]}(n.length,t.length),a=jd(t,[t.length,t[0].length],"int32");return r.runWebGLProgram(s,[...n.slice(1),a],n[0].dtype)}},YH={},QH={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremasT:n,radialPropertiesT:r,pyramidImagesLength:s}=e.inputs,a=e.backend,[i,o]=function(e,t,n){const r=`${n}|${e.shape[0]}|${t.shape[0]}`;if(!YH.hasOwnProperty(r)){const s=[];for(let e=1;e<n;e++)s.push("image"+e);let a="float getPixel(int octave, int y, int x) {";for(let e=1;e<n;e++)a+=`\n            if (octave == ${e}) {\n                return getImage${e}(y, x);\n            }\n            `;a+="}";const i={variableNames:[...s,"extrema","radial"],outputShape:[e.shape[0],t.shape[0],2],userCode:`\n                ${a}\n\n                void main() {\n                    ivec3 coords = getOutputCoords();\n                    int featureIndex = coords[0];\n                    int radialIndex = coords[1];\n                    int propertyIndex = coords[2];\n\n                    int radialY = int(getRadial(radialIndex, 0));\n                    int radialX = int(getRadial(radialIndex, 1));\n                    float radialW = getRadial(radialIndex, 2);\n\n                    int octave = int(getExtrema(featureIndex, 1));\n                    int y = int(getExtrema(featureIndex, 2));\n                    int x = int(getExtrema(featureIndex, 3));\n\n                    int xp = x + radialX;\n                    int yp = y + radialY;\n\n                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n                    if (propertyIndex == 0) {\n                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n                    \n                    float angle = atan(dy, dx) + ${Math.PI};\n                    float fbin = angle * 36. * 0.159154943091895;\n                    setOutput(fbin);\n                    return;\n                    }\n\n                    if (propertyIndex == 1) {\n                        float mag = sqrt(dx * dx + dy * dy);\n                        float magnitude = radialW * mag;\n                        setOutput(magnitude);\n                        return;\n                    }\n                }\n\n                `},o={variableNames:["fbinMag"],outputShape:[e.shape[0],36],userCode:`\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                float sum = 0.;\n                for (int i = 0; i < ${t.shape[0]}; i++) {\n                    float fbin = getFbinMag(featureIndex, i, 0);\n                    int bin = int(floor(fbin - 0.5));\n                    int b1 = imod(bin + 36, 36);\n                    int b2 = imod(bin + 1 + 36, 36);\n\n                    if (b1 == binIndex || b2 == binIndex) {\n                        float magnitude = getFbinMag(featureIndex, i, 1);\n                        float w2 = fbin - float(bin) - 0.5;\n                        float w1 = w2 * -1. + 1.;\n\n                        if (b1 == binIndex) {\n                            sum += w1 * magnitude;\n                        }\n                        if (b2 == binIndex) {\n                            sum += w2 * magnitude;\n                        }\n                    }\n                }\n                setOutput(sum);\n            }\n            `};YH[r]=[i,o]}return YH[r]}(n,r,s),l=a.runWebGLProgram(i,[...t,n,r],r.dtype),u=a.runWebGLProgram(o,[l],r.dtype);return a.disposeIntermediateTensorInfo(l),u}},JH={},qH={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,r=function(e){const t=e.shape[1],n=e.shape[0],r="w"+t+"h"+n;if(!JH.hasOwnProperty(r)){const e={variableNames:["p"],outputShape:[Math.floor(n/2),Math.floor(t/2)],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int y = coords[0] * 2;\n                int x = coords[1] * 2;\n        \n                float sum = getP(y, x) * 0.25;\n                sum += getP(y+1,x) * 0.25; \n                sum += getP(y, x+1) * 0.25; \n                sum += getP(y+1,x+1) * 0.25;\n                setOutput(sum);\n            }\n            "};JH[r]=e}return JH[r]}(t);return n.runWebGLProgram(r,[t],t.dtype)}},eZ={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:e=>{const{extremasResultT:t}=e.inputs,n=e.backend,r=t.shape[0],s=t.shape[1],a={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:"\n\t\t  void main() {\n\t\t\tivec2 coords = getOutputCoords();\n\t\t\tint y = coords[0] * 2;\n\t\t\tint x = coords[1] * 2;\n  \n\t\t\tfloat location = 0.0;\n\t\t\tfloat values = getExtrema(y, x);\n  \n\t\t\tif (getExtrema(y+1, x) != 0.0) {\n\t\t\t  location = 1.0;\n\t\t  values = getExtrema(y+1, x);\n\t\t\t}\n\t\t\telse if (getExtrema(y, x+1) != 0.0) {\n\t\t\t  location = 2.0;\n\t\t  values = getExtrema(y, x+1);\n\t\t\t}\n\t\t\telse if (getExtrema(y+1, x+1) != 0.0) {\n\t\t\t  location = 3.0;\n\t\t  values = getExtrema(y+1, x+1);\n\t\t\t}\n  \n\t\t\tif (values < 0.0) {\n\t\t\t  setOutput(location * -1000.0 + values);\n\t\t\t} else {\n\t\t\t  setOutput(location * 1000.0 + values);\n\t\t\t}\n\t\t  }\n\t\t"};return n.runWebGLProgram(a,[t],t.dtype)}},tZ={},nZ={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:e=>{let{histograms:t}=e.inputs;const n=e.backend,r=function(e){const t=`h${e.shape[0]}`;if(!tZ.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0],36],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                int prevBin = imod(binIndex - 1 + 36, 36);\n                int nextBin = imod(binIndex + 1, 36);\n                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n                setOutput(result);\n            }\n            "};tZ[t]=n}return tZ[t]}(t);for(let e=0;e<5;e++){const s=t;t=n.runWebGLProgram(r,[t],t.dtype),e>0&&n.disposeIntermediateTensorInfo(s)}return t}},rZ={},sZ={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:e=>{const{image:t,targetImage:n}=e.inputs,r=e.backend,s=function(e,t){const n=t.shape[1],r=t.shape[0],s="w"+n+"h"+r;if(!rZ.hasOwnProperty(s)){const e={variableNames:["p"],outputShape:[r,n],userCode:"\n              void main() {\n                ivec2 coords = getOutputCoords();\n                int j = coords[0];\n                int i = coords[1];\n        \n                float sj = 0.5 * float(j) - 0.25; \n                float si = 0.5 * float(i) - 0.25;\n        \n                float sj0 = floor(sj);\n                float sj1 = ceil(sj);\n                float si0 = floor(si);\n                float si1 = ceil(si);\n        \n                int sj0I = int(sj0);\n                int sj1I = int(sj1);\n                int si0I = int(si0);\n                int si1I = int(si1);\n        \n                float sum = 0.0;\n                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n                setOutput(sum);\n              }\n            "};rZ[s]=e}return rZ[s]}(0,n);return r.runWebGLProgram(s,[t],t.dtype)}};Qc(GH),Qc(FH),Qc(VH),Qc(BH),Qc(ZH),Qc(jH),Qc(QH),Qc(qH),Qc(eZ),Qc(nZ),Qc(sZ),DH.length,DH.length;class aZ{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let r=0;for(;e>=8&&t>=8&&(e/=2,t/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null;const n=[];for(let t=0;t<this.numOctaves;t++){let r,s;r=0===t?this._applyFilter(e):this._downsampleBilinear(n[t-1][n[t-1].length-1]),s=this._applyFilter(r),n.push([r,s])}const r=[];for(let e=0;e<this.numOctaves;e++){let t=this._differenceImageBinomial(n[e][0],n[e][1]);r.push(t)}const s=[];for(let e=1;e<this.numOctaves-1;e++){const t=this._buildExtremas(r[e-1],r[e],r[e+1]);s.push(t)}const a=this._applyPrune(s),i=this._computeLocalization(a,r),o=this._computeOrientationHistograms(i,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,i,u),h=this._computeFreakDescriptors(c),d=i.arraySync(),p=u.arraySync(),m=h.arraySync();this.debugMode&&(t={pyramidImages:n.map((e=>e.map((e=>e.arraySync())))),dogPyramidImages:r.map((e=>e?e.arraySync():null)),extremasResults:s.map((e=>e.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:i.arraySync()}),n.forEach((e=>e.forEach((e=>e.dispose())))),r.forEach((e=>e&&e.dispose())),s.forEach((e=>e.dispose())),i.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const f=[];for(let e=0;e<d.length;e++){if(0==d[e][0])continue;const t=[];for(let n=0;n<m[e].length;n+=4){let r=16777216*m[e][n]+65536*m[e][n+1]+256*m[e][n+2]+m[e][n+3];t.push(r)}const n=d[e][1],r=d[e][2],s=d[e][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,a=r*Math.pow(2,n)+Math.pow(2,n-1)-.5,i=Math.pow(2,n);f.push({maxima:d[e][0]>0,x:s,y:a,scale:i,angle:p[e],descriptors:t})}return{featurePoints:f,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let r=0;r<e.shape[1];r++)for(let s=r+1;s<e.shape[1];s++)t.push(r),n.push(s);const r=jd(t,[t.length]).cast("int32"),s=jd(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:np(By([r,s],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;return ep((()=>Jd().runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t})))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||ep((()=>{const e=jd(DH);this.tensorCaches._computeExtremaFreak={freakPointsT:np(e)}}));const{freakPointsT:r}=this.tensorCaches._computeExtremaFreak,s=[];for(let t=1;t<e.length;t++)s.push(e[t][1]);return ep((()=>Jd().runKernel("ComputeExtremaFreak",{gaussianImagesT:s,prunedExtremas:t,prunedExtremasAngles:n,freakPointsT:r,pyramidImagesLength:e.length})))}_computeExtremaAngles(e){return ep((()=>Jd().runKernel("ComputeExtremaAngles",{histograms:e})))}_computeOrientationHistograms(e,t){const n=[];for(let e=1;e<t.length;e++)n.push(t[e][1]);this.tensorCaches.orientationHistograms||ep((()=>{const e=-1/18,t=Math.ceil(4.5),n=[];for(let r=-t;r<=t;r++)for(let s=-t;s<=t;s++){const t=s*s+r*r;if(t<=20.25){const a=t*e;let i=.0013888888*(720+a*(720+a*(360+a*(120+a*(30+a*(6+a))))));n.push([r,s,i])}}this.tensorCaches.orientationHistograms={radialPropertiesT:np(jd(n,[n.length,3]))}}));const{radialPropertiesT:r}=this.tensorCaches.orientationHistograms;return ep((()=>Jd().runKernel("ComputeOrientationHistograms",{gaussianImagesT:n,prunedExtremasT:e,radialPropertiesT:r,pyramidImagesLength:t.length})))}_smoothHistograms(e){return ep((()=>Jd().runKernel("SmoothHistograms",{histograms:e})))}_computeLocalization(e,t){return ep((()=>{const n=Jd().runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),r=[];for(let e=0;e<n.length;e++){r.push([]);for(let t=0;t<n[e].length;t++)r[e].push([])}const s=[];for(let t=0;t<e.length;t++)s[t]=[e[t][0],e[t][1],e[t][2],e[t][3]];for(let e=0;e<s.length;e++){if(0===s[e][0])continue;const t=n[e],r=.5*(t[1][2]-t[1][0]),a=.5*(t[2][1]-t[0][1]),i=t[1][2]+t[1][0]-2*t[1][1],o=t[2][1]+t[0][1]-2*t[1][1],l=.25*(t[0][0]+t[2][2]-t[0][2]-t[2][0]),u=i*o-l*l,c=(o*-r+-l*-a)/u,h=(-l*-r+i*-a)/u,d=s[e][2]+h,p=s[e][3]+c;Math.abs(u)<1e-4||(s[e][2]=d,s[e][3]=p)}return jd(s,[s.length,s[0].length],"float32")}))}_applyPrune(e){const t=[],n=[];for(let e=0;e<100;e++){n.push([]),t.push([]);for(let r=0;r<5;r++)n[e].push([0,0,0,0]),t[e].push(0)}ep((()=>{for(let r=0;r<e.length;r++){const s=Jd().runKernel("ExtremaReduction",{extremasResultT:e[r]}),a=r+1,i=s.arraySync(),o=s.shape[0],l=s.shape[1],u=2*l/10,c=2*o/10;for(let e=0;e<o;e++)for(let r=0;r<l;r++){const s=i[e][r];if(0==s)continue;const o=s%1e3,l=Math.floor(Math.abs(s)/1e3),h=2*r+(2===l||3===l?1:0),d=2*e+(1===l||3===l?1:0),p=Math.floor(h/u),m=10*Math.floor(d/c)+p,f=Math.abs(o);let g=5;for(;g>=1&&f>t[m][g-1];)g-=1;if(g<5){for(let e=4;e>=g+1;e--)t[m][e]=t[m][e-1],n[m][e][0]=n[m][e-1][0],n[m][e][1]=n[m][e-1][1],n[m][e][2]=n[m][e-1][2],n[m][e][3]=n[m][e-1][3];t[m][g]=f,n[m][g][0]=o,n[m][g][1]=a,n[m][g][2]=d,n[m][g][3]=h}}}}));const r=[];for(let e=0;e<100;e++)for(let t=0;t<5;t++)r.push(n[e][t]);return r}_buildExtremas(e,t,n){return ep((()=>Jd().runKernel("BuildExtremas",{image0:e,image1:t,image2:n})))}_differenceImageBinomial(e,t){return ep((()=>e.sub(t)))}_applyFilter(e){return ep((()=>Jd().runKernel("BinomialFilter",{image:e})))}_downsampleBilinear(e){return ep((()=>Jd().runKernel("DownsampleBilinear",{image:e})))}_compileAndRun(e,t){const n=ap().compileAndRun(e,t);return Jd().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const r=ap().runWebGLProgram(e,t,n);return Jd().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}class iZ{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let r=Math.min(e,t)/2,s=Math.pow(2,Math.round(Math.log(r)/Math.log(2)));this.cropSize=s,this.detector=new aZ(s,s,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(e,n,t);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),r}detectMoving(e){const t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,s,r)}_detect(e,t,n){const r=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:a}=this.detector.detect(r);return s.forEach((e=>{e.x+=t,e.y+=n})),this.debugMode&&(a.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:a}}}const oZ=({image:e,ratio:t})=>{const n=Math.round(e.width*t),r=Math.round(e.height*t),s=new Uint8Array(n*r);for(let a=0;a<n;a++){let i=Math.round(1*a/t),o=Math.round(1*(a+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<r;l++){let r=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,h=0;for(let t=i;t<=o;t++)for(let n=r;n<=u;n++)c+=1*e.data[n*e.width+t],h+=1;s[l*n+a]=Math.floor(c/h)}}return{data:s,width:n,height:r}},lZ=e=>{const t=[];let n=100/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const r=[];for(let n=0;n<t.length;n++)e.width,t[n],e.height,t[n],r.push(Object.assign(oZ({image:e,ratio:t[n]}),{scale:t[n]}));return r},uZ=e=>{const t=Math.min(e.width,e.height),n=[],r=[];n.push(256/t),n.push(128/t);for(let t=0;t<n.length;t++)r.push(Object.assign(oZ({image:e,ratio:n[t]}),{scale:n[t]}));return r},cZ=e=>{const{v1:t,v2:n}=e;let r=0;for(let e=0;e<t.length;e++){let s=(t[e]^n[e])>>>0;r+=hZ(s)}return r},hZ=e=>{var t=e-(e>>1&1431655765);return((t=((t=((t=(t>>2&858993459)+(858993459&t))>>4)+t&252645135)>>8)+t&16711935)>>16)+t&65535},dZ=()=>({seed:1234,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let e=0;e<n;e++){this.seed=(214013*this.seed+2531011)%-2147483648;let n=this.seed>>16&32767;n%=t.length;let r=t[e];t[e]=t[n],t[n]=r}},nextInt(e){this.seed=(214013*this.seed+2531011)%-2147483648;let t=this.seed>>16&32767;return t%=e,t}}),pZ=({points:e})=>{const t=[];for(let n=0;n<e.length;n++)t.push(n);const n=dZ();return{rootNode:mZ({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}},mZ=e=>{const{points:t,pointIndexes:n,centerPointIndex:r,randomizer:s}=e;let a=!1;(n.length<=8||n.length<=16)&&(a=!0);const i={};if(!a){const e=(e=>{const{points:t,pointIndexes:n,randomizer:r}=e,s=[];for(let e=0;e<n.length;e++)s.push(e);let a=Number.MAX_SAFE_INTEGER,i=-1;const o=[];for(let e=0;e<128;e++){r.arrayShuffle({arr:s,sampleSize:8});let l=0;const u=[];for(let e=0;e<n.length;e++){let r=Number.MAX_SAFE_INTEGER;for(let a=0;a<8;a++){const i=n[s[a]],o=cZ({v1:t[n[e]].descriptors,v2:t[i].descriptors});o<r&&(u[e]=s[a],r=o)}l+=r}o.push(u),l<a&&(a=l,i=e)}return o[i]})({points:t,pointIndexes:n,randomizer:s});for(let t=0;t<e.length;t++)void 0===i[n[e[t]]]&&(i[n[e[t]]]=[]),i[n[e[t]]].push(n[t])}1===Object.keys(i).length&&(a=!0);const o={centerPointIndex:r};if(a){o.leaf=!0,o.pointIndexes=[];for(let e=0;e<n.length;e++)o.pointIndexes.push(n[e]);return o}return o.leaf=!1,o.children=[],Object.keys(i).forEach((e=>{o.children.push(mZ({points:t,pointIndexes:i[e],centerPointIndex:e,randomizer:s}))})),o};var fZ=4294967295;function gZ(e,t,n){var r=Math.floor(n/4294967296),s=n;e.setUint32(t,r),e.setUint32(t+4,s)}function yZ(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var bZ,xZ,vZ,wZ=(typeof process>"u"||"never"!==(null===(bZ=null==process?void 0:process.env)||void 0===bZ?void 0:bZ.TEXT_ENCODING))&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function SZ(e){for(var t=e.length,n=0,r=0;r<t;){var s=e.charCodeAt(r++);if(4294967168&s)if(4294965248&s){if(s>=55296&&s<=56319&&r<t){var a=e.charCodeAt(r);56320==(64512&a)&&(++r,s=((1023&s)<<10)+(1023&a)+65536)}n+=4294901760&s?4:3}else n+=2;else n++}return n}var TZ=wZ?new TextEncoder:void 0,_Z=wZ?typeof process<"u"&&"force"!==(null===(xZ=null==process?void 0:process.env)||void 0===xZ?void 0:xZ.TEXT_ENCODING)?200:0:fZ,IZ=null!=TZ&&TZ.encodeInto?function(e,t,n){TZ.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(TZ.encode(e),n)};function CZ(e,t,n){for(var r=t,s=r+n,a=[],i="";r<s;){var o=e[r++];if(128&o)if(192==(224&o)){var l=63&e[r++];a.push((31&o)<<6|l)}else if(224==(240&o)){l=63&e[r++];var u=63&e[r++];a.push((31&o)<<12|l<<6|u)}else if(240==(248&o)){var c=(7&o)<<18|(l=63&e[r++])<<12|(u=63&e[r++])<<6|63&e[r++];c>65535&&(c-=65536,a.push(c>>>10&1023|55296),c=56320|1023&c),a.push(c)}else a.push(o);else a.push(o);a.length>=4096&&(i+=String.fromCharCode.apply(String,a),a.length=0)}return a.length>0&&(i+=String.fromCharCode.apply(String,a)),i}var MZ=wZ?new TextDecoder:null,EZ=wZ?typeof process<"u"&&"force"!==(null===(vZ=null==process?void 0:process.env)||void 0===vZ?void 0:vZ.TEXT_DECODER)?200:0:fZ,NZ=function(){return function(e,t){this.type=e,this.data=t}}(),kZ=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),RZ=function(e){function t(n){var r=e.call(this,n)||this,s=Object.create(t.prototype);return Object.setPrototypeOf(r,s),Object.defineProperty(r,"name",{configurable:!0,enumerable:!1,value:t.name}),r}return kZ(t,e),t}(Error),LZ={type:-1,encode:function(e){if(e instanceof Date){var t=function(e){var t=e.getTime(),n=Math.floor(t/1e3),r=1e6*(t-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}(e);return function(e){var t,n=e.sec,r=e.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(t=new DataView(s.buffer)).setUint32(0,n),s}var a=n/4294967296,i=4294967295&n;return s=new Uint8Array(8),(t=new DataView(s.buffer)).setUint32(0,r<<2|3&a),t.setUint32(4,i),s}return s=new Uint8Array(12),(t=new DataView(s.buffer)).setUint32(0,r),gZ(t,4,n),s}(t)}return null},decode:function(e){var t=function(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:yZ(t,4),nsec:t.getUint32(0)};default:throw new RZ("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(e.length))}}(e);return new Date(1e3*t.sec+t.nsec/1e6)}},AZ=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(LZ)}return e.prototype.register=function(e){var t=e.type,n=e.encode,r=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=r;else{var s=1+t;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(e,t)))return new NZ(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(e,t)))return new NZ(n,s)}return e instanceof NZ?e:null},e.prototype.decode=function(e,t,n){var r=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return r?r(e,t,n):new NZ(t,e)},e.defaultCodec=new e,e}();function PZ(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var DZ=function(){function e(e,t,n,r,s,a,i,o){void 0===e&&(e=AZ.defaultCodec),void 0===t&&(t=void 0),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===a&&(a=!1),void 0===i&&(i=!1),void 0===o&&(o=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=a,this.ignoreUndefined=i,this.forceIntegerToFloat=o,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.reinitializeState=function(){this.pos=0},e.prototype.encodeSharedRef=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.subarray(0,this.pos)},e.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.slice(0,this.pos)},e.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth ".concat(t));null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),r=new DataView(t);n.set(this.bytes),this.view=r,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: ".concat(e," bytes in UTF-8"));this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){if(e.length>_Z){var t=SZ(e);this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),IZ(e,this.bytes,this.pos),this.pos+=t}else t=SZ(e),this.ensureBufferSizeToWrite(5+t),this.writeStringHeader(t),function(e,t,n){for(var r=e.length,s=n,a=0;a<r;){var i=e.charCodeAt(a++);if(4294967168&i){if(4294965248&i){if(i>=55296&&i<=56319&&a<r){var o=e.charCodeAt(a);56320==(64512&o)&&(++a,i=((1023&i)<<10)+(1023&o)+65536)}4294901760&i?(t[s++]=i>>18&7|240,t[s++]=i>>12&63|128,t[s++]=i>>6&63|128):(t[s++]=i>>12&15|224,t[s++]=i>>6&63|128)}else t[s++]=i>>6&31|192;t[s++]=63&i|128}else t[s++]=i}}(e,this.bytes,this.pos),this.pos+=t},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(e)));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: ".concat(t));this.writeU8(198),this.writeU32(t)}var n=PZ(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n=e.length;if(n<16)this.writeU8(144+n);else if(n<65536)this.writeU8(220),this.writeU16(n);else{if(!(n<4294967296))throw new Error("Too large array: ".concat(n));this.writeU8(221),this.writeU32(n)}for(var r=0,s=e;r<s.length;r++){var a=s[r];this.doEncode(a,t+1)}},e.prototype.countWithoutUndefined=function(e,t){for(var n=0,r=0,s=t;r<s.length;r++)void 0!==e[s[r]]&&n++;return n},e.prototype.encodeMap=function(e,t){var n=Object.keys(e);this.sortKeys&&n.sort();var r=this.ignoreUndefined?this.countWithoutUndefined(e,n):n.length;if(r<16)this.writeU8(128+r);else if(r<65536)this.writeU8(222),this.writeU16(r);else{if(!(r<4294967296))throw new Error("Too large map object: ".concat(r));this.writeU8(223),this.writeU32(r)}for(var s=0,a=n;s<a.length;s++){var i=a[s],o=e[i];this.ignoreUndefined&&void 0===o||(this.encodeString(i),this.doEncode(o,t+1))}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: ".concat(t));this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,n){var r=n/4294967296,s=n;e.setUint32(t,r),e.setUint32(t+4,s)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),gZ(this.view,this.pos,e),this.pos+=8},e}(),OZ={};function GZ(e){return"".concat(e<0?"-":"","0x").concat(Math.abs(e).toString(16).padStart(2,"0"))}var zZ=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.find=function(e,t,n){e:for(var r=0,s=this.caches[n-1];r<s.length;r++){for(var a=s[r],i=a.bytes,o=0;o<n;o++)if(i[o]!==e[t+o])continue e;return a.str}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],r={bytes:e,str:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},e.prototype.decode=function(e,t,n){var r=this.find(e,t,n);if(null!=r)return this.hit++,r;this.miss++;var s=CZ(e,t,n),a=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(a,s),s},e}(),FZ=function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=(s=i.trys).length>0&&s[s.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},WZ=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,s){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,s,(t=e[n](t)).done,t.value)}))}}},VZ=function(e){return this instanceof VZ?(this.v=e,this):new VZ(e)},UZ=function(e){var t=typeof e;return"string"===t||"number"===t},BZ=new DataView(new ArrayBuffer(0)),XZ=new Uint8Array(BZ.buffer),$Z=function(){try{BZ.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),HZ=new $Z("Insufficient data"),ZZ=new zZ,KZ=function(){function e(e,t,n,r,s,a,i,o){void 0===e&&(e=AZ.defaultCodec),void 0===t&&(t=void 0),void 0===n&&(n=fZ),void 0===r&&(r=fZ),void 0===s&&(s=fZ),void 0===a&&(a=fZ),void 0===i&&(i=fZ),void 0===o&&(o=ZZ),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=a,this.maxExtLength=i,this.keyDecoder=o,this.totalPos=0,this.pos=0,this.view=BZ,this.bytes=XZ,this.headByte=-1,this.stack=[]}return e.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=-1,this.stack.length=0},e.prototype.setBuffer=function(e){this.bytes=PZ(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=PZ(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining(1)){var t=this.bytes.subarray(this.pos),n=PZ(e),r=new Uint8Array(t.length+n.length);r.set(t),r.set(n,t.length),this.setBuffer(r)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},e.prototype.createExtraByteError=function(e){var t=this.view,n=this.pos;return new RangeError("Extra ".concat(t.byteLength-n," of ").concat(t.byteLength," byte(s) found at buffer[").concat(e,"]"))},e.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},e.prototype.decodeMulti=function(e){return FZ(this,(function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}}))},e.prototype.decodeAsync=function(e){var t,n,r,s;return function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{l(r.next(e))}catch(e){a(e)}}function o(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){e.done?s(e.value):function(e){return e instanceof n?e:new n((function(t){t(e)}))}(e.value).then(i,o)}l((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var a,i,o,l,u,c,h,d;return FZ(this,(function(p){switch(p.label){case 0:a=!1,p.label=1;case 1:p.trys.push([1,6,7,12]),t=WZ(e),p.label=2;case 2:return[4,t.next()];case 3:if((n=p.sent()).done)return[3,5];if(o=n.value,a)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o);try{i=this.doDecodeSync(),a=!0}catch(e){if(!(e instanceof $Z))throw e}this.totalPos+=this.pos,p.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=p.sent(),r={error:l},[3,12];case 7:return p.trys.push([7,,10,11]),n&&!n.done&&(s=t.return)?[4,s.call(t)]:[3,9];case 8:p.sent(),p.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,i]}throw c=(u=this).headByte,h=u.pos,d=u.totalPos,new RangeError("Insufficient data in parsing ".concat(GZ(c)," at ").concat(d," (").concat(h," in the current buffer)"))}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),a=[];return r={},i("next"),i("throw"),i("return"),r[Symbol.asyncIterator]=function(){return this},r;function i(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{!function(e){e.value instanceof VZ?Promise.resolve(e.value.v).then(l,u):c(a[0][2],e)}(s[e](t))}catch(e){c(a[0][3],e)}}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}}(this,arguments,(function(){var n,r,s,a,i,o,l,u,c;return FZ(this,(function(h){switch(h.label){case 0:n=t,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=WZ(e),h.label=2;case 2:return[4,VZ(s.next())];case 3:if((a=h.sent()).done)return[3,12];if(i=a.value,t&&0===r)throw this.createExtraByteError(this.totalPos);this.appendBuffer(i),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,VZ(this.doDecodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof $Z))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(c=s.return)?[4,VZ(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(r=e-128)){this.pushMapState(r),this.complete();continue e}t={}}else if(e<160){if(0!=(r=e-144)){this.pushArrayState(r),this.complete();continue e}t=[]}else{var n=e-160;t=this.decodeUtf8String(n,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)n=this.lookU8(),t=this.decodeUtf8String(n,1);else if(218===e)n=this.lookU16(),t=this.decodeUtf8String(n,2);else if(219===e)n=this.lookU32(),t=this.decodeUtf8String(n,4);else if(220===e){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(221===e){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(222===e){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue e}t={}}else if(223===e){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue e}t={}}else if(196===e){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(197===e)r=this.lookU16(),t=this.decodeBinary(r,2);else if(198===e)r=this.lookU32(),t=this.decodeBinary(r,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)r=this.lookU8(),t=this.decodeExtension(r,1);else if(200===e)r=this.lookU16(),t=this.decodeExtension(r,2);else{if(201!==e)throw new RZ("Unrecognized type byte: ".concat(GZ(e)));r=this.lookU32(),t=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var a=s[s.length-1];if(0===a.type){if(a.array[a.position]=t,a.position++,a.position!==a.size)continue e;s.pop(),t=a.array}else{if(1===a.type){if(!UZ(t))throw new RZ("The type of key must be string or number but "+typeof t);if("__proto__"===t)throw new RZ("The key __proto__ is not allowed");a.key=t,a.type=2;continue e}if(a.map[a.key]=t,a.readCount++,a.readCount!==a.size){a.key=null,a.type=1;continue e}s.pop(),t=a.map}}return t}},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new RZ("Unrecognized array type byte: ".concat(GZ(e)))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new RZ("Max length exceeded: map length (".concat(e,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new RZ("Max length exceeded: array length (".concat(e,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new RZ("Max length exceeded: UTF-8 byte length (".concat(e,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+t+e)throw HZ;var r,s=this.pos+t;return r=this.stateIsMapKey()&&null!==(n=this.keyDecoder)&&void 0!==n&&n.canBeCached(e)?this.keyDecoder.decode(this.bytes,s,e):e>EZ?function(e,t,n){var r=e.subarray(t,t+n);return MZ.decode(r)}(this.bytes,s,e):CZ(this.bytes,s,e),this.pos+=t+e,r},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new RZ("Max length exceeded: bin length (".concat(e,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(e+t))throw HZ;var n=this.pos+t,r=this.bytes.subarray(n,n+e);return this.pos+=t+e,r},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new RZ("Max length exceeded: ext length (".concat(e,") > maxExtLength (").concat(this.maxExtLength,")"));var n=this.view.getInt8(this.pos+t),r=this.decodeBinary(e,t+1);return this.extensionCodec.decode(r,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e=function(e,t){return 4294967296*e.getUint32(t)+e.getUint32(t+4)}(this.view,this.pos);return this.pos+=8,e},e.prototype.readI64=function(){var e=yZ(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),jZ={};class YZ{constructor(){this.data=null}compileImageTargets(e,t){return new Promise((async(n,r)=>{const s=[];for(let t=0;t<e.length;t++){const n=e[t],r=this.createProcessCanvas(n).getContext("2d");r.drawImage(n,0,0,n.width,n.height);const a=r.getImageData(0,0,n.width,n.height),i=new Uint8Array(n.width*n.height);for(let e=0;e<i.length;e++){const t=4*e;i[e]=Math.floor((a.data[t]+a.data[t+1]+a.data[t+2])/3)}const o={data:i,height:n.height,width:n.width};s.push(o)}const a=50/s.length;let i=0;this.data=[];for(let e=0;e<s.length;e++){const n=s[e],r=lZ(n),o=a/r.length,l=await QZ(r,(()=>{i+=o,t(i)}));this.data.push({targetImage:n,imageList:r,matchingData:l})}for(let e=0;e<s.length;e++){const t=uZ(s[e]);this.data[e].trackingImageList=t}const o=await this.compileTrack({progressCallback:t,targetImages:s,basePercent:50});for(let e=0;e<s.length;e++)this.data[e].trackingData=o[e];n(this.data)}))}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return function(e,t){return void 0===t&&(t=OZ),new DZ(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined,t.forceIntegerToFloat).encodeSharedRef(e)}({v:2,dataList:e})}importData(e){const t=function(e,t){return void 0===t&&(t=jZ),new KZ(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decode(e)}(new Uint8Array(e));if(!t.v||2!==t.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let e=0;e<n.length;e++)this.data.push({targetImage:n[e].targetImage,trackingData:n[e].trackingData,matchingData:n[e].matchingData});return this.data}createProcessCanvas(e){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:e,targetImages:t,basePercent:n}){console.warn("missing compileTrack implementation")}}const QZ=async(e,t)=>{const n=[];for(let r=0;r<e.length;r++){const s=e[r],a=new aZ(s.width,s.height);await bv(),ep((()=>{const e=jd(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:i}=a.detect(e),o=i.filter((e=>e.maxima)),l=i.filter((e=>!e.maxima)),u=pZ({points:o}),c=pZ({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:s.width,height:s.height,scale:s.scale}),t(r)}))}return n},JZ="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",qZ=typeof window<"u"&&window.Blob&&new Blob([atob(JZ)],{type:"text/javascript;charset=utf-8"});function eK(e){let t;try{if(t=qZ&&(window.URL||window.webkitURL).createObjectURL(qZ),!t)throw"";const n=new Worker(t,{name:null==e?void 0:e.name});return n.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(t)})),n}catch{return new Worker("data:application/javascript;base64,"+JZ,{name:null==e?void 0:e.name})}finally{t&&(window.URL||window.webkitURL).revokeObjectURL(t)}}class tK extends YZ{createProcessCanvas(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,t}compileTrack({progressCallback:e,targetImages:t,basePercent:n}){return new Promise(((r,s)=>{const a=new eK;a.onmessage=t=>{"progress"===t.data.type?e(n+t.data.percent*n/100):"compileDone"===t.data.type&&r(t.data.list)},a.postMessage({type:"compile",targetImages:t})}))}}class nK{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const r=ap();this.tempPixelHandle=r.makeTensorInfo(this.texShape,"float32"),r.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return ep((()=>{let t=jx(e);return t=t.mean(2),t}))}loadInput(e){const t=this.context;if(t.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),e.width===this.height&&e.height===this.width){let n=this.context.canvas.width/2,r=this.context.canvas.height/2,s=90;t.save(),t.translate(n,r),t.rotate(s*Math.PI/180),t.drawImage(e,-e.width/2,-e.height/2),t.restore()}else this.context.drawImage(e,0,0,e.width,e.height);const n=ap();return n.gpgpu.uploadPixelDataToTexture(n.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const n=2===Mo().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(e,t){const n=ap().compileAndRun(e,t);return Jd().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const r=ap().runWebGLProgram(e,t,n);return Jd().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}const rK={memory:qd,nextFrame:bv};class sK{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,debugMode:r=!1,maxTrack:s=1,warmupTolerance:a=null,missTolerance:i=null,filterMinCF:o=null,filterBeta:l=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=s,this.filterMinCF=null===o?.001:o,this.filterBeta=null===l?1e3:l,this.warmupTolerance=null===a?5:a,this.missTolerance=null===i?5:i,this.cropDetector=new iZ(this.inputWidth,this.inputHeight,r),this.inputLoader=new nK(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=r,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const u=45*Math.PI/180,c=this.inputHeight/2/Math.tan(u/2);this.projectionTransform=[[c,0,this.inputWidth/2],[0,c,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new RH,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(rK.memory().numTensors),console.table(rK.memory())}addImageTargets(e){return new Promise((async(t,n)=>{const r=await(await fetch(e)).arrayBuffer();t(this.addImageTargetsFromBuffer(r))}))}addImageTargetsFromBuffer(e){const t=(new tK).importData(e),n=[],r=[],s=[];for(let e=0;e<t.length;e++)r.push(t[e].matchingData),n.push(t[e].trackingData),s.push([t[e].targetImage.width,t[e].targetImage.height]);return this.tracker=new AH(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getRotatedZ90Matrix(e){return[-e[1],e[0],e[2],e[3],-e[5],e[4],e[6],e[7],-e[9],e[8],e[10],e[11],-e[13],e[12],e[14],e[15]]}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,t);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(e,t,n){const{worldCoords:r,screenCoords:s}=this.tracker.track(e,t,n);return r.length<4?null:await this._workerTrackUpdate(t,{worldCoords:r,screenCoords:s})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new Ni({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce(((e,t)=>e+(t.isTracking?1:0)),0)<this.maxTrack){const e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));const{targetIndex:n,modelViewTransform:r}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=r)}for(let n=0;n<this.trackingStates.length;n++){const r=this.trackingStates[n];if(r.isTracking){let e=await this._trackAndUpdate(t,r.currentModelViewTransform,n);null===e?r.isTracking=!1:r.currentModelViewTransform=e}if(r.showing||r.isTracking&&(r.trackMiss=0,r.trackCount+=1,r.trackCount>this.warmupTolerance&&(r.showing=!0,r.trackingMatrix=null,r.filter.reset())),r.showing&&(r.isTracking?r.trackMiss=0:(r.trackCount=0,r.trackMiss+=1,r.trackMiss>this.missTolerance&&(r.showing=!1,r.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:n,worldMatrix:null})))),r.showing){const t=this._glModelViewMatrix(r.currentModelViewTransform,n);r.trackingMatrix=r.filter.filter(Date.now(),t);let s=[];for(let e=0;e<r.trackingMatrix.length;e++)s[e]=r.trackingMatrix[e];e.width===this.inputHeight&&e.height===this.inputWidth&&(s=this.getRotatedZ90Matrix(s)),this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:n,worldMatrix:s})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await rK.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:r}}async match(e,t){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:r}}async track(e,t,n){const r=this.inputLoader.loadInput(e),s=this.tracker.track(r,t,n);return r.dispose(),s}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,r)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,r)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:s,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:s,screenCoords:a})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:r,far:s}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],i=[];for(let e=0;e<4;e++)for(let t=0;t<4;t++)i.push(a[t][e]);return i}}const aK=new at,iK=new st,oK=new at,lK=new Dt,uK=new Dt;class cK{constructor(e={}){const t=this;let n,r,s,a;const i={camera:{style:""},objects:new WeakMap},o=void 0!==e.element?e.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const l=document.createElement("div");l.style.transformOrigin="0 0",l.style.pointerEvents="none",o.appendChild(l);const u=document.createElement("div");function c(e){return Math.abs(e)<1e-10?0:e}function h(e){const t=e.elements;return"matrix3d("+c(t[0])+","+c(-t[1])+","+c(t[2])+","+c(t[3])+","+c(t[4])+","+c(-t[5])+","+c(t[6])+","+c(t[7])+","+c(t[8])+","+c(-t[9])+","+c(t[10])+","+c(t[11])+","+c(t[12])+","+c(-t[13])+","+c(t[14])+","+c(t[15])+")"}function d(e){const t=e.elements;return"translate(-50%,-50%)matrix3d("+c(t[0])+","+c(t[1])+","+c(t[2])+","+c(t[3])+","+c(-t[4])+","+c(-t[5])+","+c(-t[6])+","+c(-t[7])+","+c(t[8])+","+c(t[9])+","+c(t[10])+","+c(t[11])+","+c(t[12])+","+c(t[13])+","+c(t[14])+","+c(t[15])+")"}function p(e,n,r,s){if(e.isCSS3DObject){const s=!0===e.visible&&!0===e.layers.test(r.layers);if(e.element.style.display=!0===s?"":"none",!0===s){let s;e.onBeforeRender(t,n,r),e.isCSS3DSprite?(lK.copy(r.matrixWorldInverse),lK.transpose(),0!==e.rotation2D&&lK.multiply(uK.makeRotationZ(e.rotation2D)),e.matrixWorld.decompose(aK,iK,oK),lK.setPosition(aK),lK.scale(oK),lK.elements[3]=0,lK.elements[7]=0,lK.elements[11]=0,lK.elements[15]=1,s=d(lK)):s=d(e.matrixWorld);const a=e.element,o=i.objects.get(e);if(void 0===o||o.style!==s){a.style.transform=s;const t={style:s};i.objects.set(e,t)}a.parentNode!==u&&u.appendChild(a),e.onAfterRender(t,n,r)}}for(let t=0,a=e.children.length;t<a;t++)p(e.children[t],n,r,s)}u.style.transformStyle="preserve-3d",l.appendChild(u),this.getSize=function(){return{width:n,height:r}},this.render=function(e,t){const o=t.projectionMatrix.elements[5]*a;let d,m;t.view&&t.view.enabled?(l.style.transform=`translate( ${-t.view.offsetX*(n/t.view.width)}px, ${-t.view.offsetY*(r/t.view.height)}px )`,l.style.transform+=`scale( ${t.view.fullWidth/t.view.width}, ${t.view.fullHeight/t.view.height} )`):l.style.transform="",!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),t.isOrthographicCamera&&(d=-(t.right+t.left)/2,m=(t.top+t.bottom)/2);const f=t.view&&t.view.enabled?t.view.height/t.view.fullHeight:1,g=t.isOrthographicCamera?`scale( ${f} )scale(`+o+")translate("+c(d)+"px,"+c(m)+"px)"+h(t.matrixWorldInverse):`scale( ${f} )translateZ(`+o+"px)"+h(t.matrixWorldInverse),y=(t.isPerspectiveCamera?"perspective("+o+"px) ":"")+g+"translate("+s+"px,"+a+"px)";i.camera.style!==y&&(u.style.transform=y,i.camera.style=y),p(e,e,t,g)},this.setSize=function(e,t){n=e,r=t,s=n/2,a=r/2,o.style.width=e+"px",o.style.height=t+"px",l.style.width=e+"px",l.style.height=t+"px",u.style.width=e+"px",u.style.height=t+"px"}}}const hK=Hd({addN_:function(e){Wi(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Wi(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Bd(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!$i(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Ad.runKernel(Oo,r)}}),dK=Hd({basicLSTMCell_:function(e,t,n,r,s,a){const i=Bd(e,"forgetBias","basicLSTMCell"),o=Bd(t,"lstmKernel","basicLSTMCell"),l=Bd(n,"lstmBias","basicLSTMCell"),u=Bd(r,"data","basicLSTMCell"),c=Bd(s,"c","basicLSTMCell"),h=Bd(a,"h","basicLSTMCell"),d=Gm([u,h],1),p=zm(d,o),m=rm(p,l),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Wm(m,[0,0],y),x=Wm(m,[0,g],y),v=Wm(m,[0,2*g],y),w=Wm(m,[0,3*g],y),S=rm(im(Fm(b),Vm(x)),im(c,Fm(rm(i,v))));return[S,im(Vm(S),Fm(w))]}}),pK=Hd({bitwiseAnd_:function(e,t){const n=Bd(e,"x","bitwiseAnd"),r=Bd(t,"y","bitwiseAnd");if(!$i(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return Ad.runKernel(qo,s)}}),mK=Hd({broadcastArgs_:function(e,t){const n=Bd(e,"s0","broadcastArgs","int32"),r=Bd(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return Ad.runKernel(tl,s)}}),fK=Hd({diag_:function(e){const t={x:Bd(e,"x","diag")};return Ad.runKernel(_l,t)}}),gK=Hd({ensureShape_:function(e,t){const n=Bd(e,"x","ensureShape","string_or_numeric");if(!Xi(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});function yK(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Ad.runKernel(ru,{},r)}const bK=2147483648,xK=Hd({searchSorted_:function(e,t,n="left"){const r=Bd(e,"sortedSequence","searchSorted"),s=Bd(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=Pm(r,[-1,a]),l=Pm(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Bi(l.shape)>=bK)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=bK)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return Ad.runKernel(nc,u,c)}});function vK(e,t){return xK(e,t,"left")}const wK=Hd({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Bd(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=Ad.runKernel(bu,a,i);return{result:o[0],indexes:o[1]}}});function SK(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Bd(e,"x","meshgrid",e instanceof ud?e.dtype:"float32");if(void 0===t)return[r];let s=Bd(t,"y","meshgrid",t instanceof ud?t.dtype:"float32");const a=Bi(r.shape),i=Bi(s.shape);return"xy"===n?(r=Pm(r,[1,-1]),s=Pm(s,[-1,1]),[zm(Lg([i,1],r.dtype),r),zm(s,Lg([1,a],s.dtype))]):(r=Pm(r,[-1,1]),s=Pm(s,[1,-1]),[zm(r,Lg([1,i],r.dtype)),zm(Lg([a,1],s.dtype),s)])}const TK=Hd({multiRNNCell_:function(e,t,n,r){const s=Bd(t,"data","multiRNNCell"),a=Xd(n,"c","multiRNNCell"),i=Xd(r,"h","multiRNNCell");let o=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),_K=Hd({multinomial_:function(e,t,n,r=!1){const s=Bd(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Pm(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=Ad.runKernel(_u,o,l);return 1===i?Pm(u,[u.size]):u}}),IK=Hd({outerProduct_:function(e,t){const n=Bd(e,"v1","outerProduct"),r=Bd(t,"v2","outerProduct");Wi(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Pm(n,[-1,1]),a=Pm(r,[1,-1]);return zm(s,a)}}),CK=Hd({pad1d_:function(e,t,n=0){return Wi(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Wg(e,[t],n)}}),MK=Hd({pad2d_:function(e,t,n=0){return Wi(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wg(e,t,n)}}),EK=Hd({pad3d_:function(e,t,n=0){return Wi(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wg(e,t,n)}}),NK=Hd({pad4d_:function(e,t,n=0){return Wi(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Wg(e,t,n)}}),kK=Hd({raggedGather_:function(e,t,n,r){const s=e.map(((e,t)=>Bd(e,`tensors${t}`,"raggedGather","int32"))),a={paramsNestedSplits:s,paramsDenseValues:Bd(t,"paramsDenseValues","raggedGather"),indices:Bd(n,"indices","raggedGather","int32")},i={outputRaggedRank:r},o=Ad.runKernel(zu,a,i);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),RK=Hd({raggedRange_:function(e,t,n){const r=Bd(e,"starts","raggedRange"),s={starts:r,limits:Bd(t,"limits","raggedRange",r.dtype),deltas:Bd(n,"deltas","raggedRange",r.dtype)},a=Ad.runKernel(Fu,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),LK=Hd({raggedTensorToTensor_:function(e,t,n,r,s){const a=Bd(e,"shape","raggedTensorToTensor","int32"),i=Bd(t,"values","raggedTensorToTensor"),o=Bd(n,"defaultValue","raggedTensorToTensor",i.dtype),l=r.map(((e,t)=>Bd(e,`tensors${t}`,"raggedTensorToTensor","int32"))),u={shape:a,values:i,defaultValue:o,rowPartitionTensors:l},c={rowPartitionTypes:s};return Ad.runKernel(Wu,u,c)}}),AK=Hd({rand_:function(e,t,n){vo(e);const r=Bi(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return Ad.makeTensor(s,e,n)}});function PK(){return 32===Ad.backend.floatPrecision()?.001:.1}function DK(e,t,n){let r=!0;if((jh(e)||jh(t))&&(r=!1),jh(e)&&jh(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Wd(e),r=Wd(t);if(!$i(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=jh(e)?e:Yh(e),a=jh(t)?t:Yh(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}typeof expect<"u"&&expect().nothing()}function OK(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}const GK=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:.1,createVideoElement:function(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))},encodeStrings:function e(t){for(let n=0;n<t.length;n++){const r=t[n];Array.isArray(r)?e(r):t[n]=Zh(r)}return t},expectArrayBuffersEqual:function(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)},expectArraysClose:function(e,t,n){return null==n&&(n=PK()),DK(e,t,((e,t)=>OK(e,t,n)))},expectArraysEqual:function(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return io(e)||io(e[0])||io(t)||io(t[0])?DK(e,n,((e,t)=>e==t)):DK(e,t,((e,t)=>OK(e,t,0)))},expectNumbersClose:function(e,t,n){if(null==n&&(n=PK()),!OK(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()},expectPromiseToFail:function(e,t){e().then((()=>t.fail()),(()=>t())),typeof expect<"u"&&expect().nothing()},expectValuesInRange:function(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)},play:async function(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))},testEpsilon:PK},Symbol.toStringTag,{value:"Module"})),zK=Hd({randomGamma_:function(e,t,n=1,r="float32",s){if(vo(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new my(t,n,r,s),i=qp(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),FK=Hd({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return gy(e,0,1,t,n)}}),WK=Hd({randomUniformInt_:function(e,t,n,r){return yy(e,t,n,"int32",r)}}),VK=Hd({reverse1d_:function(e){const t=Bd(e,"x","reverse");return Wi(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Ty(t,0)}}),UK=Hd({reverse2d_:function(e,t){const n=Bd(e,"x","reverse");return Wi(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ty(n,t)}}),BK=Hd({reverse3d_:function(e,t){const n=Bd(e,"x","reverse");return Wi(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ty(n,t)}}),XK=Hd({reverse4d_:function(e,t){const n=Bd(e,"x","reverse");return Wi(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ty(n,t)}}),$K=async function(e,t){const n=Bd(e,"x","setdiff1d"),r=Bd(t,"y","setdiff1d");Wi(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Wi(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Wi(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const l=new id([o],n.dtype),u=new id([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(l.values[t]=s[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]};function HK(e,t,n){if(Ui(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Wd(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Kd(e,t,r,n)}function ZK(e,t,n){if(Ui(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Wd(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Kd(e,t,r,n)}function KK(e,t,n){if(Ui(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Wd(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Kd(e,t=t||r,r,n)}const jK=Hd({tensorScatterUpdate_:function(e,t,n){const r=Bd(e,"tensor","tensorScatterupdate"),s=Bd(t,"indices","tensorScatterupdate","int32"),a=Bd(n,"updates","tensorScatterupdate");if(Qy(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return Ad.runKernel(tc,i,{})}});function YK(e,t){return xK(e,t,"right")}const QK=async function(e){const t=Bd(e,"condition","whereAsync","bool"),n=await t.data(),r=ib(t.shape,n);return e!==t&&t.dispose(),r},JK=async function(e,t,n){const r=Bd(e,"tensor","boolMask"),s=Bd(t,"mask","boolMask","bool"),a=n??0,i=s.rank,o=r.shape;Wi(i>0,(()=>"mask cannot be scalar")),Vi(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=Pm(r,u),h=Pm(s,[-1]),d=await QK(h),p=Uy(d,[1]),m=tg(c,p,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),m},qK=Hd({movingAverage_:function(e,t,n,r,s=!0){const a=Bd(e,"v","movingAverage"),i=Bd(t,"x","movingAverage"),o=Bd(n,"decay","movingAverage");_d(a,i),Wi($i(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=Uf(1),u=vg(l,o);let c=im(vg(i,a),u);if(s){Wi(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Bd(r,"step","movingAverage");c=am(c,vg(l,Vf(o,e)))}return rm(a,c)}}),ej=Hd({scatterND_:function(e,t,n){vo(n);const r=Bd(e,"indices","scatterND","int32"),s=Bd(t,"updates","scatterND");Qy(s,r,n);const a={indices:r,updates:s},i={shape:n};return Ad.runKernel(ec,a,i)}}),tj=Hd({sparseToDense_:function(e,t,n,r=0){vo(n);const s=Bd(e,"sparseIndices","sparseToDense","int32"),a=Bd(t,"sparseValues","sparseToDense","string_or_numeric"),i=Bd(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return Ad.runKernel(vc,o,l)}}),nj=Hd({gatherND_:function(e,t){const n=Bd(t,"indices","gatherND","int32"),r={params:Bd(e,"x","gatherND","string_or_numeric"),indices:n};return Ad.runKernel($l,r)}}),rj=async function(e,t,n=1){const r=Bd(e,"predictions","inTopK"),s=Bd(t,"targets","inTopK");Wi(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Wi(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),Vi(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Wi(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],c=qi("bool",l);for(let e=0;e<l;e++){const t=e*u,r=i.subarray(t,t+u),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),jd(c,s.shape,"bool")},sj=Hd({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===fb(Ad.state.gradientDepth,l)){let h=yf(e,t,n,r,s,a,i);return null!=o&&(h=rm(h,o)),mb(h,l,u,c)}const h=Bd(e,"x","depthwiseConv2d","float32"),d=Bd(t,"filter","depthwiseConv2d","float32");let p=h,m=!1;3===h.rank&&(m=!0,p=Pm(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Wi(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),Wi(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),Wi(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),Wi(km(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Am("fused depthwiseConv2d",r,i);const f=Sm(p.shape,d.shape,n,a,r,i,!0);let g,y;null!=o&&(g=Bd(o,"bias","fused conv2d"),[g]=Td(g,h),wf(f.outShape,g.shape)),null!=u&&(y=Bd(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Wi(Nm(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=db(e,u,l),d=bb(o.shape,h,s,n,r,a,i),p=yb(o,h,s.shape,n,r,a,i);return null!=c?[d,p,pb(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?fg(((e,t,n)=>{let r=Ad.runKernel(Xc,x,v);return n([t,e,r]),m&&(r=Pm(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(p,d):fg(((e,t,n,r)=>{let s=Ad.runKernel(Xc,x,v);return r([t,e,s,n]),m&&(s=Pm(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(p,d,g)}}),aj=Object.freeze(Object.defineProperty({__proto__:null,conv2d:gb,depthwiseConv2d:sj,matMul:xb},Symbol.toStringTag,{value:"Module"}));function ij(e){return new Promise((e=>setTimeout(e))).then(e)}class oj{constructor(e){if(!Mo().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(oj.URL_SCHEME)&&(e=e.slice(oj.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Qd.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=bp(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await ij((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await ij((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:wp(e)}}}}oj.URL_SCHEME="downloads://";class lj{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=vp(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>yp(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=yp(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}Tp.registerSaveRouter((e=>Mo().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(oj.URL_SCHEME)?function(e="model"){return new oj(e)}(e.slice(oj.URL_SCHEME.length)):null));class uj{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class cj{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class hj{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function dj(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new uj(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new uj({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new uj({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}const pj=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Qd,browserFiles:function(e){return new lj(e)},browserHTTPRequest:Xx,concatenateArrayBuffers:gp,copyModel:async function(e,t){return Yp(e,t,!1)},decodeWeights:op,decodeWeightsStream:dp,encodeWeights:ip,fromMemory:function(e,t,n,r){return new hj(dj(...arguments))},fromMemorySync:dj,getLoadHandlers:Ip,getModelArtifactsForJSON:vp,getModelArtifactsForJSONSync:xp,getModelArtifactsInfoForJSON:wp,getSaveHandlers:_p,getWeightSpecs:Sp,http:Bx,isHTTPScheme:Vx,listModels:async function(){const e=Kp.getSchemes(),t={};for(const n of e){const e=await Kp.getManager(n).listModels();for(const r in e)t[n+Zp+r]=e[r]}return t},loadWeights:zx,moveModel:async function(e,t){return Yp(e,t,!0)},registerLoadRouter:e=>Tp.registerLoadRouter(e),registerSaveRouter:e=>Tp.registerSaveRouter(e),removeModel:async function(e){const t=jp(e);return Kp.getManager(t.scheme).removeModel(t.path)},weightsLoaderFactory:Fx,withSaveHandler:function(e){return new cj(e)},withSaveHandlerSync:function(e){return new cj(e)}},Symbol.toStringTag,{value:"Module"})),mj=Hd({confusionMatrix_:function(e,t,n){const r=Bd(e,"labels","confusionMatrix"),s=Bd(t,"predictions","confusionMatrix");Wi(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Wi(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Wi(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),Wi(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),Wi(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=zg(em(r,"int32"),n),i=zg(em(s,"int32"),n),o=ob(a),l=zm(o,i);return em(l,"int32")}}),fj=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:mj},Symbol.toStringTag,{value:"Module"})),gj="4.16.0",yj=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Ab,nonMaxSuppressionV4Impl:Pb,nonMaxSuppressionV5Impl:Db,whereImpl:ib},Symbol.toStringTag,{value:"Module"})),bj=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:function(e){return new NI(e)},minMaxNorm:function(e){return new LI(e)},nonNeg:function(){return new RI},unitNorm:function(e){return new kI(e)}},Symbol.toStringTag,{value:"Module"})),xj=Object.freeze(Object.defineProperty({__proto__:null,constant:function(e){return new F_(e)},glorotNormal:function(e){return new H_(e)},glorotUniform:function(e){return new $_(e)},heNormal:function(e){return new Z_(e)},heUniform:function(e){return new K_(e)},identity:function(e){return new B_(e)},leCunNormal:function(e){return new j_(e)},leCunUniform:function(e){return new Y_(e)},ones:function(){return new z_},orthogonal:function(e){return new Q_(e)},randomNormal:function(e){return new V_(e)},randomUniform:function(e){return new W_(e)},truncatedNormal:function(e){return new U_(e)},varianceScaling:function(e){return new X_(e)},zeros:function(){return new G_}},Symbol.toStringTag,{value:"Module"}));function vj(e){return xI(e)}function wj(e){return new LE(e)}function Sj(e){return new DE(e)}function Tj(e){return new zE(e)}function _j(e){return new VE(e)}function Ij(e){return new XE(e)}function Cj(e){return new RE(e)}function Mj(e){return new PE(e)}const Ej=_j,Nj=Ij,kj=Cj,Rj=Mj,Lj=Object.freeze(Object.defineProperty({__proto__:null,Layer:gI,RNN:BM,RNNCell:XM,activation:function(e){return new iE(e)},add:function(e){return new pE(e)},alphaDropout:function(e){return new TE(e)},average:function(e){return new fE(e)},averagePooling1d:wj,averagePooling2d:Sj,averagePooling3d:Tj,avgPool1d:function(e){return wj(e)},avgPool2d:function(e){return Sj(e)},avgPool3d:function(e){return Tj(e)},avgPooling1d:function(e){return wj(e)},avgPooling2d:function(e){return Sj(e)},avgPooling3d:function(e){return Tj(e)},batchNormalization:function(e){return new IE(e)},bidirectional:function(e){return new ZE(e)},categoryEncoding:function(e){return new JE(e)},centerCrop:function(e){return new QE(e)},concatenate:function(e){return new bE(e)},conv1d:function(e){return new GM(e)},conv2d:function(e){return new RM(e)},conv2dTranspose:function(e){return new AM(e)},conv3d:function(e){return new LM(e)},conv3dTranspose:function(e){return new PM(e)},convLstm2d:function(e){return new tE(e)},convLstm2dCell:function(e){return new eE(e)},cropping2D:function(e){return new zM(e)},dense:function(e){return new sE(e)},depthwiseConv2d:function(e){return new WM(e)},dot:function(e){return new vE(e)},dropout:function(e){return new nE(e)},elu:function(e){return new vM(e)},embedding:function(e){return new hE(e)},flatten:function(e){return new aE(e)},gaussianDropout:function(e){return new SE(e)},gaussianNoise:function(e){return new wE(e)},globalAveragePooling1d:function(e){return new WE(e)},globalAveragePooling2d:function(e){return new BE(e)},globalMaxPool1d:Ej,globalMaxPool2d:Nj,globalMaxPooling1d:_j,globalMaxPooling2d:Ij,gru:function(e){return new KM(e)},gruCell:function(e){return new ZM(e)},input:vj,inputLayer:function(e){return new bI(e)},layerNormalization:function(e){return new CE(e)},leakyReLU:function(e){return new bM(e)},lstm:function(e){return new YM(e)},lstmCell:function(e){return new jM(e)},masking:function(e){return new cE(e)},maxPool1d:kj,maxPool2d:Rj,maxPooling1d:Cj,maxPooling2d:Mj,maxPooling3d:function(e){return new GE(e)},maximum:function(e){return new gE(e)},minimum:function(e){return new yE(e)},multiply:function(e){return new mE(e)},permute:function(e){return new uE(e)},prelu:function(e){return new xM(e)},randomWidth:function(e){return new sN(e)},reLU:function(e){return new yM(e)},repeatVector:function(e){return new oE(e)},rescaling:function(e){return new KE(e)},reshape:function(e){return new lE(e)},resizing:function(e){return new eN(e)},rnn:function(e){return new BM(e)},separableConv2d:function(e){return new OM(e)},simpleRNN:function(e){return new HM(e)},simpleRNNCell:function(e){return new $M(e)},softmax:function(e){return new SM(e)},spatialDropout1d:function(e){return new rE(e)},stackedRNNCells:function(e){return new QM(e)},thresholdedReLU:function(e){return new wM(e)},timeDistributed:function(e){return new HE(e)},upSampling2d:function(e){return new FM(e)},zeroPadding2d:function(e){return new ME(e)}},Symbol.toStringTag,{value:"Module"})),Aj=Object.freeze(Object.defineProperty({__proto__:null,MAPE:function(e,t){return JI(e,t)},MSE:function(e,t){return YI(e,t)},binaryAccuracy:function(e,t){return aC(e,t)},binaryCrossentropy:function(e,t){return uC(e,t)},categoricalAccuracy:function(e,t){return iC(e,t)},categoricalCrossentropy:function(e,t){return hC(e,t)},cosineProximity:function(e,t){return nC(e,t)},mape:function(e,t){return JI(e,t)},meanAbsoluteError:function(e,t){return QI(e,t)},meanAbsolutePercentageError:function(e,t){return JI(e,t)},meanSquaredError:function(e,t){return YI(e,t)},mse:function(e,t){return YI(e,t)},precision:function(e,t){return lC(e,t)},recall:function(e,t){return function(e,t){return ep((()=>{const n=oC(e,t),r=function(e,t){return ep((()=>em($f(Tg(Tf(e,1),Tf(t,0))),"float32")))}(e,t),s=rm(n,r);return em(_f(ng(s,0),am(n,s),0),"float32")}))}(e,t)},sparseCategoricalAccuracy:function(e,t){return cC(e,t)}},Symbol.toStringTag,{value:"Module"})),Pj=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:async function(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=KI(TC(n),t);if(null!=e.weightsManifest){const t=await zx(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),tp(t)}return r}},Symbol.toStringTag,{value:"Module"})),Dj=Object.freeze(Object.defineProperty({__proto__:null,l1:function(e){return function(e){return cM(e),new dM({l1:null!=e?e.l1:null,l2:0})}(e)},l1l2:function(e){return new dM(e)},l2:function(e){return function(e){return cM(e),new dM({l2:null!=e?e.l2:null,l1:0})}(e)}},Symbol.toStringTag,{value:"Module"}));class Oj extends WI{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof BC))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Gj(e,t){return e<t}function zj(e,t){return e>t}class Fj extends Oj{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new _T("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Gj:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=zj:this.monitorFunc=Gj,this.monitorFunc===Gj&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Gj?1/0:-1/0}async onEpochEnd(e,t){await GI(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Wj={earlyStopping:function(e){return new Fj(e)}},Vj={};function Uj(e){return Vj[e]}function Bj(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return Xj(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>Xj(e,n,r,s)))}const l=Xj(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:fo(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function Xj(e,t,n,r){const[s,a]=Kj(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Zj(s,e)]));return void 0!==i?t[Zj(s,i)][a]:void 0}function $j(e,t,n){return t[Zj(e,n.currentContextId)]}function Hj(e,t){const[n,r,s]=Kj(e,t);return[Zj(n,t&&t.currentContextId),r,s]}function Zj(e,t){return t?`${e}-${t}`:e}function Kj(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function jj(e,t,n){let r=Bj("pad",e,t,n);if("explicit"===r){r=Bj("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function Yj(e){return e.kept?e:tm(e)}const Qj=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),Jj=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),qj=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),eY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},Symbol.toStringTag,{value:"Module"})),tY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},Symbol.toStringTag,{value:"Module"})),nY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),rY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),sY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),aY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),iY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]},Symbol.toStringTag,{value:"Module"})),oY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),lY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),uY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),cY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},Symbol.toStringTag,{value:"Module"})),hY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),dY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]},Symbol.toStringTag,{value:"Module"})),pY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},Symbol.toStringTag,{value:"Module"})),mY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]},Symbol.toStringTag,{value:"Module"})),fY=Object.freeze(Object.defineProperty({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]},Symbol.toStringTag,{value:"Module"}));class gY{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[Qj,Jj,qj,eY,tY,nY,rY,sY,aY,iY,oY,lY,uY,cY,hY,dY,pY,mY,fY].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):(null==t.input||0===t.input.length)&&a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Hj(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Hj(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Hj(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Uj(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=bY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=EY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=EY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=vY(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=vY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=MY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=MY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=xY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=kY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=kY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=CY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=CY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=NY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=NY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=TY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=TY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=_Y(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=_Y(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=SY(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=SY(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Hj(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:wY(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=Hj(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Hj(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function yY(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Mo().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function bY(e,t,n,r=!1){const s=e[t];return null!=s?yY(s.s,r):n}function xY(e,t,n){const r=e[t];return r?r.b:n}function vY(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function wY(e){switch("string"==typeof e&&(e=aN[e]),e){case aN.DT_FLOAT:case aN.DT_HALF:return"float32";case aN.DT_INT32:case aN.DT_INT64:case aN.DT_INT8:case aN.DT_UINT8:return"int32";case aN.DT_BOOL:return"bool";case aN.DT_DOUBLE:return"float32";case aN.DT_STRING:return"string";case aN.DT_COMPLEX64:case aN.DT_COMPLEX128:return"complex64";default:return null}}function SY(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function TY(e,t,n){const r=e[t];return r&&r.type?wY(r.type):n}function _Y(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>wY(e))):n}function IY(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function CY(e,t,n){const r=e[t];return r&&r.shape?IY(r.shape):n}function MY(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function EY(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>yY(e,r))):n}function NY(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>IY(e))):n}function kY(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class RY{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Xj(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Xj(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return vY(this.node.rawAttrs,e,t);if(null!=n.s)return bY(this.node.rawAttrs,e,t);if(null!=n.b)return xY(this.node.rawAttrs,e,t);if(null!=n.shape)return CY(this.node.rawAttrs,e,t);if(null!=n.type)return TY(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return MY(this.node.rawAttrs,e,t);if(null!=n.list.s)return EY(this.node.rawAttrs,e,t);if(null!=n.list.shape)return NY(this.node.rawAttrs,e,t);if(null!=n.list.b)return kY(this.node.rawAttrs,e,t);if(null!=n.list.type)return _Y(this.node.rawAttrs,e,t)}return t}}const LY=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:$d,abs:om,acos:lm,acosh:um,add:rm,addN:hK,all:cm,any:hm,argMax:dm,argMin:pm,asin:mm,asinh:fm,atan:gm,atan2:ym,atanh:bm,avgPool:Dm,avgPool3d:Om,basicLSTMCell:dK,batchNorm:Xm,batchNorm2d:$m,batchNorm3d:Hm,batchNorm4d:Zm,batchToSpaceND:Um,bincount:Km,bitwiseAnd:pK,booleanMaskAsync:JK,broadcastArgs:mK,broadcastTo:jm,buffer:qp,cast:em,ceil:Ym,clipByValue:Jm,clone:tm,complex:Zd,concat:Gm,concat1d:qm,concat2d:ef,concat3d:tf,concat4d:nf,conv1d:sf,conv2d:rf,conv2dTranspose:of,conv3d:lf,conv3dTranspose:cf,cos:hf,cosh:df,cosineWindow:cb,cumprod:pf,cumsum:mf,denseBincount:ff,depthToSpace:gf,depthwiseConv2d:yf,diag:fK,dilation2d:bf,div:am,divNoNan:Cf,dot:Mf,dropout:lb,einsum:Ef,elu:Nf,enclosingPowerOfTwo:ub,ensureShape:gK,equal:Tf,erf:kf,euclideanNorm:Kf,exp:jf,expandDims:Yf,expm1:Qf,eye:qf,fft:Oy,fill:Qm,floor:eg,floorDiv:sm,fused:aj,gather:tg,gatherND:nj,greater:ng,greaterEqual:rg,ifft:Gy,imag:sg,image:gx,inTopKAsync:rj,irfft:zy,isFinite:ag,isInf:ig,isNaN:og,leakyRelu:lg,less:ug,lessEqual:cg,linalg:yx,linspace:yK,localResponseNormalization:hg,log:dg,log1p:pg,logSigmoid:xg,logSoftmax:wg,logSumExp:Sg,logicalAnd:Tg,logicalNot:_g,logicalOr:Ig,logicalXor:Cg,losses:bx,lowerBound:vK,matMul:zm,max:Ff,maxPool:Mg,maxPool3d:Eg,maxPoolWithArgmax:wK,maximum:Ng,mean:kg,meshgrid:SK,min:Wf,minimum:Ag,mirrorPad:Pg,mod:Dg,moments:Og,movingAverage:qK,mul:im,multiRNNCell:TK,multinomial:_K,neg:yg,norm:Zf,notEqual:Gg,oneHot:zg,ones:Lg,onesLike:Fg,op:Hd,outerProduct:IK,pad:Wg,pad1d:CK,pad2d:MK,pad3d:EK,pad4d:NK,pool:Ug,pow:Vf,prelu:Bg,print:nm,prod:Xg,raggedGather:kK,raggedRange:RK,raggedTensorToTensor:LK,rand:AK,randomGamma:zK,randomNormal:gy,randomStandardNormal:FK,randomUniform:yy,randomUniformInt:WK,range:by,real:xy,reciprocal:vy,relu:wy,relu6:Sy,reshape:Pm,reverse:Ty,reverse1d:VK,reverse2d:UK,reverse3d:BK,reverse4d:XK,rfft:Wy,round:_y,rsqrt:Iy,scalar:Uf,scatterND:ej,searchSorted:xK,selu:Cy,separableConv2d:My,setdiff1dAsync:$K,sigmoid:Fm,sign:Ey,signal:fx,sin:Ny,sinh:ky,slice:Wm,slice1d:Ry,slice2d:Ly,slice3d:Ay,slice4d:Py,softmax:Dy,softplus:bg,spaceToBatchND:Vg,sparse:xx,sparseToDense:tj,spectral:mx,split:Fy,sqrt:Bf,square:Xf,squaredDifference:Vy,squeeze:Uy,stack:By,step:Xy,stridedSlice:$y,string:vx,sub:vg,sum:$f,tan:Hy,tanh:Vm,tensor:jd,tensor1d:Zy,tensor2d:Ky,tensor3d:jy,tensor4d:HK,tensor5d:ZK,tensor6d:KK,tensorScatterUpdate:jK,tile:Jf,topk:eb,transpose:ob,truncatedNormal:tb,unique:nb,unsortedSegmentSum:rb,unstack:sb,upperBound:YK,variable:ab,where:_f,whereAsync:QK,zeros:Rg,zerosLike:If},Symbol.toStringTag,{value:"Module"}));function AY(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Wi(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];Wi(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function PY(e){return!("number"==typeof e||e.some((e=>e<0)))}function DY(e,t,n){let r=OY(e,n);const s=!PY(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=OY(e.shape,r)})),!PY(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function OY(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class GY{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Uf(0),np(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),AY(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,np(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return jd([],[0].concat(this.elementShape));const n=this.readMany(e);return AY(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),By(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return jd([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return AY(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Gm(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,sb(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];ep((()=>{t=Pm(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=Pm(Wm(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class zY{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);AY(t,e.shape,"TensorList shape mismatch: "),np(e)})),this.idTensor=Uf(0),this.maxNumElements=r,np(this.idTensor)}copy(){return new zY([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);AY(e,this.elementShape,"TensorList shape mismatch: ");const r=DY(this.elementShape,this.tensors,e);return ep((()=>{const e=this.tensors.map((e=>Pm(e,r)));return By(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=DY(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,AY(r.shape,e,"TensorList shape mismatch: "),Pm(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(AY(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");np(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new zY([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);AY(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=DY(this.elementShape,this.tensors,t);return Pm(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);AY(this.elementShape,t.shape,"TensorList shape mismatch: "),np(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);AY(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=DY(this.elementShape,this.tensors,n);return 0===e.length?jd([],[0].concat(r)):ep((()=>{const t=e.map((e=>Pm(this.tensors[e],r)));return By(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);AY(this.elementShape,t,"TensorList shape mismatch: ");const n=DY(this.elementShape,this.tensors,t);return 0===this.size()?jd([],[0].concat(n)):ep((()=>{const e=this.tensors.map((e=>Pm(e,n)));return Gm(e,0)}))}}function FY(e,t,n){const[r,s]=Bj("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=Bj("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Bj("strides",e,t,n),h=jj(e,t,n),d=Bj("dataFormat",e,t,n).toUpperCase(),p=Bj("dilations",e,t,n);let[m,f]=Bj("args",e,t,n);return i&&(f=m,m=void 0),{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:m,preluArg:f,activationFunc:s,leakyreluAlpha:Bj("leakyreluAlpha",e,t,n)}}function WY(e,t,n){return{boxes:Bj("boxes",e,t,n),scores:Bj("scores",e,t,n),maxOutputSize:Bj("maxOutputSize",e,t,n),iouThreshold:Bj("iouThreshold",e,t,n),scoreThreshold:Bj("scoreThreshold",e,t,n),softNmsSigma:Bj("softNmsSigma",e,t,n)}}class VY{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Uf(0),this.tensorMap=new Map,np(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Uf(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ep((()=>{const e=sb(t),r=n.length,s=e.length;Wi(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];np(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ep((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return By(e)}))}findWithDefault(e,t){return this.tensorMap.get(e)??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function UY(e,t,n,r,s=ep){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Bj("a",e,t,n),Bj("b",e,t,n))];case"AddN":return[r.addN(Bj("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(Bj("a",e,t,n),Bj("b",e,t,n))];case"Mul":return[r.mul(Bj("a",e,t,n),Bj("b",e,t,n))];case"RealDiv":case"Div":return[r.div(Bj("a",e,t,n),Bj("b",e,t,n))];case"DivNoNan":return[r.divNoNan(Bj("a",e,t,n),Bj("b",e,t,n))];case"FloorDiv":return[r.floorDiv(Bj("a",e,t,n),Bj("b",e,t,n))];case"Sub":return[r.sub(Bj("a",e,t,n),Bj("b",e,t,n))];case"Minimum":return[r.minimum(Bj("a",e,t,n),Bj("b",e,t,n))];case"Maximum":return[r.maximum(Bj("a",e,t,n),Bj("b",e,t,n))];case"Pow":return[r.pow(Bj("a",e,t,n),Bj("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(Bj("a",e,t,n),Bj("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(Bj("x",e,t,n))];case"Acos":return[r.acos(Bj("x",e,t,n))];case"Acosh":return[r.acosh(Bj("x",e,t,n))];case"Asin":return[r.asin(Bj("x",e,t,n))];case"Asinh":return[r.asinh(Bj("x",e,t,n))];case"Atan":return[r.atan(Bj("x",e,t,n))];case"Atan2":return[r.atan2(Bj("x",e,t,n),Bj("y",e,t,n))];case"Atanh":return[r.atanh(Bj("x",e,t,n))];case"Ceil":return[r.ceil(Bj("x",e,t,n))];case"Complex":return[r.complex(Bj("real",e,t,n),Bj("imag",e,t,n))];case"Cos":return[r.cos(Bj("x",e,t,n))];case"Cosh":return[r.cosh(Bj("x",e,t,n))];case"Elu":return[r.elu(Bj("x",e,t,n))];case"Erf":return[r.erf(Bj("x",e,t,n))];case"Exp":return[r.exp(Bj("x",e,t,n))];case"Expm1":return[r.expm1(Bj("x",e,t,n))];case"Floor":return[r.floor(Bj("x",e,t,n))];case"Log":return[r.log(Bj("x",e,t,n))];case"Log1p":return[r.log1p(Bj("x",e,t,n))];case"Imag":return[r.imag(Bj("x",e,t,n))];case"Neg":return[r.neg(Bj("x",e,t,n))];case"Reciprocal":return[r.reciprocal(Bj("x",e,t,n))];case"Real":return[r.real(Bj("x",e,t,n))];case"Relu":return[r.relu(Bj("x",e,t,n))];case"Round":return[r.round(Bj("x",e,t,n))];case"Selu":return[r.selu(Bj("x",e,t,n))];case"Sigmoid":return[r.sigmoid(Bj("x",e,t,n))];case"Sin":return[r.sin(Bj("x",e,t,n))];case"Sign":return[r.sign(Bj("x",e,t,n))];case"Sinh":return[r.sinh(Bj("x",e,t,n))];case"Softplus":return[r.softplus(Bj("x",e,t,n))];case"Sqrt":return[r.sqrt(Bj("x",e,t,n))];case"Square":return[r.square(Bj("x",e,t,n))];case"Tanh":return[r.tanh(Bj("x",e,t,n))];case"Tan":return[r.tan(Bj("x",e,t,n))];case"ClipByValue":return[r.clipByValue(Bj("x",e,t,n),Bj("clipValueMin",e,t,n),Bj("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(Bj("x",e,t,n))];case"Rsqrt":return[r.rsqrt(Xj(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(Bj("x",e,t,n),Bj("alpha",e,t,n))];case"Prelu":return[r.prelu(Bj("x",e,t,n),Bj("alpha",e,t,n))];case"IsNan":return[r.isNaN(Xj(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(Xj(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(Xj(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Bj("thenBranch",e,t,n),s=Bj("elseBranch",e,t,n),a=Bj("cond",e,t,n),i=Bj("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Bj("body",e,t,n),s=Bj("cond",e,t,n),a=Bj("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[Yj(Bj("pred",e,t,n))];case"Switch":{const r=Bj("pred",e,t,n);let s=Bj("data",e,t,n);return s.kept||(s=Yj(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Xj(e,t,n)));return r?[Yj(Xj(r,t,n))]:void 0}case"Enter":{const r=Bj("frameName",e,t,n),s=Bj("tensor",e,t,n);return n.enterFrame(r),[Yj(s)]}case"Exit":{const r=Bj("tensor",e,t,n);return n.exitFrame(),[Yj(r)]}case"NextIteration":{const r=Bj("tensor",e,t,n);return n.nextIteration(),[Yj(r)]}case"TensorArrayV3":{const r=Bj("size",e,t,n),s=Bj("dtype",e,t,n),a=Bj("elementShape",e,t,n),i=Bj("dynamicSize",e,t,n),o=Bj("clearAfterRead",e,t,n),l=Bj("identicalElementShapes",e,t,n),u=Bj("name",e,t,n),c=new GY(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Uf(1)]}case"TensorArrayWriteV3":{const r=Bj("tensorArrayId",e,t,n),s=Bj("index",e,t,n),a=Bj("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=Bj("tensorArrayId",e,t,n),s=Bj("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Bj("tensorArrayId",e,t,n),s=Bj("indices",e,t,n),a=Bj("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Bj("tensorArrayId",e,t,n),s=Bj("indices",e,t,n),a=Bj("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=Bj("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=Bj("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Bj("tensorArrayId",e,t,n),s=Bj("tensor",e,t,n),a=Bj("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=Bj("tensorArrayId",e,t,n);return[Uf(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Bj("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Bj("tensorListId",e,t,n),s=Bj("index",e,t,n),a=Bj("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=Bj("tensorListId",e,t,n),s=Bj("index",e,t,n),a=Bj("elementShape",e,t,n),i=Bj("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Bj("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new zY([],n,e.dtype,r),i=sb(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(Bj("tensor",e,t,n),r,Bj("elementShape",e,t,n),Bj("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Bj("elementShape",e,t,n),s=Bj("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Bj(a,e,t,n),o=function(e,t,n,r){return new zY([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Bj("tensorListId",e,t,n),s=Bj("indices",e,t,n),a=Bj("elementShape",e,t,n),i=Bj("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=Bj("tensorListId",e,t,n),s=Bj("elementShape",e,t,n),a=Bj("elementDType",e,t,n),i=Bj("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);AY(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=sb(e);return new zY(s,t,r)}(Bj("tensor",e,t,n),Bj("elementShape",e,t,n),Bj("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Bj("tensorListId",e,t,n),s=n.getTensorList(r.id),a=Bj("dtype",e,t,n),i=Bj("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=Bj("tensorListId",e,t,n),s=Bj("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Bj("tensorListId",e,t,n),s=Bj("elementShape",e,t,n),a=Bj("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Bj("tensor",e,t,n),s=Bj("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=OY(e.shape.slice(1),n),i=0===r?0:e.size/r,o=ep((()=>{const n=[];e=Pm(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=Pm(Wm(e,o,l),a)}return e.dispose(),n})),l=new zY([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,Bj("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=Bj("tensorListId",e,t,n);return[Uf(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=Bj("tensorListId",e,t,n),s=Bj("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Conv1D":{const s=Bj("stride",e,t,n),a=Bj("pad",e,t,n),i=Bj("dataFormat",e,t,n).toUpperCase(),o=Bj("dilation",e,t,n);return[r.conv1d(Bj("x",e,t,n),Bj("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=Bj("strides",e,t,n),a=jj(e,t,n),i=Bj("dataFormat",e,t,n).toUpperCase(),o=Bj("dilations",e,t,n);return[r.conv2d(Bj("x",e,t,n),Bj("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=FY(e,t,n);return[r.fused.conv2d({x:Bj("x",e,t,n),filter:Bj("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=FY(e,t,n);return[r.fused.depthwiseConv2d({x:Bj("x",e,t,n),filter:Bj("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Bj("outputShape",e,t,n),a=Bj("strides",e,t,n),i=jj(e,t,n);return[r.conv2dTranspose(Bj("x",e,t,n),Bj("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Bj("strides",e,t,n),a=jj(e,t,n),i=Bj("dilations",e,t,n),o=Bj("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(Bj("input",e,t,n),Bj("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("dataFormat",e,t,n).toUpperCase(),o=Bj("dilations",e,t,n);return[r.conv3d(Bj("x",e,t,n),Bj("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("kernelSize",e,t,n);return[r.avgPool(Bj("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("kernelSize",e,t,n);return[r.maxPool(Bj("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("kernelSize",e,t,n),o=Bj("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(Bj("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("kernelSize",e,t,n);return[r.avgPool3d(Bj("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("kernelSize",e,t,n);return[r.maxPool3d(Bj("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=Bj("strides",e,t,n),a=Bj("pad",e,t,n),i=Bj("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(Bj("x",e,t,n),Bj("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Fill":{const s=Bj("shape",e,t,n),a=Bj("dtype",e,t,n),i=Bj("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=Bj("start",e,t,n),a=Bj("stop",e,t,n),i=Bj("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=Bj("logits",e,t,n),a=Bj("numSamples",e,t,n),i=Bj("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=Bj("indices",e,t,n),a=Bj("depth",e,t,n),i=Bj("onValue",e,t,n),o=Bj("offValue",e,t,n),l=Bj("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(Bj("shape",e,t,n),Bj("dtype",e,t,n))];case"OnesLike":return[r.onesLike(Bj("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(Bj("shape",e,t,n),Bj("dtype",e,t,n),Bj("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(Bj("shape",e,t,n),Bj("minval",e,t,n),Bj("maxval",e,t,n),Bj("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(Bj("shape",e,t,n),Bj("minval",e,t,n),Bj("maxval",e,t,n),Bj("seed",e,t,n))];case"Range":{const s=Bj("start",e,t,n),a=Bj("stop",e,t,n),i=Bj("step",e,t,n);return[r.range(s,a,i,Bj("dtype",e,t,n))]}case"TruncatedNormal":{const s=Bj("shape",e,t,n),a=Bj("mean",e,t,n),i=Bj("stdDev",e,t,n),o=Bj("seed",e,t,n);return[r.truncatedNormal(s,a,i,Bj("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(Bj("shape",e,t,n),Bj("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(Bj("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=LY)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=WY(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=WY(e,t,n),u=Bj("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=WY(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(Bj("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(Bj("x",e,t,n),Bj("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"LowerBound":{const s=Bj("sortedSequence",e,t,n),a=Bj("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=Bj("x",e,t,n),a=Bj("k",e,t,n),i=Bj("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=Bj("sortedSequence",e,t,n),a=Bj("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=Bj("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=Bj("x",e,t,n),a=Bj("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"ResizeBilinear":{const s=Bj("images",e,t,n),a=Bj("size",e,t,n),i=Bj("alignCorners",e,t,n),o=Bj("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=Bj("images",e,t,n),a=Bj("size",e,t,n),i=Bj("alignCorners",e,t,n),o=Bj("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=Bj("image",e,t,n),a=Bj("boxes",e,t,n),i=Bj("boxInd",e,t,n),o=Bj("cropSize",e,t,n),l=Bj("method",e,t,n),u=Bj("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=Bj("images",e,t,n),a=Bj("transforms",e,t,n),i=Bj("outputShape",e,t,n),o=Bj("fillValue",e,t,n),l=Bj("interpolation",e,t,n),u=Bj("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=Bj("default",e,t,n);return[Xj(e.name,t,n)||s];case"Placeholder":return[Xj(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Yj(Bj("x",e,t,n))];case"IdentityN":return Bj("x",e,t,n).map((e=>Yj(e)));case"Shape":return[r.tensor1d(Bj("x",e,t,n).shape,"int32")];case"ShapeN":return Bj("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(Bj("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(Bj("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=Bj("x",e,t,n),i=Bj("data",e,t,n),o=Bj("message",e,t,n),l=Bj("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Equal":return[r.equal(Bj("a",e,t,n),Bj("b",e,t,n))];case"NotEqual":return[r.notEqual(Bj("a",e,t,n),Bj("b",e,t,n))];case"Greater":return[r.greater(Bj("a",e,t,n),Bj("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(Bj("a",e,t,n),Bj("b",e,t,n))];case"Less":return[r.less(Bj("a",e,t,n),Bj("b",e,t,n))];case"LessEqual":return[r.lessEqual(Bj("a",e,t,n),Bj("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(Bj("a",e,t,n),Bj("b",e,t,n))];case"LogicalNot":return[r.logicalNot(Bj("a",e,t,n))];case"LogicalOr":return[r.logicalOr(Bj("a",e,t,n),Bj("b",e,t,n))];case"Select":case"SelectV2":return[r.where(Bj("condition",e,t,n),Bj("a",e,t,n),Bj("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(Bj("a",e,t,n),Bj("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Bj("a",e,t,n),Bj("b",e,t,n),Bj("transposeA",e,t,n),Bj("transposeB",e,t,n))];case"Einsum":return[r.einsum(Bj("equation",e,t,n),...Bj("tensors",e,t,n))];case"Transpose":return[r.transpose(Bj("x",e,t,n),Bj("perm",e,t,n))];case"_FusedMatMul":const[s,a]=Bj("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=Bj("numArgs",e,t,n),u=Bj("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Bj("args",e,t,n);return[r.fused.matMul({a:Bj("a",e,t,n),b:Bj("b",e,t,n),transposeA:Bj("transposeA",e,t,n),transposeB:Bj("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(Bj("a",e,t,n),Bj("numLower",e,t,n),Bj("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(Bj("x",e,t,n),Bj("axis",e,t,n),Bj("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Bj("x",e,t,n),Bj("mean",e,t,n),Bj("variance",e,t,n),Bj("offset",e,t,n),Bj("scale",e,t,n),Bj("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(Bj("x",e,t,n),Bj("radius",e,t,n),Bj("bias",e,t,n),Bj("alpha",e,t,n),Bj("beta",e,t,n))];case"Softmax":return[r.softmax(Bj("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(Bj("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(Bj("paramsNestedSplits",e,t,n),Bj("paramsDenseValues",e,t,n),Bj("indices",e,t,n),Bj("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(Bj("starts",e,t,n),Bj("limits",e,t,n),Bj("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(Bj("shape",e,t,n),Bj("values",e,t,n),Bj("defaultValue",e,t,n),Bj("rowPartitionTensors",e,t,n),Bj("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Max":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.max(Bj("x",e,t,n),s,a)]}case"Mean":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.mean(Bj("x",e,t,n),s,a)]}case"Min":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.min(Bj("x",e,t,n),s,a)]}case"Sum":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.sum(Bj("x",e,t,n),s,a)]}case"All":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.all(Bj("x",e,t,n),s,a)]}case"Any":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.any(Bj("x",e,t,n),s,a)]}case"ArgMax":{const s=Bj("axis",e,t,n);return[r.argMax(Bj("x",e,t,n),s)]}case"ArgMin":{const s=Bj("axis",e,t,n);return[r.argMin(Bj("x",e,t,n),s)]}case"Prod":{const s=Bj("axis",e,t,n),a=Bj("keepDims",e,t,n);return[r.prod(Bj("x",e,t,n),s,a)]}case"Cumprod":{const s=Bj("axis",e,t,n),a=Bj("exclusive",e,t,n),i=Bj("reverse",e,t,n);return[r.cumprod(Bj("x",e,t,n),s,a,i)]}case"Cumsum":{const s=Bj("axis",e,t,n),a=Bj("exclusive",e,t,n),i=Bj("reverse",e,t,n);return[r.cumsum(Bj("x",e,t,n),s,a,i)]}case"Bincount":const s=Bj("x",e,t,n),a=Bj("weights",e,t,n),i=Bj("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=Bj("x",e,t,n),a=Bj("weights",e,t,n),i=Bj("size",e,t,n),o=Bj("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=Bj("n",e,t,n),a=Bj("axis",e,t,n);let i=Bj("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=Bj("x",e,t,n),a=Bj("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=Bj("axis",e,t,n),a=Bj("batchDims",e,t,n),i=Bj("x",e,t,n),o=Bj("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=Bj("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=Bj("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=Bj("axis",e,t,n),a=Bj("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=Bj("begin",e,t,n),a=Bj("size",e,t,n);return[r.slice(Bj("x",e,t,n),s,a)]}case"StridedSlice":{const s=Bj("begin",e,t,n),a=Bj("end",e,t,n),i=Bj("strides",e,t,n),o=Bj("beginMask",e,t,n),l=Bj("endMask",e,t,n),u=Bj("ellipsisMask",e,t,n),c=Bj("newAxisMask",e,t,n),h=Bj("shrinkAxisMask",e,t,n),d=Bj("x",e,t,n);return[r.stridedSlice(d,s,a,i,o,l,u,c,h)]}case"Pack":return ep((()=>{const s=Bj("axis",e,t,n),a=Bj("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=$i(e.shape,i);if(!t&&!$i(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=Bj("axis",e,t,n),a=Bj("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=Bj("reps",e,t,n);return[r.tile(Bj("x",e,t,n),s)]}case"Split":case"SplitV":{const s=Bj("axis",e,t,n),a=Bj("numOrSizeSplits",e,t,n),i=Bj("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=Bj("indices",e,t,n),a=Bj("values",e,t,n),i=Bj("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=Bj("x",e,t,n),a=Bj("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=Bj("sparseIndices",e,t,n),a=Bj("outputShape",e,t,n),i=Bj("sparseValues",e,t,n),o=Bj("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=Bj("indices",e,t,n),a=Bj("values",e,t,n),i=Bj("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(Bj("indices",e,t,n),Bj("values",e,t,n),Bj("denseShape",e,t,n),Bj("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(Bj("inputIndices",e,t,n),Bj("inputShape",e,t,n),Bj("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(Bj("data",e,t,n),Bj("indices",e,t,n),Bj("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(Bj("data",e,t,n),Bj("indices",e,t,n),Bj("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"FFT":return[r.fft(Bj("x",e,t,n))];case"IFFT":return[r.ifft(Bj("x",e,t,n))];case"RFFT":return[r.rfft(Bj("x",e,t,n))];case"IRFFT":return[r.irfft(Bj("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(Bj("input",e,t,n),Bj("pattern",e,t,n),Bj("rewrite",e,t,n),Bj("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(Bj("data",e,t,n),Bj("dataSplits",e,t,n),Bj("separator",e,t,n),Bj("nGramWidths",e,t,n),Bj("leftPad",e,t,n),Bj("rightPad",e,t,n),Bj("padWidth",e,t,n),Bj("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(Bj("input",e,t,n),Bj("delimiter",e,t,n),Bj("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(Bj("input",e,t,n),Bj("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=LY)=>{switch(e.op){case"Cast":return[r.cast(Bj("x",e,t,n),Bj("dtype",e,t,n))];case"ExpandDims":{const s=Bj("axis",e,t,n);return[r.expandDims(Bj("x",e,t,n),s)]}case"Squeeze":{const s=Bj("axis",e,t,n);return[r.squeeze(Bj("x",e,t,n),s)]}case"Reshape":return[r.reshape(Bj("x",e,t,n),Bj("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(Bj("x",e,t,n),Bj("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(Bj("x",e,t,n),Bj("padding",e,t,n),Bj("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(Bj("x",e,t,n),Bj("padding",e,t,n),Bj("constantValue",e,t,n))];case"SpaceToBatchND":{const s=Bj("blockShape",e,t,n),a=Bj("paddings",e,t,n);return[r.spaceToBatchND(Bj("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=Bj("blockShape",e,t,n),a=Bj("crops",e,t,n);return[r.batchToSpaceND(Bj("x",e,t,n),s,a)]}case"DepthToSpace":{const s=Bj("blockSize",e,t,n),a=Bj("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(Bj("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(Bj("x",e,t,n),Bj("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(Bj("s0",e,t,n),Bj("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=Bj("keyDType",e,t,n),a=Bj("valueDType",e,t,n),i=new VY(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=Bj("tableHandle",e,t,n,r),a=Bj("keys",e,t,n),i=Bj("values",e,t,n);return[await r.getHashTableById(s.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Bj("tableHandle",e,t,n,r),a=Bj("keys",e,t,n),i=Bj("defaultValue",e,t,n);return[await r.getHashTableById(s.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Bj("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Uj(e.op);if(a&&a.customExecutor)return a.customExecutor(new RY(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return To(a)?a.then((e=>[].concat(e))):[].concat(a)}class BY{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function XY(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>Kj(e)[0])));r=r||[];const c=new Set(r.map((e=>Kj(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();if((jY(e)||YY(e)||QY(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&!u.has(e.name)&&!c.has(e.name)){if(0===e.inputs.length){a.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))}))}}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}class $Y extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const HY=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),ZY=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),KY=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function jY(e){return HY.has(e.op)}function YY(e){return ZY.has(e.op)}function QY(e){return KY.has(e.op)}class JY{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new JY(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=XY(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=function(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>Kj(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),h={};for(const e of u){h[e.name]=h[e.name]||0;for(const t of e.children)i(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const d=Object.entries(h).filter((([,e])=>0===e)).map((([e])=>e)),p=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const e of t.children.filter(i))0==--h[e.name]&&(p.push(e.name),d.push(e.name))}const m=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)!n.has(e.name)||s.has(e.name)||(s.add(e.name),r.push(e.name))}return e.filter((e=>s.has(e.name)))}(p.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new $Y(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new $Y(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new $Y(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new $Y(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(m,l),m}(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>jY(e)?n:t)),s=e=>r[t.get(e.name)]??-1,a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return np(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Kj(e)[0]])),s=t.map((e=>Kj(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Mo().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const u={},c={};return ep((()=>{const n=new BY(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=Kj(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=UY(e,r,n,this._resourceManager);if(To(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>Xj(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!jY(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(jY(e))continue;const t=$j(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return jY(e)||s.has(e.name)}if(!jY(e)&&null!=a)for(const e of a){if(i(e))continue;const s=$j(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Mo().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new BY(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Xj(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!c.has(e.id)&&e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[Kj(e)[0]])),i=n.map((e=>Kj(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:d}=XY(e,l,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),m=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Kj(t),s=[];s[r]=e[t],m[n]=s}));const f={},g=this.getFrozenTensorIds(m),y={};for(;p.length>0;){const e=this.processStack(a,p,t,m,y,g,o,f,u);await Promise.all(e)}null==h&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!jY(e)&&!Xj(e.name,m,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return m}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Bj("isConstant",e.node,r,n)&&([c]=Hj(e.node.name,n)),null==r[e.node.name]){const h=UY(e.node,r,n,this._resourceManager);c||([c]=Hj(e.node.name,n));const d=n.currentContext;To(h)?u.push(h.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=Hj(e.name,n);s[i]||!a.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!Xj(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Xj(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Kj(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;Wi(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&Wi(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Kj(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Kj(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class qY{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class eQ{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=pj){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new qY}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return To(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await dp(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new JY(gY.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=gY.Instance.transformGraph(e.modelInitializer);this.initializer=new JY(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof ud?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof ud||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&tp(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}const tQ="4.16.0";class nQ extends GN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const rQ='"',sQ=Symbol("out"),aQ=Symbol("field"),iQ=Symbol("quote"),oQ=Symbol("quoteafterquote"),lQ=Symbol("quoteinquote");class uQ extends GN{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Wi(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Wi(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");const t=e.value;return this.parseRow(t,!1)}return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new nQ(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Wi(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=sQ;for(let t=0;t<s;t++)switch(a){case sQ:switch(e.charAt(t)){case rQ:r=t+1,a=iQ;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=sQ;break;default:a=aQ,r=t}break;case aQ:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),a=sQ,r=t+1);break;case iQ:e.charAt(t)===rQ&&(a=oQ);break;case oQ:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=sQ,r=t+1;break;case rQ:a=iQ;break;default:a=lQ}break;case lQ:e.charAt(t)===rQ&&(a=iQ)}if(a===oQ?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class cQ extends vN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Mo().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new cQ(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(Bi(t));return n.set(e,n.length-e.length),jd(n,t)}}class hQ extends vN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Zy([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=Ky([r,n,a,s],[1,4])}else this.cropBox=Ky([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Mo().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new hQ(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Wi("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=jx(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return ep((()=>{const t=Yf(em(e,"float32"),0);let n;n=gx.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return Pm(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class dQ{}class pQ extends vN{split(e){return new mQ(this,e)}}class mQ extends pQ{constructor(e,t){super(),this.upstream=e,this.impl=new fQ(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class fQ extends RN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class gQ extends vN{decodeUTF8(){return new yQ(this)}}class yQ extends pQ{constructor(e){super(),this.upstream=e,this.impl=new bQ(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class bQ extends RN{constructor(e){if(super(),this.upstream=e,Mo().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=require("string_decoder");this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Mo().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class xQ extends gQ{constructor(e,t={}){super(),this.file=e,this.options=t,Wi(e instanceof Uint8Array||!!Mo().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n})),done:!1}}}function vQ(e){return"string"==typeof e&&"file://"===e.slice(0,7)}class wQ extends dQ{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(vQ(this.input)&&Mo().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new xQ(this.input,this.options)}}class SQ extends dQ{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return vQ(this.url)?new wQ(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;"string"==typeof e?r=e:(r=e.url,s=(e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity}))(e));const a=await(n||Hh)(r,s);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new xQ(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}const TQ="4.16.0",_Q=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:uQ,Dataset:GN,FileDataSource:wQ,TextLineDataset:nQ,URLDataSource:SQ,array:function(e){return zN((async()=>bN(e)),e.length)},csv:function(e,t={}){return new uQ(new SQ(e),t)},func:function(e){const t=xN(e);return zN((async()=>t))},generator:function(e){return zN((async()=>{const t=await e();return xN((()=>t.next()))}))},microphone:async function(e){return cQ.create(e)},version_data:TQ,webcam:async function(e,t){return hQ.create(e,t)},zip:function(e){if(!pN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return zN((async()=>function(e,t=oN.FAIL){return new PN(e,t)}(await dN(e,(e=>{if(e instanceof GN)return{value:e.iterator(),recurse:!1};if(pN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),oN.SHORTEST)),t)}},Symbol.toStringTag,{value:"Module"})),IQ="4.16.0",CQ="4.16.0",MQ={"tfjs-core":gj,"tfjs-backend-cpu":IQ,"tfjs-backend-webgl":CQ,"tfjs-data":TQ,"tfjs-layers":IC,"tfjs-converter":tQ,tfjs:"4.16.0"},EQ=Object.freeze(Object.defineProperty({__proto__:null,Abs:Lo,Acos:Ao,Acosh:Po,AdadeltaOptimizer:Ex,AdagradOptimizer:Nx,AdamOptimizer:kx,AdamaxOptimizer:Rx,Add:Do,AddN:Oo,All:Go,Any:zo,ArgMax:Fo,ArgMin:Wo,Asin:Vo,Asinh:Uo,Atan:Bo,Atan2:$o,Atanh:Xo,AvgPool:Ho,AvgPool3D:Ko,AvgPool3DGrad:jo,AvgPoolGrad:Zo,BatchMatMul:Yo,BatchToSpaceND:Qo,Bincount:Jo,BitwiseAnd:qo,BroadcastArgs:tl,BroadcastTo:el,Callback:Oj,CallbackList:VI,Cast:nl,Ceil:rl,ClipByValue:sl,Complex:al,ComplexAbs:il,Concat:ol,Conv2D:ll,Conv2DBackpropFilter:ul,Conv2DBackpropInput:cl,Conv3D:hl,Conv3DBackpropFilterV2:dl,Conv3DBackpropInputV2:pl,Cos:ml,Cosh:fl,CropAndResize:bl,Cumprod:gl,Cumsum:yl,CustomCallback:XI,DataStorage:Li,DenseBincount:xl,DepthToSpace:vl,DepthwiseConv2dNative:wl,DepthwiseConv2dNativeBackpropFilter:Sl,DepthwiseConv2dNativeBackpropInput:Tl,Diag:_l,Dilation2D:Il,Dilation2DBackpropFilter:Ml,Dilation2DBackpropInput:Cl,Draw:El,get ENV(){return No},EarlyStopping:Fj,Einsum:kl,Elu:Rl,EluGrad:Ll,Environment:Io,Equal:Pl,Erf:Al,Exp:Dl,ExpandDims:Ol,Expm1:Gl,FFT:zl,Fill:Fl,FlipLeftRight:Wl,Floor:Vl,FloorDiv:Ul,FromPixels:Wc,FusedBatchNorm:Bl,FusedConv2D:Bc,FusedDepthwiseConv2D:Xc,GPGPUContext:Sz,GatherNd:$l,GatherV2:Xl,GraphModel:eQ,Greater:Hl,GreaterEqual:Zl,History:BI,IFFT:jl,Identity:Kl,Imag:Yl,InputSpec:hI,IsFinite:Ql,IsInf:Jl,IsNan:ql,KernelBackend:Ai,LRN:cu,LRNGrad:hu,LayerVariable:lI,LayersModel:BC,LeakyRelu:eu,Less:tu,LessEqual:nu,LinSpace:ru,Log:su,Log1p:au,LogSoftmax:uu,LogicalAnd:iu,LogicalNot:ou,LogicalOr:lu,LogicalXor:"LogicalXor",LowerBound:"LowerBound",MathBackendCPU:BN,MathBackendWebGL:GF,MatrixBandPart:"MatrixBandPart",Max:du,MaxPool:mu,MaxPool3D:gu,MaxPool3DGrad:yu,MaxPoolGrad:fu,MaxPoolWithArgmax:bu,Maximum:pu,Mean:xu,Min:vu,Minimum:wu,MirrorPad:Su,Mod:Tu,MomentumOptimizer:Ax,Multinomial:_u,Multiply:Iu,Neg:Cu,NonMaxSuppressionV3:Eu,NonMaxSuppressionV4:Nu,NonMaxSuppressionV5:ku,NotEqual:Mu,OP_SCOPE_SUFFIX:$d,OneHot:Lu,OnesLike:Ru,Optimizer:Mx,OptimizerConstructors:fv,Pack:Au,PadV2:Pu,Pool:"Pool",Pow:Du,Prelu:Ou,Prod:Gu,RMSPropOptimizer:Px,RNN:BM,RaggedGather:zu,RaggedRange:Fu,RaggedTensorToTensor:Wu,Range:Vu,get Rank(){return dd},Real:Uu,RealDiv:Nl,Reciprocal:Bu,get Reduction(){return Yb},Relu:Xu,Relu6:Yu,Reshape:$u,ResizeBilinear:Ku,ResizeBilinearGrad:ju,ResizeNearestNeighbor:Hu,ResizeNearestNeighborGrad:Zu,Reverse:Qu,RotateWithOffset:Vc,Round:Ju,Rsqrt:qu,SGDOptimizer:Lx,ScatterNd:ec,SearchSorted:nc,Select:rc,Selu:sc,Sequential:$C,Sigmoid:uc,Sign:lc,Sin:ic,Sinh:oc,Slice:ac,Softmax:fc,Softplus:cc,SpaceToBatchND:pc,SparseFillEmptyRows:gc,SparseReshape:yc,SparseSegmentMean:bc,SparseSegmentSum:xc,SparseToDense:vc,SplitV:mc,Sqrt:hc,Square:Sc,SquaredDifference:wc,StaticRegexReplace:Tc,Step:Fc,StridedSlice:_c,StringNGrams:Ic,StringSplit:Cc,StringToHashBucketFast:Mc,Sub:Ec,Sum:dc,SymbolicTensor:dI,Tan:Nc,Tanh:kc,Tensor:ud,TensorBuffer:id,TensorScatterUpdate:tc,Tile:Rc,TopK:Lc,Transform:Ac,Transpose:Pc,Unique:Dc,Unpack:Oc,UnsortedSegmentSum:Gc,UpperBound:"UpperBound",Variable:hd,ZerosLike:zc,_FusedMatMul:Uc,abs:om,acos:lm,acosh:um,add:rm,addN:hK,all:cm,any:hm,argMax:dm,argMin:pm,asin:mm,asinh:fm,atan:gm,atan2:ym,atanh:bm,avgPool:Dm,avgPool3d:Om,backend:ap,backend_util:bw,basicLSTMCell:dK,batchNorm:Xm,batchNorm2d:$m,batchNorm3d:Hm,batchNorm4d:Zm,batchToSpaceND:Um,bincount:Km,bitwiseAnd:pK,booleanMaskAsync:JK,broadcastArgs:mK,broadcastTo:jm,broadcast_util:Sf,browser:Yx,buffer:qp,callbacks:Wj,cast:em,ceil:Ym,clipByValue:Jm,clone:tm,complex:Zd,concat:Gm,concat1d:qm,concat2d:ef,concat3d:tf,concat4d:nf,constraints:bj,conv1d:sf,conv2d:rf,conv2dTranspose:of,conv3d:lf,conv3dTranspose:cf,copyRegisteredKernels:function(e,t){Yc(e).forEach((e=>{Qc(Object.assign({},e,{backendName:t}))}))},cos:hf,cosh:df,cosineWindow:cb,cumprod:pf,cumsum:mf,customGrad:fg,data:_Q,denseBincount:ff,deprecationWarn:function(e){Mo().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")},depthToSpace:gf,depthwiseConv2d:yf,deregisterOp:function(e){delete Vj[e]},device_util:zd,diag:fK,dilation2d:bf,disableDeprecationWarnings:function(){Mo().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")},dispose:tp,disposeVariables:function(){Ad.disposeVariables()},div:am,divNoNan:Cf,dot:Mf,dropout:lb,einsum:Ef,elu:Nf,enableDebugMode:function(){Mo().set("DEBUG",!0)},enableProdMode:function(){Mo().set("PROD",!0)},enclosingPowerOfTwo:ub,engine:Jd,ensureShape:gK,env:Mo,equal:Tf,erf:kf,euclideanNorm:Kf,exp:jf,expandDims:Yf,expm1:Qf,eye:qf,fft:Oy,fill:Qm,findBackend:function(e){return Ad.findBackend(e)},findBackendFactory:function(e){return Ad.findBackendFactory(e)},floor:eg,floorDiv:sm,forceHalfFloat:zF,fused:aj,gather:tg,gatherND:nj,gather_util:Jx,getBackend:rp,getGradient:jc,getKernel:Kc,getKernelsForBackend:Yc,gpgpu_util:wz,grad:function(e){return Wi(co(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Bd(t,"x","tf.grad","string_or_numeric"),s=null!=n?Bd(n,"dy","tf.grad"):null;return Ad.tidy((()=>{const{value:t,grads:n}=Ad.gradients((()=>e(r)),[r],s);return null!=s&&Vi(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),gg(n),n[0]}))}},grads:function(e){return Wi(co(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Wi(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Xd(t,"args","tf.grads","string_or_numeric"),s=null!=n?Bd(n,"dy","tf.grads"):null;return Ad.tidy((()=>{const{value:t,grads:n}=Ad.gradients((()=>e(...r)),r,s);return null!=s&&Vi(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gg(n),n}))}},greater:ng,greaterEqual:rg,ifft:Gy,imag:sg,image:gx,inTopKAsync:rj,initializers:xj,input:vj,io:pj,irfft:zy,isFinite:ag,isInf:ig,isNaN:og,keep:np,kernel_impls:yj,layers:Lj,leakyRelu:lg,less:ug,lessEqual:cg,linalg:yx,linspace:yK,loadGraphModel:async function(e,t={},n=pj){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}model.json?tfjs-format=file`}(e));const r=new eQ(e,t,n);return await r.load(),r},loadGraphModelSync:function(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(r&&r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");t=dj(xp(n,Sp(n.weightsManifest),r))}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=dj(e)}const n=new eQ(t);return n.load(),n},loadLayersModel:async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ip(e,t);if(0===n.length)n.push(Xx(e,t));else if(n.length>1)throw new TT(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new TT("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=KI(TC(s),void 0,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new TT("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=op(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),tp(e),tp(t.map((e=>e.tensor)))}return o}(e,0,t)},localResponseNormalization:hg,log:dg,log1p:pg,logSigmoid:xg,logSoftmax:wg,logSumExp:Sg,logicalAnd:Tg,logicalNot:_g,logicalOr:Ig,logicalXor:Cg,losses:bx,lowerBound:vK,matMul:zm,math:fj,max:Ff,maxPool:Mg,maxPool3d:Eg,maxPoolWithArgmax:wK,maximum:Ng,mean:kg,memory:qd,meshgrid:SK,metrics:Aj,min:Wf,minimum:Ag,mirrorPad:Pg,mod:Dg,model:function(e){return new BC(e)},models:Pj,moments:Og,movingAverage:qK,mul:im,multiRNNCell:TK,multinomial:_K,neg:yg,nextFrame:bv,norm:Zf,notEqual:Gg,oneHot:zg,ones:Lg,onesLike:Fg,op:Hd,outerProduct:IK,pad:Wg,pad1d:CK,pad2d:MK,pad3d:EK,pad4d:NK,pool:Ug,pow:Vf,prelu:Bg,print:nm,prod:Xg,profile:function(e){return Ad.profile(e)},raggedGather:kK,raggedRange:RK,raggedTensorToTensor:LK,rand:AK,randomGamma:zK,randomNormal:gy,randomStandardNormal:FK,randomUniform:yy,randomUniformInt:WK,range:by,ready:function(){return Ad.ready()},real:xy,reciprocal:vy,registerBackend:sp,registerCallbackConstructor:function(e,t){HI.registerCallbackConstructor(e,t)},registerGradient:Jc,registerKernel:Qc,registerOp:function(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Vj[e]=n},regularizers:Dj,relu:wy,relu6:Sy,removeBackend:function(e){Ad.removeBackend(e)},reshape:Pm,reverse:Ty,reverse1d:VK,reverse2d:UK,reverse3d:BK,reverse4d:XK,rfft:Wy,round:_y,rsqrt:Iy,scalar:Uf,scatterND:ej,scatter_util:qy,searchSorted:xK,selu:Cy,separableConv2d:My,sequential:function(e){return new $C(e)},serialization:Cx,setBackend:function(e){return Ad.setBackend(e)},setPlatform:function(e,t){Mo().setPlatform(e,t)},setWebGLContext:SO,setdiff1dAsync:$K,shared:mL,sigmoid:Fm,sign:Ey,signal:fx,sin:Ny,sinh:ky,slice:Wm,slice1d:Ry,slice2d:Ly,slice3d:Ay,slice4d:Py,slice_util:mv,softmax:Dy,softplus:bg,spaceToBatchND:Vg,sparse:xx,sparseToDense:tj,spectral:mx,split:Fy,sqrt:Bf,square:Xf,squaredDifference:Vy,squeeze:Uy,stack:By,step:Xy,stridedSlice:$y,string:vx,sub:vg,sum:$f,sumOutType:vd,tan:Hy,tanh:Vm,tensor:jd,tensor1d:Zy,tensor2d:Ky,tensor3d:jy,tensor4d:HK,tensor5d:ZK,tensor6d:KK,tensorScatterUpdate:jK,tensor_util:Ed,test_util:GK,tidy:ep,tile:Jf,time:function(e){return Ad.time(e)},topk:eb,train:gv,transpose:ob,truncatedNormal:tb,unique:nb,unregisterGradient:function(e){if(!Zc.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Zc.delete(e)},unregisterKernel:function(e,t){const n=qc(e,t);if(!Hc.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Hc.delete(n)},unsortedSegmentSum:rb,unstack:sb,upcastType:xd,upperBound:YK,util:Qh,valueAndGrad:function(e){return Wi(co(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Wi(t instanceof ud,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Wi(null==n||n instanceof ud,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=Ad.gradients((()=>e(t)),[t],n);return gg(r),{grad:r[0],value:s}}},valueAndGrads:function(e){return Wi(co(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Wi(Array.isArray(t)&&t.every((e=>e instanceof ud)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Wi(null==n||n instanceof ud,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=Ad.gradients((()=>e(...t)),t,n);return null!=n&&Vi(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gg(r.grads),r}},variable:ab,variableGrads:mg,version:MQ,version_converter:tQ,version_core:gj,version_cpu:IQ,version_layers:IC,version_webgl:CQ,webgl:FF,webgl_util:SG,where:_f,whereAsync:QK,zeros:Rg,zerosLike:If},Symbol.toStringTag,{value:"Module"})),NQ=new Dt;NQ.compose(new at,new st,new at(.001,.001,.001));const kQ=(new Dt).set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);class RQ{constructor({container:e,imageTargetSrc:t,maxTrack:n,uiLoading:r="yes",uiScanning:s="yes",uiError:a="yes",filterMinCF:i=null,filterBeta:o=null,warmupTolerance:l=null,missTolerance:u=null,userDeviceId:c=null,environmentDeviceId:h=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=n,this.filterMinCF=i,this.filterBeta=o,this.warmupTolerance=l,this.missTolerance=u,this.ui=new ki({uiLoading:r,uiScanning:s,uiError:a}),this.userDeviceId=c,this.environmentDeviceId=h,this.shouldFaceUser=!1,this.scene=new li,this.cssScene=new li,this.renderer=new oi({antialias:!0,alpha:!0}),this.cssRenderer=new cK({antialias:!0}),this.renderer.outputEncoding=Q,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new fr,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove()}switchCamera(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()}addAnchor(e){const t=new ti;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!1,visible:!1};return this.anchors.push(n),this.scene.add(t),n}addCSSAnchor(e){const t=new ti;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!0,visible:!1};return this.anchors.push(n),this.cssScene.add(t),n}_startVideo(){return new Promise(((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void t();const n={audio:!1,video:{}};this.shouldFaceUser?this.userDeviceId?n.video.deviceId={exact:this.userDeviceId}:n.video.facingMode="user":this.environmentDeviceId?n.video.deviceId={exact:this.environmentDeviceId}:n.video.facingMode="environment",navigator.mediaDevices.getUserMedia(n).then((t=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()})),this.video.srcObject=t})).catch((e=>{console.log("getUserMedia error",e),t()}))}))}_startAR(){return new Promise((async(e,t)=>{const n=this.video;this.container,this.controller=new sK({inputWidth:n.videoWidth,inputHeight:n.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:e=>{if("updateMatrix"===e.type){const{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchors.length;e++)if(this.anchors[e].targetIndex===t){if(this.anchors[e].css?this.anchors[e].group.children.forEach((e=>{e.element.style.visibility=null===n?"hidden":"visible"})):this.anchors[e].group.visible=null!==n,null!==n){let r=new Dt;r.elements=[...n],r.multiply(this.postMatrixs[t]),this.anchors[e].css&&r.multiply(NQ),this.anchors[e].group.matrix=r}else this.anchors[e].group.matrix=kQ;this.anchors[e].visible&&null===n&&(this.anchors[e].visible=!1,this.anchors[e].onTargetLost&&this.anchors[e].onTargetLost()),!this.anchors[e].visible&&null!==n&&(this.anchors[e].visible=!0,this.anchors[e].onTargetFound&&this.anchors[e].onTargetFound()),this.anchors[e].onTargetUpdate&&this.anchors[e].onTargetUpdate()}this.anchors.reduce(((e,t)=>e||t.visible),!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this.resize();const{dimensions:r}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let e=0;e<r.length;e++){const t=new at,n=new st,s=new at,[a,i]=r[e];t.x=a/2,t.y=a/2+(i-a)/2,s.x=a,s.y=a,s.z=a;const o=new Dt;o.compose(t,n,s),this.postMatrixs.push(o)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()}))}resize(){const{renderer:e,cssRenderer:t,camera:n,container:r,video:s}=this;if(!s)return;let a,i;this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight);const o=s.videoWidth/s.videoHeight,l=r.clientWidth/r.clientHeight;o>l?(i=r.clientHeight,a=i*o):(a=r.clientWidth,i=a/o);const u=this.controller.getProjectionMatrix(),c=this.controller.inputWidth/this.controller.inputHeight;let h,d,p;h=c>l?this.video.width/this.controller.inputWidth:this.video.height/this.controller.inputHeight,c>l?(d=r.clientHeight,d*=h):(p=r.clientWidth,d=p/this.controller.inputWidth*this.controller.inputHeight,d*=h);let m=r.clientHeight/d;const f=2*Math.atan(1/u[5]*m)*180/Math.PI,g=u[14]/(u[10]-1),y=u[14]/(u[10]+1);u[5],u[0],n.fov=f,n.near=g,n.far=y,n.aspect=r.clientWidth/r.clientHeight,n.updateProjectionMatrix(),s.style.top=-(i-r.clientHeight)/2+"px",s.style.left=-(a-r.clientWidth)/2+"px",s.style.width=a+"px",s.style.height=i+"px";const b=e.domElement,x=t.domElement;b.style.position="absolute",b.style.left=0,b.style.top=0,b.style.width=r.clientWidth+"px",b.style.height=r.clientHeight+"px",x.style.position="absolute",x.style.left=0,x.style.top=0,x.style.width=r.clientWidth+"px",x.style.height=r.clientHeight+"px",e.setSize(r.clientWidth,r.clientHeight),t.setSize(r.clientWidth,r.clientHeight)}}let LQ;window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE={}),window.MINDAR.IMAGE.MindARThree=RQ,window.MINDAR.IMAGE.tf=EQ;let AQ,PQ=[];async function DQ(e){const t=`${AQ.basePath}${e.folder}/${AQ.targetsFile}`;LQ&&await LQ.stop(),LQ=new RQ({container:document.querySelector("#mindar-container"),imageTargetSrc:t}),await LQ.start().then((()=>{var t,n;console.log("AR Experience loaded:",e.name),t=e.images,n=e.folder,t.forEach(((e,t)=>{const r=e.properties;if(!r)return void console.error(`Properties are undefined for image entry at index ${t}`,e);const s=LQ.addAnchor(t),a=`${AQ.basePath}${n}/${e.video}`,{width:i,height:o,opacity:l}=r;if(void 0===i||void 0===o||void 0===l)return void console.error(`Missing properties for media entry at index ${t}:`,e);const{plane:u,video:c}=function(e,t,n,r){const s=document.createElement("video");s.src=e,s.loop=!0,s.muted=!0,s.playsInline=!0,s.crossOrigin="anonymous",s.load(),s.addEventListener("canplay",(()=>{s.play()}));const a=new ui(s),i=new Nr(1,1/(t/n)),o=new En({map:a,transparent:!0,opacity:r});return{plane:new ir(i,o),video:s}}(a,i,o,l);s.group.add(u),s.onTargetFound=()=>{c.play(),function(e){const t=e.rgbShiftIntensity||0,n=e.glowIntensity||0,r=e.glitchAmount||.1;chromaticAberrationPass.uniforms.amount.value=t,glowPass.uniforms.glowIntensity.value=n,chromaticAberrationPass.uniforms.glitchAmount.value=r}(r)},s.onTargetLost=()=>{c.pause()}}))})).catch((e=>{console.error("Failed to start AR session:",e)}))}window.addEventListener("DOMContentLoaded",(async()=>{AQ=await fetch("./experiences.json").then((e=>e.json())),PQ=AQ.experiences,DQ(PQ[0]),function(e){const t=document.getElementById("experience-menu");e.experiences.forEach((n=>{const r=document.createElement("img");r.src=`${e.basePath}${n.folder}/${e.thumbsFile}`,r.alt=n.name,r.className="thumbnail",r.addEventListener("click",(()=>{DQ(n)})),t.appendChild(r)}))}(AQ);const e=document.getElementById("attribution"),t=document.getElementById("site-credits");e.addEventListener("click",(()=>{t.style.display="none"===t.style.display||""===t.style.display?"block":"none"}))}))})();